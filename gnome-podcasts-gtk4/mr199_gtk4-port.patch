From f00c96e09e382c3b7cbc375f1454b5a9c194cc1f Mon Sep 17 00:00:00 2001
From: Christopher Davis <brainblasted@disroot.org>
Date: Sun, 18 Oct 2020 01:56:05 -0700
Subject: [PATCH 01/23] Port to GTK4

Co-authored-by: Maximiliano Sandoval R <msandova@gnome.org>
---
 Cargo.lock                                    | 269 +++++++++++-------
 README.md                                     |   4 +-
 meson.build                                   |   4 +-
 org.gnome.Podcasts.Devel.json                 |   1 +
 podcasts-gtk/Cargo.toml                       |   8 +-
 podcasts-gtk/resources/gtk/empty_view.ui      |  71 ++---
 .../resources/gtk/episode_description.ui      | 128 +--------
 podcasts-gtk/resources/gtk/episode_menu.ui    |   1 -
 podcasts-gtk/resources/gtk/episode_widget.ui  |  87 +-----
 podcasts-gtk/resources/gtk/headerbar.ui       | 132 ++-------
 podcasts-gtk/resources/gtk/help-overlay.ui    |   4 -
 podcasts-gtk/resources/gtk/home_episode.ui    |   8 -
 podcasts-gtk/resources/gtk/home_view.ui       |  39 +--
 podcasts-gtk/resources/gtk/inapp_notif.ui     |  25 +-
 podcasts-gtk/resources/gtk/player_dialog.ui   |  98 +------
 podcasts-gtk/resources/gtk/player_rate.ui     |  28 +-
 podcasts-gtk/resources/gtk/player_toolbar.ui  | 163 ++++-------
 podcasts-gtk/resources/gtk/show_menu.ui       |   1 -
 podcasts-gtk/resources/gtk/show_widget.ui     | 107 +++----
 podcasts-gtk/resources/gtk/style.css          |   2 +-
 .../org.gnome.Podcasts.gschema.xml.in         |   8 -
 podcasts-gtk/src/app.rs                       |  62 ++--
 podcasts-gtk/src/headerbar.rs                 |  32 +--
 podcasts-gtk/src/main.rs                      |  16 +-
 podcasts-gtk/src/settings.rs                  |  29 +-
 podcasts-gtk/src/stacks/content.rs            |  28 +-
 podcasts-gtk/src/stacks/home.rs               |  12 +-
 podcasts-gtk/src/stacks/populated.rs          |  23 +-
 podcasts-gtk/src/stacks/show.rs               |   6 +-
 podcasts-gtk/src/utils.rs                     | 126 ++++----
 podcasts-gtk/src/widgets/aboutdialog.rs       |  40 ++-
 podcasts-gtk/src/widgets/appnotif.rs          |   7 +-
 podcasts-gtk/src/widgets/base_view.rs         |  13 +-
 podcasts-gtk/src/widgets/empty.rs             |   7 +-
 podcasts-gtk/src/widgets/episode.rs           |  28 +-
 .../src/widgets/episode_description.rs        |  23 +-
 podcasts-gtk/src/widgets/episode_menu.rs      |   4 +-
 podcasts-gtk/src/widgets/home_view.rs         |  42 +--
 podcasts-gtk/src/widgets/player.rs            |  75 ++---
 podcasts-gtk/src/widgets/show.rs              |  27 +-
 podcasts-gtk/src/widgets/show_menu.rs         |  49 ++--
 podcasts-gtk/src/widgets/shows_view.rs        |  38 +--
 podcasts-gtk/src/window.rs                    |  47 ++-
 43 files changed, 649 insertions(+), 1273 deletions(-)

diff --git a/Cargo.lock b/Cargo.lock
index 0c91dab0..8a796749 100644
--- a/Cargo.lock
+++ b/Cargo.lock
@@ -41,30 +41,6 @@ version = "1.0.52"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "84450d0b4a8bd1ba4144ce8ce718fbc5d071358b1e5384bace6536b3d1f2d5b3"
 
-[[package]]
-name = "atk"
-version = "0.14.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "a83b21d2aa75e464db56225e1bda2dd5993311ba1095acaa8fa03d1ae67026ba"
-dependencies = [
- "atk-sys",
- "bitflags",
- "glib 0.14.8",
- "libc",
-]
-
-[[package]]
-name = "atk-sys"
-version = "0.14.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "badcf670157c84bb8b1cf6b5f70b650fed78da2033c9eed84c4e49b11cbe83ea"
-dependencies = [
- "glib-sys 0.14.0",
- "gobject-sys 0.14.0",
- "libc",
- "system-deps 3.2.0",
-]
-
 [[package]]
 name = "atom_syndication"
 version = "0.11.0"
@@ -164,6 +140,15 @@ dependencies = [
  "smallvec",
 ]
 
+[[package]]
+name = "cfg-expr"
+version = "0.9.0"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "edae0b9625d1fce32f7d64b71784d9b1bf8469ec1a9c417e44aaf16a9cbd7571"
+dependencies = [
+ "smallvec",
+]
+
 [[package]]
 name = "cfg-if"
 version = "1.0.0"
@@ -638,22 +623,6 @@ dependencies = [
  "slab",
 ]
 
-[[package]]
-name = "gdk"
-version = "0.14.3"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "b9d749dcfc00d8de0d7c3a289e04a04293eb5ba3d8a4e64d64911d481fa9933b"
-dependencies = [
- "bitflags",
- "cairo-rs",
- "gdk-pixbuf",
- "gdk-sys",
- "gio",
- "glib 0.14.8",
- "libc",
- "pango",
-]
-
 [[package]]
 name = "gdk-pixbuf"
 version = "0.14.0"
@@ -680,20 +649,36 @@ dependencies = [
 ]
 
 [[package]]
-name = "gdk-sys"
-version = "0.14.0"
+name = "gdk4"
+version = "0.3.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "0e091b3d3d6696949ac3b3fb3c62090e5bfd7bd6850bef5c3c5ea701de1b1f1e"
+checksum = "f97a162c17214d1bf981af3f683156a0b1667dd1927057c4f0a68513251ecf0f"
+dependencies = [
+ "bitflags",
+ "cairo-rs",
+ "gdk-pixbuf",
+ "gdk4-sys",
+ "gio",
+ "glib 0.14.8",
+ "libc",
+ "pango",
+]
+
+[[package]]
+name = "gdk4-sys"
+version = "0.3.1"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "9498f4e06969fb96a4e4234dfe1d308a3ac6b120b3c6d93e3ec5c77fe88bc6d5"
 dependencies = [
  "cairo-sys-rs",
  "gdk-pixbuf-sys",
  "gio-sys",
  "glib-sys 0.14.0",
  "gobject-sys 0.14.0",
+ "graphene-sys",
  "libc",
  "pango-sys",
- "pkg-config",
- "system-deps 3.2.0",
+ "system-deps 5.0.0",
 ]
 
 [[package]]
@@ -882,6 +867,61 @@ dependencies = [
  "system-deps 3.2.0",
 ]
 
+[[package]]
+name = "graphene-rs"
+version = "0.14.8"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "e3380f132530ef9eb9e0a2bac180e30390aa5e49892d20294f822a974117a563"
+dependencies = [
+ "glib 0.14.8",
+ "graphene-sys",
+ "libc",
+]
+
+[[package]]
+name = "graphene-sys"
+version = "0.14.8"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "9a9ac7450b3aa80792513a3c029920a2ede419de13fb5169a4e51b07a5685332"
+dependencies = [
+ "glib-sys 0.14.0",
+ "libc",
+ "pkg-config",
+ "system-deps 3.2.0",
+]
+
+[[package]]
+name = "gsk4"
+version = "0.3.1"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "eff59ca46c4fc5087fd7a0c3770a71ea4b6e94f8c24c12e2c2e8538f9f6fd764"
+dependencies = [
+ "bitflags",
+ "cairo-rs",
+ "gdk4",
+ "glib 0.14.8",
+ "graphene-rs",
+ "gsk4-sys",
+ "libc",
+ "pango",
+]
+
+[[package]]
+name = "gsk4-sys"
+version = "0.3.1"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "13aa53ce70234da02f9954339d988d5ab853d746a8f47a4ae17735ff873545b5"
+dependencies = [
+ "cairo-sys-rs",
+ "gdk4-sys",
+ "glib-sys 0.14.0",
+ "gobject-sys 0.14.0",
+ "graphene-sys",
+ "libc",
+ "pango-sys",
+ "system-deps 5.0.0",
+]
+
 [[package]]
 name = "gstreamer"
 version = "0.17.4"
@@ -1005,54 +1045,37 @@ dependencies = [
 ]
 
 [[package]]
-name = "gtk"
-version = "0.14.3"
+name = "gtk4"
+version = "0.3.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "2eb51122dd3317e9327ec1e4faa151d1fa0d95664cd8fb8dcfacf4d4d29ac70c"
+checksum = "58a04f421d1485ba4739e723199f5828bca05ab4e622ed39a96a342b6b1a6a3d"
 dependencies = [
- "atk",
  "bitflags",
  "cairo-rs",
  "field-offset",
  "futures-channel",
- "gdk",
  "gdk-pixbuf",
+ "gdk4",
  "gio",
  "glib 0.14.8",
- "gtk-sys",
- "gtk3-macros",
+ "graphene-rs",
+ "gsk4",
+ "gtk4-macros",
+ "gtk4-sys",
  "libc",
  "once_cell",
  "pango",
- "pkg-config",
-]
-
-[[package]]
-name = "gtk-sys"
-version = "0.14.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "8c14c8d3da0545785a7c5a120345b3abb534010fb8ae0f2ef3f47c027fba303e"
-dependencies = [
- "atk-sys",
- "cairo-sys-rs",
- "gdk-pixbuf-sys",
- "gdk-sys",
- "gio-sys",
- "glib-sys 0.14.0",
- "gobject-sys 0.14.0",
- "libc",
- "pango-sys",
- "system-deps 3.2.0",
 ]
 
 [[package]]
-name = "gtk3-macros"
-version = "0.14.0"
+name = "gtk4-macros"
+version = "0.3.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "21de1da96dc117443fb03c2e270b2d34b7de98d0a79a19bbb689476173745b79"
+checksum = "5068d4354af02454f44687adc613100aa98ae11e273cdcac84f89dc08be2b4a1"
 dependencies = [
  "anyhow",
  "heck",
+ "itertools 0.10.3",
  "proc-macro-crate 1.1.0",
  "proc-macro-error",
  "proc-macro2",
@@ -1060,6 +1083,25 @@ dependencies = [
  "syn",
 ]
 
+[[package]]
+name = "gtk4-sys"
+version = "0.3.1"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "e20a64c8f0ddcff8902ff04c130747f2fb7834a43530f75d03d6c71335733b49"
+dependencies = [
+ "cairo-sys-rs",
+ "gdk-pixbuf-sys",
+ "gdk4-sys",
+ "gio-sys",
+ "glib-sys 0.14.0",
+ "gobject-sys 0.14.0",
+ "graphene-sys",
+ "gsk4-sys",
+ "libc",
+ "pango-sys",
+ "system-deps 5.0.0",
+]
+
 [[package]]
 name = "h2"
 version = "0.3.9"
@@ -1302,56 +1344,52 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646"
 
 [[package]]
-name = "libc"
-version = "0.2.112"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "1b03d17f364a3a042d5e5d46b053bbbf82c92c9430c592dd4c064dc6ee997125"
-
-[[package]]
-name = "libdbus-sys"
-version = "0.2.2"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "c185b5b7ad900923ef3a8ff594083d4d9b5aea80bb4f32b8342363138c0d456b"
-dependencies = [
- "pkg-config",
-]
-
-[[package]]
-name = "libhandy"
-version = "0.8.0"
+name = "libadwaita"
+version = "0.1.0-beta-1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "5bcf9c79ec810a62f442ffd568d2de233983dc91c160abee4949b67a647024ed"
+checksum = "cef1e2d4b5490caff8a1d44648f68721ab917f765a7fa1d0226fcdac42d86552"
 dependencies = [
- "bitflags",
- "gdk",
  "gdk-pixbuf",
+ "gdk4",
  "gio",
  "glib 0.14.8",
- "gtk",
- "lazy_static",
+ "gtk4",
+ "libadwaita-sys",
  "libc",
- "libhandy-sys",
+ "once_cell",
  "pango",
 ]
 
 [[package]]
-name = "libhandy-sys"
-version = "0.8.0"
+name = "libadwaita-sys"
+version = "0.1.0-beta-1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "1938b93a8f29417992c452b7f43e7eff8a9f8d25b7f0bc923ae9d75b50a9cde3"
+checksum = "7a165d8c96824753ec072b70a9149790efa3d5abb07e130cda7eb04ef2006d4c"
 dependencies = [
- "gdk-pixbuf-sys",
- "gdk-sys",
+ "gdk4-sys",
  "gio-sys",
  "glib-sys 0.14.0",
  "gobject-sys 0.14.0",
- "gtk-sys",
+ "gtk4-sys",
  "libc",
- "pango-sys",
- "pkg-config",
  "system-deps 3.2.0",
 ]
 
+[[package]]
+name = "libc"
+version = "0.2.112"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "1b03d17f364a3a042d5e5d46b053bbbf82c92c9430c592dd4c064dc6ee997125"
+
+[[package]]
+name = "libdbus-sys"
+version = "0.2.2"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "c185b5b7ad900923ef3a8ff594083d4d9b5aea80bb4f32b8342363138c0d456b"
+dependencies = [
+ "pkg-config",
+]
+
 [[package]]
 name = "libsqlite3-sys"
 version = "0.22.2"
@@ -1840,19 +1878,17 @@ dependencies = [
  "chrono",
  "crossbeam-channel",
  "fragile",
- "gdk",
- "gdk-pixbuf",
  "gettext-rs",
  "gio",
  "glib 0.14.8",
  "gstreamer",
  "gstreamer-player",
- "gtk",
+ "gtk4",
  "html2text",
  "html5ever",
  "humansize",
  "lazy_static",
- "libhandy",
+ "libadwaita",
  "log",
  "markup5ever_rcdom",
  "mpris-player",
@@ -2497,7 +2533,7 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "480c269f870722b3b08d2f13053ce0c2ab722839f472863c3e2d61ff3a1c2fa6"
 dependencies = [
  "anyhow",
- "cfg-expr",
+ "cfg-expr 0.8.1",
  "heck",
  "itertools 0.10.3",
  "pkg-config",
@@ -2508,6 +2544,19 @@ dependencies = [
  "version-compare 0.0.11",
 ]
 
+[[package]]
+name = "system-deps"
+version = "5.0.0"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "18db855554db7bd0e73e06cf7ba3df39f97812cb11d3f75e71c39bf45171797e"
+dependencies = [
+ "cfg-expr 0.9.0",
+ "heck",
+ "pkg-config",
+ "toml",
+ "version-compare 0.0.11",
+]
+
 [[package]]
 name = "tempdir"
 version = "0.3.7"
diff --git a/README.md b/README.md
index d1336b95..59257d67 100644
--- a/README.md
+++ b/README.md
@@ -72,9 +72,9 @@ sudo ninja -C build install
 #### Dependencies
 
 * Rust stable 1.34 or later along with cargo.
-* Gtk+ 3.24.11 or later
+* Gtk 4.0.0 or later
 * Gstreamer 1.16 or later
-* libhandy 0.0.11 or later
+* libadwaita 1.0.0 or later
 * Meson
 * A network connection
 
diff --git a/meson.build b/meson.build
index c68518d1..c7768dd0 100644
--- a/meson.build
+++ b/meson.build
@@ -11,8 +11,8 @@ dependency('dbus-1')
 dependency('glib-2.0', version: '>= 2.56')
 dependency('gio-2.0', version: '>= 2.56')
 dependency('gdk-pixbuf-2.0')
-dependency('gtk+-3.0', version: '>= 3.24.22')
-dependency('libhandy-1', version: '>= 1.0.3')
+dependency('gtk4', version: '>= 4.5.0')
+dependency('libadwaita-1', version :'>=1.0.0')
 
 dependency('gstreamer-1.0', version: '>= 1.16')
 dependency('gstreamer-base-1.0', version: '>= 1.16')
diff --git a/org.gnome.Podcasts.Devel.json b/org.gnome.Podcasts.Devel.json
index 2a1af4c9..c4d7b500 100644
--- a/org.gnome.Podcasts.Devel.json
+++ b/org.gnome.Podcasts.Devel.json
@@ -11,6 +11,7 @@
         "nightly"
     ],
     "finish-args": [
+        "--device=dri",
         "--share=network",
         "--share=ipc",
         "--socket=x11",
diff --git a/podcasts-gtk/Cargo.toml b/podcasts-gtk/Cargo.toml
index 6e6463c3..df64822f 100644
--- a/podcasts-gtk/Cargo.toml
+++ b/podcasts-gtk/Cargo.toml
@@ -7,8 +7,6 @@ edition = "2018"
 [dependencies]
 chrono = "0.4"
 crossbeam-channel = "0.5.1"
-gdk = "0.14.0"
-gdk-pixbuf = "0.14.0"
 gst = { version = "0.17.0", package = "gstreamer" }
 gst-player = { version = "0.17.0", package = "gstreamer-player" }
 humansize = "1.1"
@@ -27,7 +25,7 @@ html5ever = "0.25"
 markup5ever_rcdom = "0.1"
 html2text = "0.2.1"
 glib = "0.14.2"
-libhandy = "0.8.0"
+adw = {package = "libadwaita", version = "0.1.0-beta"}
 
 [dependencies.gettext-rs]
 git = "https://github.com/danigm/gettext-rs"
@@ -39,8 +37,8 @@ features = ["v2_50"]
 version = "0.14.0"
 
 [dependencies.gtk]
-features = ["v3_24"]
-version = "0.14.0"
+package = "gtk4"
+version = "0.3.0"
 
 [dependencies.mpris-player]
 # git = "https://gitlab.gnome.org/World/Rust/mpris-player.git"
diff --git a/podcasts-gtk/resources/gtk/empty_view.ui b/podcasts-gtk/resources/gtk/empty_view.ui
index b6741801..3c12a282 100644
--- a/podcasts-gtk/resources/gtk/empty_view.ui
+++ b/podcasts-gtk/resources/gtk/empty_view.ui
@@ -24,36 +24,27 @@ Tobias Bernard
 
 -->
 <interface>
-  <requires lib="gtk+" version="3.22"/>
   <!-- interface-license-type gplv3 -->
   <!-- interface-name GNOME Podcasts -->
   <!-- interface-description A podcast client for the GNOME Desktop -->
   <!-- interface-copyright 2017 - 2018 -->
   <!-- interface-authors Jordan Petridis\nTobias Bernard -->
   <object class="GtkBox" id="empty_show">
-    <property name="visible">True</property>
-    <property name="can_focus">False</property>
-    <property name="halign">center</property>
-    <property name="valign">center</property>
-    <property name="hexpand">True</property>
-    <property name="vexpand">True</property>
     <property name="orientation">vertical</property>
-    <property name="spacing">12</property>
+    <property name="margin-top">6</property>
+    <property name="margin-bottom">6</property>
+    <property name="margin-start">6</property>
+    <property name="margin-end">6</property>
     <child>
       <object class="GtkLabel">
-        <property name="visible">True</property>
-        <property name="can_focus">False</property>
         <property name="label" translatable="yes">This show does not have episodes yet</property>
-        <attributes>
-          <attribute name="weight" value="bold"/>
-          <attribute name="scale" value="1.4399999999999999"/>
-        </attributes>
+        <style>
+          <class name="title-3"/>
+        </style>
       </object>
     </child>
     <child>
       <object class="GtkLabel">
-        <property name="visible">True</property>
-        <property name="can_focus">False</property>
         <property name="label" translatable="yes">If you think this is an error, please consider writing a bug report.</property>
         <style>
           <class name="dim-label"/>
@@ -62,8 +53,6 @@ Tobias Bernard
     </child>
   </object>
   <object class="GtkBox" id="empty_view">
-    <property name="visible">True</property>
-    <property name="can_focus">False</property>
     <property name="halign">center</property>
     <property name="valign">center</property>
     <property name="hexpand">True</property>
@@ -72,8 +61,6 @@ Tobias Bernard
     <property name="spacing">12</property>
     <child>
       <object class="GtkImage" id="image">
-        <property name="visible">True</property>
-        <property name="can_focus">False</property>
         <property name="halign">center</property>
         <property name="valign">center</property>
         <property name="pixel_size">256</property>
@@ -84,8 +71,6 @@ Tobias Bernard
     </child>
     <child>
       <object class="GtkLabel">
-        <property name="visible">True</property>
-        <property name="can_focus">False</property>
         <property name="halign">center</property>
         <property name="valign">center</property>
         <property name="label" translatable="yes">Get some shows</property>
@@ -97,67 +82,57 @@ Tobias Bernard
     </child>
     <child>
       <object class="GtkGrid">
-        <property name="visible">True</property>
-        <property name="can_focus">False</property>
         <property name="row_spacing">6</property>
         <property name="column_spacing">12</property>
         <child>
           <object class="GtkImage">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
             <property name="icon_name">list-add-symbolic</property>
             <style>
               <class name="dim-label"/>
             </style>
+            <layout>
+              <property name="column">0</property>
+              <property name="row">0</property>
+            </layout>
           </object>
-          <packing>
-            <property name="left_attach">0</property>
-            <property name="top_attach">0</property>
-          </packing>
         </child>
         <child>
           <object class="GtkLabel">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
             <property name="halign">start</property>
             <property name="label" translatable="yes">Add new shows via feed URL</property>
             <style>
               <class name="dim-label"/>
             </style>
+            <layout>
+              <property name="column">1</property>
+              <property name="row">0</property>
+            </layout>
           </object>
-          <packing>
-            <property name="left_attach">1</property>
-            <property name="top_attach">0</property>
-          </packing>
         </child>
         <child>
           <object class="GtkImage">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
             <property name="icon_name">open-menu-symbolic</property>
             <style>
               <class name="dim-label"/>
             </style>
+            <layout>
+              <property name="column">0</property>
+              <property name="row">1</property>
+            </layout>
           </object>
-          <packing>
-            <property name="left_attach">0</property>
-            <property name="top_attach">1</property>
-          </packing>
         </child>
         <child>
           <object class="GtkLabel">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
             <property name="halign">start</property>
             <property name="label" translatable="yes">Import shows from another device</property>
             <style>
               <class name="dim-label"/>
             </style>
+            <layout>
+              <property name="column">1</property>
+              <property name="row">1</property>
+            </layout>
           </object>
-          <packing>
-            <property name="left_attach">1</property>
-            <property name="top_attach">1</property>
-          </packing>
         </child>
       </object>
     </child>
diff --git a/podcasts-gtk/resources/gtk/episode_description.ui b/podcasts-gtk/resources/gtk/episode_description.ui
index 82340a17..bcefb816 100644
--- a/podcasts-gtk/resources/gtk/episode_description.ui
+++ b/podcasts-gtk/resources/gtk/episode_description.ui
@@ -24,8 +24,6 @@ Tobias Bernard
 
 -->
 <interface>
-  <requires lib="gtk+" version="3.22"/>
-  <requires lib="libhandy" version="1.0"/>
   <!-- interface-license-type gplv3 -->
   <!-- interface-name GNOME Podcasts -->
   <!-- interface-description A podcast client for the GNOME Desktop -->
@@ -33,19 +31,12 @@ Tobias Bernard
   <!-- interface-authors Jordan Petridis\nTobias Bernard -->
   <object class="GtkBox" id="episode_container">
     <property name="height_request">64</property>
-    <property name="visible">True</property>
-    <property name="can_focus">False</property>
     <property name="vexpand">True</property>
     <property name="orientation">vertical</property>
     <child>
-      <object class="HdyHeaderBar" id="header">
-        <property name="visible">True</property>
-        <property name="can_focus">False</property>
-        <property name="show_close_button">True</property>
+      <object class="AdwHeaderBar" id="header">
         <child type="title">
           <object class="GtkLabel" id="title">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
             <property name="label" translatable="yes">Episode Details</property>
             <style>
               <class name="title"/>
@@ -54,61 +45,30 @@ Tobias Bernard
         </child>
         <child>
           <object class="GtkButton" id="back_button">
-            <property name="visible">True</property>
-            <property name="can_focus">True</property>
             <property name="receives_default">True</property>
-            <child>
-              <object class="GtkImage">
-                <property name="visible">True</property>
-                <property name="can_focus">False</property>
-                <property name="tooltip_text" translatable="yes">Back</property>
-                <property name="icon_name">go-previous-symbolic</property>
-              </object>
-            </child>
+            <property name="icon_name">go-previous-symbolic</property>
+            <property name="tooltip_text" translatable="yes">Back</property>
           </object>
         </child>
-        <child>
+        <child type="end">
           <object class="GtkMenuButton" id="menu_button">
-            <property name="visible">True</property>
-            <property name="can_focus">True</property>
             <property name="receives_default">True</property>
-            <child>
-              <object class="GtkImage">
-                <property name="visible">True</property>
-                <property name="can_focus">False</property>
-                <property name="icon_name">view-more-symbolic</property>
-              </object>
-            </child>
+            <property name="icon_name">view-more-symbolic</property>
           </object>
-          <packing>
-            <property name="pack_type">end</property>
-            <property name="position">1</property>
-          </packing>
         </child>
       </object>
-      <packing>
-        <property name="expand">False</property>
-        <property name="fill">False</property>
-        <property name="position">0</property>
-      </packing>
     </child>
     <child>
-      <object class="HdyClamp" id="clamp">
-        <property name="visible">True</property>
-        <property name="can_focus">False</property>
+      <object class="AdwClamp" id="clamp">
         <property name="vexpand">True</property>
         <property name="maximum_size">700</property>
         <child>
           <object class="GtkBox" id="content">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
             <property name="vexpand">True</property>
             <property name="orientation">vertical</property>
             <property name="baseline_position">top</property>
             <child>
               <object class="GtkBox" id="episode_info">
-                <property name="visible">True</property>
-                <property name="can_focus">False</property>
                 <property name="valign">start</property>
                 <property name="margin_top">18</property>
                 <property name="margin_bottom">18</property>
@@ -116,35 +76,22 @@ Tobias Bernard
                 <property name="orientation">vertical</property>
                 <child>
                   <object class="GtkBox">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
-                    <property name="margin_left">18</property>
-                    <property name="margin_right">18</property>
+                    <property name="margin_start">18</property>
+                    <property name="margin_end">18</property>
                     <child>
                       <object class="GtkImage" id="cover">
-                        <property name="visible">True</property>
-                        <property name="can_focus">False</property>
-                        <property name="margin_right">12</property>
+                        <property name="margin_end">12</property>
                         <property name="hexpand">False</property>
                         <property name="vexpand">False</property>
                         <property name="pixel_size">64</property>
                         <property name="icon_name">image-x-generic-symbolic</property>
                       </object>
-                      <packing>
-                        <property name="expand">False</property>
-                        <property name="fill">True</property>
-                        <property name="position">0</property>
-                      </packing>
                     </child>
                     <child>
                       <object class="GtkBox">
-                        <property name="visible">True</property>
-                        <property name="can_focus">False</property>
                         <property name="orientation">vertical</property>
                         <child>
                           <object class="GtkLabel" id="podcast_title">
-                            <property name="visible">True</property>
-                            <property name="can_focus">False</property>
                             <property name="label" translatable="yes">Podcast Title</property>
                             <property name="wrap">True</property>
                             <property name="wrap_mode">word-char</property>
@@ -153,89 +100,46 @@ Tobias Bernard
                               <class name="podcast_title"/>
                             </style>
                           </object>
-                          <packing>
-                            <property name="expand">False</property>
-                            <property name="fill">True</property>
-                            <property name="position">0</property>
-                          </packing>
                         </child>
                         <child>
                           <object class="GtkLabel" id="episode_title">
-                            <property name="visible">True</property>
-                            <property name="can_focus">False</property>
                             <property name="label">Episode Title</property>
                             <property name="wrap">True</property>
                             <property name="wrap_mode">word-char</property>
-                            <property name="track_visited_links">False</property>
                             <property name="lines">1</property>
                             <property name="xalign">0</property>
                             <style>
                               <class name="episode_title"/>
                             </style>
                           </object>
-                          <packing>
-                            <property name="expand">True</property>
-                            <property name="fill">True</property>
-                            <property name="position">1</property>
-                          </packing>
                         </child>
                         <child>
                           <object class="GtkLabel" id="episode_duration_date">
-                            <property name="visible">True</property>
-                            <property name="can_focus">False</property>
                             <property name="label" translatable="yes">Duration - Date</property>
                             <property name="xalign">0</property>
                             <style>
                               <class name="episode_duration_date"/>
                             </style>
                           </object>
-                          <packing>
-                            <property name="expand">False</property>
-                            <property name="fill">True</property>
-                            <property name="position">2</property>
-                          </packing>
                         </child>
                       </object>
-                      <packing>
-                        <property name="expand">True</property>
-                        <property name="fill">True</property>
-                        <property name="position">1</property>
-                      </packing>
                     </child>
                   </object>
-                  <packing>
-                    <property name="expand">True</property>
-                    <property name="fill">True</property>
-                    <property name="position">1</property>
-                  </packing>
                 </child>
               </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">True</property>
-                <property name="position">0</property>
-              </packing>
             </child>
             <child>
               <object class="GtkScrolledWindow">
-                <property name="visible">True</property>
-                <property name="can_focus">True</property>
                 <property name="vexpand">True</property>
-                <property name="border_width">0</property>
                 <property name="hscrollbar_policy">never</property>
                 <child>
                   <object class="GtkViewport">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
                     <property name="vexpand">True</property>
-                    <property name="border_width">0</property>
                     <child>
                       <object class="GtkLabel" id="episode_description">
-                        <property name="visible">True</property>
-                        <property name="can_focus">False</property>
                         <property name="valign">start</property>
-                        <property name="margin_left">18</property>
-                        <property name="margin_right">18</property>
+                        <property name="margin_start">18</property>
+                        <property name="margin_end">18</property>
                         <property name="margin_bottom">18</property>
                         <property name="vexpand">True</property>
                         <property name="label" translatable="yes">Episode Description</property>
@@ -249,20 +153,10 @@ Tobias Bernard
                   </object>
                 </child>
               </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">True</property>
-                <property name="position">2</property>
-              </packing>
             </child>
           </object>
         </child>
       </object>
-      <packing>
-        <property name="expand">True</property>
-        <property name="fill">True</property>
-        <property name="position">1</property>
-      </packing>
     </child>
     <style>
       <class name="episode_description"/>
diff --git a/podcasts-gtk/resources/gtk/episode_menu.ui b/podcasts-gtk/resources/gtk/episode_menu.ui
index 497bba89..23c3581f 100644
--- a/podcasts-gtk/resources/gtk/episode_menu.ui
+++ b/podcasts-gtk/resources/gtk/episode_menu.ui
@@ -24,7 +24,6 @@ Tobias Bernard
 
 -->
 <interface>
-  <requires lib="gtk+" version="3.22"/>
   <!-- interface-license-type gplv3 -->
   <!-- interface-name GNOME Podcasts -->
   <!-- interface-description A podcast client for the GNOME Desktop -->
diff --git a/podcasts-gtk/resources/gtk/episode_widget.ui b/podcasts-gtk/resources/gtk/episode_widget.ui
index 19af7f7c..ed3332e5 100644
--- a/podcasts-gtk/resources/gtk/episode_widget.ui
+++ b/podcasts-gtk/resources/gtk/episode_widget.ui
@@ -24,7 +24,6 @@ Tobias Bernard
 
 -->
 <interface>
-  <requires lib="gtk+" version="3.22"/>
   <!-- interface-license-type gplv3 -->
   <!-- interface-name GNOME Podcasts -->
   <!-- interface-description A podcast client for the GNOME Desktop -->
@@ -32,53 +31,42 @@ Tobias Bernard
   <!-- interface-authors Jordan Petridis\nTobias Bernard -->
   <object class="GtkBox" id="episode_container">
     <property name="height_request">64</property>
-    <property name="visible">True</property>
-    <property name="can_focus">False</property>
     <property name="valign">center</property>
     <property name="margin_start">6</property>
     <property name="margin_end">6</property>
     <property name="orientation">vertical</property>
     <child>
       <object class="GtkBox">
-        <property name="visible">True</property>
-        <property name="can_focus">False</property>
         <property name="margin_start">6</property>
         <property name="margin_end">6</property>
         <property name="margin_top">6</property>
         <property name="margin_bottom">6</property>
         <property name="hexpand">True</property>
         <property name="vexpand">True</property>
+        <property name="spacing">12</property>
         <child>
           <object class="GtkBox" id="info_container">
             <property name="width_request">200</property>
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
             <property name="halign">start</property>
             <property name="valign">center</property>
             <property name="orientation">vertical</property>
             <property name="spacing">6</property>
+            <property name="hexpand">True</property>
             <child>
               <object class="GtkBox">
-                <property name="visible">True</property>
-                <property name="can_focus">False</property>
                 <property name="halign">start</property>
                 <property name="spacing">6</property>
                 <child>
                   <object class="GtkLabel" id="title_label">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
                     <property name="label">Episode Title</property>
                     <property name="ellipsize">end</property>
                     <property name="single_line_mode">True</property>
-                    <property name="track_visited_links">False</property>
                     <property name="lines">1</property>
                     <property name="xalign">0</property>
                   </object>
                 </child>
                 <child>
                   <object class="GtkImage" id="played_checkmark">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
                     <property name="tooltip_text" translatable="yes">You’ve already listened to this episode.</property>
                     <property name="icon_name">object-select-symbolic</property>
                     <style>
@@ -90,17 +78,12 @@ Tobias Bernard
             </child>
             <child>
               <object class="GtkBox">
-                <property name="visible">True</property>
-                <property name="can_focus">False</property>
                 <property name="spacing">6</property>
                 <child>
                   <object class="GtkLabel" id="date_label">
-                    <property name="visible">True</property>
                     <property name="halign">start</property>
-                    <property name="can_focus">False</property>
                     <property name="label">3 Jan</property>
                     <property name="single_line_mode">True</property>
-                    <property name="track_visited_links">False</property>
                     <style>
                       <class name="dim-label"/>
                     </style>
@@ -112,10 +95,8 @@ Tobias Bernard
                 <child>
                   <object class="GtkLabel" id="separator1">
                     <property name="halign">start</property>
-                    <property name="can_focus">False</property>
-                    <property name="no_show_all">True</property>
+                    <property name="visible">False</property>
                     <property name="label">·</property>
-                    <property name="track_visited_links">False</property>
                     <style>
                       <class name="dim-label"/>
                     </style>
@@ -124,11 +105,9 @@ Tobias Bernard
                 <child>
                   <object class="GtkLabel" id="duration_label">
                     <property name="halign">start</property>
-                    <property name="can_focus">False</property>
-                    <property name="no_show_all">True</property>
+                    <property name="visible">False</property>
                     <property name="label">42 min</property>
                     <property name="single_line_mode">True</property>
-                    <property name="track_visited_links">False</property>
                     <style>
                       <class name="dim-label"/>
                     </style>
@@ -140,10 +119,8 @@ Tobias Bernard
                 <child>
                   <object class="GtkLabel" id="separator2">
                     <property name="halign">start</property>
-                    <property name="can_focus">False</property>
-                    <property name="no_show_all">True</property>
+                    <property name="visible">False</property>
                     <property name="label">·</property>
-                    <property name="track_visited_links">False</property>
                     <style>
                       <class name="dim-label"/>
                     </style>
@@ -152,12 +129,10 @@ Tobias Bernard
                 <child>
                   <object class="GtkLabel" id="local_size">
                     <property name="halign">start</property>
-                    <property name="can_focus">False</property>
-                    <property name="no_show_all">True</property>
+                    <property name="visible">False</property>
                     <property name="label">0 MB</property>
                     <property name="ellipsize">end</property>
                     <property name="single_line_mode">True</property>
-                    <property name="track_visited_links">False</property>
                     <style>
                       <class name="dim-label"/>
                     </style>
@@ -169,11 +144,9 @@ Tobias Bernard
                 <child>
                   <object class="GtkLabel" id="prog_separator">
                     <property name="halign">start</property>
-                    <property name="can_focus">False</property>
-                    <property name="no_show_all">True</property>
+                    <property name="visible">False</property>
                     <property name="label">/</property>
                     <property name="single_line_mode">True</property>
-                    <property name="track_visited_links">False</property>
                     <style>
                       <class name="dim-label"/>
                     </style>
@@ -182,12 +155,10 @@ Tobias Bernard
                 <child>
                   <object class="GtkLabel" id="total_size">
                     <property name="halign">start</property>
-                    <property name="can_focus">False</property>
-                    <property name="no_show_all">True</property>
+                    <property name="visible">False</property>
                     <property name="label" translatable="yes">Calculating episode size…</property>
                     <property name="ellipsize">end</property>
                     <property name="single_line_mode">True</property>
-                    <property name="track_visited_links">False</property>
                     <style>
                       <class name="dim-label"/>
                     </style>
@@ -202,75 +173,43 @@ Tobias Bernard
         </child>
         <child>
           <object class="GtkBox" id="button_box">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
             <property name="halign">end</property>
             <property name="spacing">6</property>
             <child>
               <object class="GtkButton" id="play_button">
-                <property name="can_focus">True</property>
                 <property name="receives_default">True</property>
-                <property name="no_show_all">True</property>
+                <property name="visible">False</property>
                 <property name="tooltip_text" translatable="yes">Play this episode</property>
                 <property name="halign">center</property>
                 <property name="valign">center</property>
-                <child>
-                  <object class="GtkImage">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
-                    <property name="icon_name">media-playback-start-symbolic</property>
-                  </object>
-                </child>
+                <property name="icon_name">media-playback-start-symbolic</property>
               </object>
             </child>
             <child>
               <object class="GtkButton" id="cancel_button">
-                <property name="can_focus">True</property>
                 <property name="receives_default">False</property>
                 <property name="tooltip_text" translatable="yes">Cancel the download process</property>
                 <property name="halign">center</property>
                 <property name="valign">center</property>
-                <child>
-                  <object class="GtkImage">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
-                    <property name="icon_name">media-playback-stop-symbolic</property>
-                  </object>
-                </child>
+                <property name="icon_name">media-playback-stop-symbolic</property>
               </object>
-              <packing>
-                <property name="pack_type">end</property>
-              </packing>
             </child>
             <child>
               <object class="GtkButton" id="download_button">
-                <property name="visible">True</property>
-                <property name="can_focus">True</property>
                 <property name="receives_default">True</property>
                 <property name="tooltip_text" translatable="yes">Download this episode</property>
                 <property name="halign">center</property>
                 <property name="valign">center</property>
-                <property name="always_show_image">True</property>
-                <child>
-                  <object class="GtkImage">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
-                    <property name="icon_name">document-save-symbolic</property>
-                  </object>
-                </child>
+                <property name="icon_name">document-save-symbolic</property>
               </object>
             </child>
           </object>
-          <packing>
-            <property name="pack_type">end</property>
-          </packing>
         </child>
       </object>
     </child>
     <child>
       <object class="GtkProgressBar" id="progress_bar">
-        <property name="can_focus">False</property>
-        <property name="no_show_all">True</property>
+        <property name="visible">False</property>
         <property name="margin_start">6</property>
         <property name="margin_end">6</property>
         <property name="margin_top">6</property>
diff --git a/podcasts-gtk/resources/gtk/headerbar.ui b/podcasts-gtk/resources/gtk/headerbar.ui
index ec065ef0..f2d01d24 100644
--- a/podcasts-gtk/resources/gtk/headerbar.ui
+++ b/podcasts-gtk/resources/gtk/headerbar.ui
@@ -24,30 +24,21 @@ Tobias Bernard
 
 -->
 <interface>
-  <requires lib="gtk+" version="3.22"/>
   <!-- interface-license-type gplv3 -->
   <!-- interface-name GNOME Podcasts -->
   <!-- interface-description A podcast client for the GNOME Desktop -->
   <!-- interface-copyright 2017 - 2018 -->
   <!-- interface-authors Jordan Petridis\nTobias Bernard -->
   <object class="GtkPopover" id="add_popover">
-    <property name="can_focus">False</property>
     <property name="tooltip_text" translatable="yes">Add a new feed</property>
     <property name="valign">center</property>
-    <property name="relative_to">add_toggle</property>
-    <property name="position">bottom</property>
     <child>
       <object class="GtkBox" id="add_box">
-        <property name="visible">True</property>
-        <property name="can_focus">False</property>
         <property name="valign">center</property>
-        <property name="border_width">6</property>
         <property name="orientation">vertical</property>
         <property name="spacing">6</property>
         <child>
           <object class="GtkLabel" id="enter_address_label">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
             <property name="halign">start</property>
             <property name="hexpand">False</property>
             <property name="label" translatable="yes">Enter feed address to add</property>
@@ -58,48 +49,41 @@ Tobias Bernard
         </child>
         <child>
           <object class="GtkBox" id="add_entry_box">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
             <property name="spacing">6</property>
             <child>
               <object class="GtkEntry" id="new_url">
-                <property name="visible">True</property>
-                <property name="can_focus">True</property>
                 <property name="width_chars">26</property>
                 <property name="input_purpose">url</property>
               </object>
             </child>
             <child>
               <object class="GtkStack" id="add_button_stack">
-                <property name="visible">True</property>
-                <property name="can_focus">True</property>
                 <property name="interpolate_size">True</property>
                 <child>
-                  <object class="GtkButton" id="add_button">
-                    <property name="label" translatable="yes">Add</property>
-                    <property name="visible">True</property>
-                    <property name="sensitive">False</property>
-                    <property name="can_focus">True</property>
-                    <property name="receives_default">False</property>
-                    <style>
-                      <class name="suggested-action"/>
-                    </style>
-                  </object>
-                  <packing>
+                  <object class="GtkStackPage">
                     <property name="name">button</property>
-                  </packing>
+                    <property name="child">
+                      <object class="GtkButton" id="add_button">
+                        <property name="label" translatable="yes">Add</property>
+                        <property name="sensitive">False</property>
+                        <property name="receives_default">False</property>
+                        <style>
+                          <class name="suggested-action"/>
+                        </style>
+                      </object>
+                    </property>
+                  </object>
                 </child>
                 <child>
-                  <object class="GtkSpinner">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
-                    <property name="halign">start</property>
-                    <property name="valign">center</property>
-                    <property name="active">True</property>
-                  </object>
-                  <packing>
+                  <object class="GtkStackPage">
                     <property name="name">spinner</property>
-                  </packing>
+                    <property name="child">
+                      <object class="GtkSpinner">
+                        <property name="halign">start</property>
+                        <property name="valign">center</property>
+                      </object>
+                    </property>
+                  </object>
                 </child>
               </object>
             </child>
@@ -108,32 +92,22 @@ Tobias Bernard
       </object>
     </child>
   </object>
-  <object class="HdyHeaderBar" id="headerbar">
-    <property name="can_focus">False</property>
-    <property name="show_close_button">True</property>
+  <object class="AdwHeaderBar" id="headerbar">
     <property name="centering-policy">strict</property>
     <child type="title">
       <object class="GtkStack" id="title_stack">
-        <property name="visible">True</property>
-        <property name="can_focus">False</property>
         <property name="transition_type">crossfade</property>
         <child>
-          <object class="HdySqueezer" id="switch_squeezer">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
+          <object class="AdwSqueezer" id="switch_squeezer">
             <property name="transition_type">crossfade</property>
             <child>
-              <object class="HdyViewSwitcher" id="switch">
-                <property name="visible">True</property>
-                <property name="can_focus">False</property>
+              <object class="AdwViewSwitcher" id="switch">
                 <property name="halign">center</property>
                 <property name="policy">wide</property>
               </object>
             </child>
             <child>
               <object class="GtkLabel">
-                <property name="visible">True</property>
-                <property name="can_focus">False</property>
                 <property name="label" translatable="yes">Podcasts</property>
                 <style>
                   <class name="title"/>
@@ -144,12 +118,8 @@ Tobias Bernard
         </child>
         <child>
           <object class="GtkLabel" id="show_title">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
-            <property name="no_show_all">True</property>
             <property name="label" translatable="yes">Show Title</property>
             <property name="ellipsize">end</property>
-            <property name="track_visited_links">False</property>
             <style>
               <class name="title" />
             </style>
@@ -159,20 +129,11 @@ Tobias Bernard
     </child>
     <child>
       <object class="GtkMenuButton" id="add_toggle">
-        <property name="visible">True</property>
-        <property name="can_focus">True</property>
         <property name="receives_default">True</property>
         <property name="tooltip_text" translatable="yes">Add a new feed</property>
         <property name="valign">center</property>
         <property name="popover">add_popover</property>
-        <child>
-          <object class="GtkImage" id="add-button-image2">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
-            <property name="icon_name">list-add-symbolic</property>
-            <property name="icon_size">1</property>
-          </object>
-        </child>
+        <property name="icon_name">list-add-symbolic</property>
         <style>
           <class name="image-button"/>
         </style>
@@ -180,67 +141,36 @@ Tobias Bernard
     </child>
     <child>
       <object class="GtkButton" id="back">
-        <property name="can_focus">True</property>
         <property name="receives_default">False</property>
-        <property name="no_show_all">True</property>
+        <property name="visible">False</property>
         <property name="tooltip_text" translatable="yes">Back</property>
         <property name="valign">center</property>
-        <child>
-          <object class="GtkImage" id="back-button-image">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
-            <property name="icon_name">go-previous-symbolic</property>
-            <property name="icon_size">1</property>
-          </object>
-        </child>
+        <property name="icon_name">go-previous-symbolic</property>
         <style>
           <class name="image-button"/>
         </style>
       </object>
     </child>
-    <child>
+    <child type="end">
       <object class="GtkMenuButton" id="hamburger">
-        <property name="visible">True</property>
-        <property name="can_focus">True</property>
         <property name="receives_default">False</property>
         <property name="valign">center</property>
-        <child>
-          <object class="GtkImage">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
-            <property name="icon_name">open-menu-symbolic</property>
-            <property name="icon_size">1</property>
-          </object>
-        </child>
+        <property name="icon_name">open-menu-symbolic</property>
         <style>
           <class name="image-button"/>
         </style>
       </object>
-      <packing>
-        <property name="pack_type">end</property>
-      </packing>
     </child>
-    <child>
+    <child type="end">
       <object class="GtkMenuButton" id="secondary_menu">
-        <property name="can_focus">True</property>
         <property name="receives_default">False</property>
-        <property name="no_show_all">True</property>
+        <property name="visible">False</property>
         <property name="valign">center</property>
-        <child>
-          <object class="GtkImage">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
-            <property name="icon_name">view-more-symbolic</property>
-            <property name="icon_size">1</property>
-          </object>
-        </child>
+        <property name="icon_name">view-more-symbolic</property>
         <style>
           <class name="image-button"/>
         </style>
       </object>
-      <packing>
-        <property name="pack_type">end</property>
-      </packing>
     </child>
   </object>
 </interface>
diff --git a/podcasts-gtk/resources/gtk/help-overlay.ui b/podcasts-gtk/resources/gtk/help-overlay.ui
index 33c27497..2f4b2d08 100644
--- a/podcasts-gtk/resources/gtk/help-overlay.ui
+++ b/podcasts-gtk/resources/gtk/help-overlay.ui
@@ -6,21 +6,17 @@
       <object class="GtkShortcutsSection">
         <property name="section-name">shortcuts</property>
         <property name="max-height">12</property>
-        <property name="visible">True</property>
         <child>
           <object class="GtkShortcutsGroup">
             <property name="title" translatable="yes">General</property>
-            <property name="visible">True</property>
             <child>
               <object class="GtkShortcutsShortcut">
-                <property name="visible">True</property>
                 <property name="accelerator">&lt;primary&gt;r</property>
                 <property name="title" translatable="yes" context="shortcut window">Check for new episodes</property>
               </object>
             </child>
             <child>
               <object class="GtkShortcutsShortcut">
-                <property name="visible">True</property>
                 <property name="accelerator">&lt;primary&gt;q</property>
                 <property name="title" translatable="yes" context="shortcut window">Quit the application</property>
               </object>
diff --git a/podcasts-gtk/resources/gtk/home_episode.ui b/podcasts-gtk/resources/gtk/home_episode.ui
index cea6ba5c..ad8f6c4f 100644
--- a/podcasts-gtk/resources/gtk/home_episode.ui
+++ b/podcasts-gtk/resources/gtk/home_episode.ui
@@ -24,29 +24,21 @@ Tobias Bernard
 
 -->
 <interface>
-  <requires lib="gtk+" version="3.22"/>
   <!-- interface-license-type gplv3 -->
   <!-- interface-name GNOME Podcasts -->
   <!-- interface-description A podcast client for the GNOME Desktop -->
   <!-- interface-copyright 2017 - 2018 -->
   <!-- interface-authors Jordan Petridis\nTobias Bernard -->
   <object class="GtkBox" id="container">
-    <property name="visible">True</property>
-    <property name="can_focus">False</property>
     <property name="valign">center</property>
     <property name="margin_top">6</property>
     <property name="margin_bottom">6</property>
     <child>
       <object class="GtkImage" id="cover">
-        <property name="visible">True</property>
-        <property name="can_focus">False</property>
         <property name="margin_start">8</property>
         <property name="pixel_size">64</property>
         <property name="icon_name">image-x-generic-symbolic</property>
       </object>
     </child>
-    <child>
-      <placeholder/>
-    </child>
   </object>
 </interface>
diff --git a/podcasts-gtk/resources/gtk/home_view.ui b/podcasts-gtk/resources/gtk/home_view.ui
index 71ac76d9..ab297334 100644
--- a/podcasts-gtk/resources/gtk/home_view.ui
+++ b/podcasts-gtk/resources/gtk/home_view.ui
@@ -24,15 +24,12 @@ Tobias Bernard
 
 -->
 <interface>
-  <requires lib="gtk+" version="3.22"/>
   <!-- interface-license-type gplv3 -->
   <!-- interface-name GNOME Podcasts -->
   <!-- interface-description A podcast client for the GNOME Desktop -->
   <!-- interface-copyright 2017 - 2018 -->
   <!-- interface-authors Jordan Petridis\nTobias Bernard -->
   <object class="GtkBox" id="frame_parent">
-    <property name="visible">True</property>
-    <property name="can_focus">False</property>
     <property name="margin_start">6</property>
     <property name="margin_end">6</property>
     <property name="margin_top">32</property>
@@ -42,15 +39,12 @@ Tobias Bernard
     <property name="spacing">24</property>
     <child>
       <object class="GtkBox" id="today_box">
-        <property name="can_focus">False</property>
-        <property name="no_show_all">True</property>
+        <property name="visible">False</property>
         <property name="hexpand">True</property>
         <property name="orientation">vertical</property>
         <property name="spacing">6</property>
         <child>
           <object class="GtkLabel">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
             <property name="halign">start</property>
             <property name="hexpand">True</property>
             <property name="label" translatable="yes">Today</property>
@@ -62,8 +56,6 @@ Tobias Bernard
         </child>
         <child>
           <object class="GtkListBox" id="today_list">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
             <property name="hexpand">True</property>
             <property name="activate_on_single_click">True</property>
             <property name="selection_mode">none</property>
@@ -76,15 +68,12 @@ Tobias Bernard
     </child>
     <child>
       <object class="GtkBox" id="yday_box">
-        <property name="can_focus">False</property>
-        <property name="no_show_all">True</property>
+        <property name="visible">False</property>
         <property name="hexpand">True</property>
         <property name="orientation">vertical</property>
         <property name="spacing">6</property>
         <child>
           <object class="GtkLabel">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
             <property name="halign">start</property>
             <property name="label" translatable="yes">Yesterday</property>
             <attributes>
@@ -95,8 +84,6 @@ Tobias Bernard
         </child>
         <child>
           <object class="GtkListBox" id="yday_list">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
             <property name="hexpand">True</property>
             <property name="activate_on_single_click">True</property>
             <property name="selection_mode">none</property>
@@ -109,15 +96,12 @@ Tobias Bernard
     </child>
     <child>
       <object class="GtkBox" id="week_box">
-        <property name="can_focus">False</property>
-        <property name="no_show_all">True</property>
+        <property name="visible">False</property>
         <property name="hexpand">True</property>
         <property name="orientation">vertical</property>
         <property name="spacing">6</property>
         <child>
           <object class="GtkLabel">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
             <property name="halign">start</property>
             <property name="label" translatable="yes">This Week</property>
             <attributes>
@@ -128,8 +112,6 @@ Tobias Bernard
         </child>
         <child>
           <object class="GtkListBox" id="week_list">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
             <property name="hexpand">True</property>
             <property name="activate_on_single_click">True</property>
             <property name="selection_mode">none</property>
@@ -142,15 +124,12 @@ Tobias Bernard
     </child>
     <child>
       <object class="GtkBox" id="month_box">
-        <property name="can_focus">False</property>
-        <property name="no_show_all">True</property>
+        <property name="visible">False</property>
         <property name="hexpand">True</property>
         <property name="orientation">vertical</property>
         <property name="spacing">6</property>
         <child>
           <object class="GtkLabel">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
             <property name="halign">start</property>
             <property name="label" translatable="yes">This Month</property>
             <attributes>
@@ -161,8 +140,6 @@ Tobias Bernard
         </child>
         <child>
           <object class="GtkListBox" id="month_list">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
             <property name="hexpand">True</property>
             <property name="activate_on_single_click">True</property>
             <property name="selection_mode">none</property>
@@ -175,15 +152,12 @@ Tobias Bernard
     </child>
     <child>
       <object class="GtkBox" id="rest_box">
-        <property name="can_focus">False</property>
-        <property name="no_show_all">True</property>
+        <property name="visible">False</property>
         <property name="hexpand">True</property>
         <property name="orientation">vertical</property>
         <property name="spacing">6</property>
         <child>
           <object class="GtkLabel">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
             <property name="halign">start</property>
             <property name="hexpand">True</property>
             <property name="label" translatable="yes">Older</property>
@@ -195,9 +169,6 @@ Tobias Bernard
         </child>
         <child>
           <object class="GtkListBox" id="rest_list">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
-            <property name="no_show_all">True</property>
             <property name="hexpand">True</property>
             <property name="activate_on_single_click">True</property>
             <property name="selection_mode">none</property>
diff --git a/podcasts-gtk/resources/gtk/inapp_notif.ui b/podcasts-gtk/resources/gtk/inapp_notif.ui
index c58c08a7..36bd9387 100644
--- a/podcasts-gtk/resources/gtk/inapp_notif.ui
+++ b/podcasts-gtk/resources/gtk/inapp_notif.ui
@@ -24,29 +24,21 @@ Tobias Bernard
 
 -->
 <interface>
-  <requires lib="gtk+" version="3.22"/>
   <!-- interface-license-type gplv3 -->
   <!-- interface-name GNOME Podcast -->
   <!-- interface-description A podcast client for the GNOME Desktop -->
   <!-- interface-copyright 2017 - 2018 -->
   <!-- interface-authors Jordan Petridis\nTobias Bernard -->
   <object class="GtkRevealer" id="revealer">
-    <property name="visible">True</property>
-    <property name="can_focus">False</property>
     <property name="halign">center</property>
     <property name="valign">start</property>
     <child>
       <object class="GtkFrame">
-        <property name="visible">True</property>
-        <property name="can_focus">False</property>
         <property name="halign">center</property>
         <property name="valign">center</property>
         <property name="label_xalign">0</property>
-        <property name="shadow_type">none</property>
         <child>
           <object class="GtkBox">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
             <property name="halign">center</property>
             <property name="valign">center</property>
             <property name="margin_start">3</property>
@@ -54,14 +46,11 @@ Tobias Bernard
             <property name="spacing">6</property>
             <child>
               <object class="GtkSpinner" id="spinner">
-                <property name="can_focus">False</property>
               </object>
             </child>
             <child>
               <object class="GtkLabel" id="text">
                 <property name="width_request">150</property>
-                <property name="visible">True</property>
-                <property name="can_focus">False</property>
                 <property name="halign">center</property>
                 <property name="valign">center</property>
                 <property name="margin_start">12</property>
@@ -73,7 +62,6 @@ Tobias Bernard
             <child>
               <object class="GtkButton" id="undo">
                 <property name="label" translatable="yes">Undo</property>
-                <property name="can_focus">True</property>
                 <property name="receives_default">True</property>
                 <property name="halign">center</property>
                 <property name="valign">center</property>
@@ -84,22 +72,13 @@ Tobias Bernard
             </child>
             <child>
               <object class="GtkButton" id="close">
-                <property name="visible">True</property>
-                <property name="can_focus">True</property>
                 <property name="focus_on_click">False</property>
                 <property name="receives_default">True</property>
                 <property name="halign">center</property>
                 <property name="valign">center</property>
-                <property name="relief">none</property>
-                <child>
-                  <object class="GtkImage">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
-                    <property name="icon_name">window-close-symbolic</property>
-                  </object>
-                </child>
+                <property name="icon_name">window-close-symbolic</property>
                 <style>
-                  <class name="flat image-button"/>
+                  <class name="flat"/>
                 </style>
               </object>
             </child>
diff --git a/podcasts-gtk/resources/gtk/player_dialog.ui b/podcasts-gtk/resources/gtk/player_dialog.ui
index 6f0479af..116f7e07 100644
--- a/podcasts-gtk/resources/gtk/player_dialog.ui
+++ b/podcasts-gtk/resources/gtk/player_dialog.ui
@@ -1,39 +1,28 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<!-- Generated with glade 3.22.1 -->
 <interface>
-  <requires lib="gtk+" version="3.20"/>
-  <requires lib="libhandy" version="0.0"/>
   <object class="GtkDialog" id="dialog">
-    <property name="can_focus">False</property>
-    <property name="type_hint">dialog</property>
     <property name="modal">True</property>
     <child type="titlebar">
-      <object class="HdyHeaderBar" id="headerbar">
-        <property name="visible">True</property>
-        <property name="can_focus">False</property>
-        <property name="title" translatable="yes">Now Playing</property>
+      <object class="GtkHeaderBar" id="headerbar">
+        <property name="show-title-buttons">False</property>
+        <property name="title-widget">
+          <object class="AdwWindowTitle">
+            <property name="title" translatable="yes">Now Playing</property>
+          </object>
+        </property>
         <child>
           <object class="GtkButton" id="close">
-            <property name="visible">True</property>
-            <child>
-              <object class="GtkImage">
-                <property name="visible">True</property>
-                <property name="icon_name">go-previous-symbolic</property>
-              </object>
-            </child>
+            <property name="icon_name">go-previous-symbolic</property>
           </object>
         </child>
       </object>
     </child>
-    <child internal-child="vbox">
+    <child internal-child="content_area">
       <object class="GtkBox">
-        <property name="can_focus">False</property>
         <property name="orientation">vertical</property>
         <property name="spacing">2</property>
         <child>
           <object class="GtkBox">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
             <property name="margin_start">6</property>
             <property name="margin_end">6</property>
             <property name="margin_top">6</property>
@@ -45,8 +34,6 @@
             <property name="valign">center</property>
             <child>
               <object class="GtkBox">
-                <property name="visible">True</property>
-                <property name="can_focus">False</property>
                 <property name="valign">center</property>
                 <property name="hexpand">True</property>
                 <property name="vexpand">True</property>
@@ -57,12 +44,11 @@
                     <property name="height_request">256</property>
                     <property name="hexpand">True</property>
                     <property name="vexpand">True</property>
-                    <property name="margin">18</property>
+                    <property name="margin-start">18</property>
+                    <property name="margin-end">18</property>
                     <property name="margin-top">36</property>
                     <property name="margin-bottom">6</property>
                     <property name="valign">center</property>
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
                     <property name="icon_name">gtk-missing-image</property>
                   </object>
                 </child>
@@ -70,15 +56,12 @@
             </child>
             <child>
               <object class="GtkBox">
-                <property name="visible">True</property>
                 <property name="spacing">6</property>
                 <property name="orientation">vertical</property>
                 <property name="margin-start">6</property>
                 <property name="margin-end">6</property>
                 <child>
                   <object class="GtkLabel" id="episode_label">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
                     <property name="halign">center</property>
                     <property name="label">Episode Title</property>
                     <property name="wrap">True</property>
@@ -90,8 +73,6 @@
                 </child>
                 <child>
                   <object class="GtkLabel" id="show_label">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
                     <property name="halign">center</property>
                     <property name="label">Show Title</property>
                     <property name="wrap">True</property>
@@ -105,14 +86,10 @@
             </child>
             <child>
               <object class="GtkBox">
-                <property name="visible">True</property>
-                <property name="can_focus">False</property>
                 <property name="margin-start">12</property>
                 <property name="margin-end">12</property>
                 <child>
                   <object class="GtkLabel" id="progressed">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
                     <property name="width_chars">5</property>
                     <property name="xalign">1</property>
                     <attributes>
@@ -126,8 +103,6 @@
                 </child>
                 <child>
                   <object class="GtkScale" id="slider">
-                    <property name="visible">True</property>
-                    <property name="can_focus">True</property>
                     <property name="draw_value">False</property>
                     <property name="hexpand">True</property>
                     <property name="vexpand">True</property>
@@ -135,8 +110,6 @@
                 </child>
                 <child>
                   <object class="GtkLabel" id="duration">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
                     <property name="width_chars">5</property>
                     <attributes>
                       <attribute name="font-features" value="tnum=1"/>
@@ -151,26 +124,15 @@
             </child>
             <child>
               <object class="GtkBox">
-                <property name="visible">True</property>
-                <property name="can_focus">False</property>
                 <property name="halign">center</property>
                 <property name="spacing">12</property>
                 <child>
                   <object class="GtkButton" id="rewind">
-                    <property name="visible">True</property>
-                    <property name="can_focus">True</property>
                     <property name="width_request">60</property>
                     <property name="height_request">60</property>
                     <property name="valign">center</property>
                     <property name="margin-end">12</property>
-                    <child>
-                      <object class="GtkImage">
-                        <property name="visible">True</property>
-                        <property name="can_focus">False</property>
-                        <property name="icon_name">skip-back-large-symbolic</property>
-                        <property name="icon_size">5</property>
-                      </object>
-                    </child>
+                    <property name="icon_name">skip-back-large-symbolic</property>
                     <style>
                       <class name="circular"/>
                     </style>
@@ -178,22 +140,12 @@
                 </child>
                 <child>
                   <object class="GtkStack" id="play_pause">
-                    <property name="visible">True</property>
                     <child>
                       <object class="GtkButton" id="play">
-                        <property name="visible">True</property>
-                        <property name="can_focus">True</property>
                         <property name="receives_default">True</property>
                         <property name="width_request">80</property>
                         <property name="height_request">80</property>
-                        <child>
-                          <object class="GtkImage">
-                            <property name="visible">True</property>
-                            <property name="can_focus">False</property>
-                            <property name="icon_name">media-playback-start-symbolic</property>
-                            <property name="icon_size">6</property>
-                          </object>
-                        </child>
+                        <property name="icon_name">media-playback-start-symbolic</property>
                         <style>
                           <class name="circular"/>
                         </style>
@@ -201,18 +153,9 @@
                     </child>
                     <child>
                       <object class="GtkButton" id="pause">
-                        <property name="visible">True</property>
-                        <property name="can_focus">True</property>
                         <property name="width_request">80</property>
                         <property name="height_request">80</property>
-                        <child>
-                          <object class="GtkImage">
-                            <property name="visible">True</property>
-                            <property name="can_focus">False</property>
-                            <property name="icon_name">media-playback-pause-symbolic</property>
-                            <property name="icon_size">6</property>
-                          </object>
-                        </child>
+                        <property name="icon_name">media-playback-pause-symbolic</property>
                         <style>
                           <class name="circular"/>
                         </style>
@@ -222,21 +165,12 @@
                 </child>
                 <child>
                   <object class="GtkButton" id="forward">
-                    <property name="visible">True</property>
-                    <property name="can_focus">True</property>
                     <property name="receives_default">True</property>
                     <property name="width_request">60</property>
                     <property name="height_request">60</property>
                     <property name="valign">center</property>
                     <property name="margin-start">12</property>
-                    <child>
-                      <object class="GtkImage">
-                        <property name="visible">True</property>
-                        <property name="can_focus">False</property>
-                        <property name="icon_name">skip-forward-large-symbolic</property>
-                        <property name="icon_size">5</property>
-                      </object>
-                    </child>
+                    <property name="icon_name">skip-forward-large-symbolic</property>
                     <style>
                       <class name="circular"/>
                     </style>
@@ -248,8 +182,6 @@
         </child>
         <child>
           <object class="GtkBox" id="bottom">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
             <property name="margin_start">12</property>
             <property name="margin_end">12</property>
             <property name="margin_top">12</property>
diff --git a/podcasts-gtk/resources/gtk/player_rate.ui b/podcasts-gtk/resources/gtk/player_rate.ui
index ce8c151e..9ddae1e9 100644
--- a/podcasts-gtk/resources/gtk/player_rate.ui
+++ b/podcasts-gtk/resources/gtk/player_rate.ui
@@ -24,40 +24,14 @@ Tobias Bernard
 
 -->
 <interface>
-  <requires lib="gtk+" version="3.22"/>
   <object class="GtkMenuButton" id="rate_button">
-    <property name="visible">True</property>
-    <property name="can_focus">True</property>
     <property name="receives_default">True</property>
     <property name="tooltip_text" translatable="yes">Change the playback speed</property>
     <property name="halign">center</property>
     <property name="valign">center</property>
     <property name="direction">up</property>
     <property name="menu_model">rate_menu</property>
-    <child>
-      <object class="GtkBox" id="menu_box">
-        <property name="visible">True</property>
-        <property name="can_focus">False</property>
-        <property name="spacing">6</property>
-        <child>
-          <object class="GtkLabel" id="rate_label">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
-            <property name="label" translatable="yes">1.00×</property>
-            <attributes>
-              <attribute name="font-features" value="tnum=1"/>
-            </attributes>
-          </object>
-        </child>
-        <child>
-          <object class="GtkImage">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
-            <property name="icon_name">pan-down-symbolic</property>
-          </object>
-        </child>
-      </object>
-    </child>
+    <property name="label" translatable="yes">1.00×</property>
   </object>
   <menu id="rate_menu">
     <section>
diff --git a/podcasts-gtk/resources/gtk/player_toolbar.ui b/podcasts-gtk/resources/gtk/player_toolbar.ui
index a7de73d8..b0bf5464 100644
--- a/podcasts-gtk/resources/gtk/player_toolbar.ui
+++ b/podcasts-gtk/resources/gtk/player_toolbar.ui
@@ -24,111 +24,67 @@ Tobias Bernard
 
 -->
 <interface>
-  <requires lib="gtk+" version="3.22"/>
   <!-- interface-license-type gplv3 -->
   <!-- interface-name GNOME Podcast -->
   <!-- interface-description A podcast client for the GNOME Desktop -->
   <!-- interface-copyright 2017 - 2018 -->
   <!-- interface-authors Jordan Petridis\nTobias Bernard -->
-  <object class="GtkImage" id="fast_forward">
-    <property name="visible">True</property>
-    <property name="can_focus">False</property>
-    <property name="icon_name">skip-forward-symbolic</property>
-  </object>
-  <object class="GtkImage" id="pause_image">
-    <property name="visible">True</property>
-    <property name="can_focus">False</property>
-    <property name="margin_top">1</property>
-    <property name="icon_name">media-playback-pause-symbolic</property>
-    <property name="icon_size">1</property>
-  </object>
-  <object class="GtkImage" id="play_image">
-    <property name="visible">True</property>
-    <property name="can_focus">False</property>
-    <property name="margin_top">1</property>
-    <property name="icon_name">media-playback-start-symbolic</property>
-    <property name="icon_size">1</property>
-  </object>
-  <object class="GtkImage" id="rewind">
-    <property name="visible">True</property>
-    <property name="can_focus">False</property>
-    <property name="icon_name">skip-back-symbolic</property>
-  </object>
   <object class="GtkBox" id="container">
-    <property name="visible">True</property>
-    <property name="can_focus">False</property>
-    <property name="orientation">vertical</property>
-    <property name="spacing">0</property>
     <child>
-      <object class="GtkProgressBar" id="progress_bar">
-        <property name="no_show_all">True</property>
-        <style>
-          <class name="playback-progress"/>
-        </style>
-      </object>
-    </child>
-    <child>
-      <object class="GtkEventBox" id="evbox">
-        <property name="visible">True</property>
+      <object class="GtkRevealer" id="revealer">
+        <property name="valign">center</property>
         <child>
-          <object class="GtkActionBar" id="action_bar">
-            <property name="can_focus">False</property>
-            <property name="no_show_all">True</property>
-            <property name="valign">center</property>
+          <object class="AdwSqueezer" id="squeezer">
+            <property name="hexpand">True</property>
+            <property name="transition_type">crossfade</property>
+            <property name="homogeneous">False</property>
             <child>
-              <object class="HdySqueezer" id="squeezer">
-                <property name="visible">True</property>
-                <property name="transition_type">crossfade</property>
+              <object class="GtkBox">
+                <property name="orientation">vertical</property>
+                <property name="valign">center</property>
+                <child>
+                  <object class="GtkSeparator"/>
+                </child>
                 <child>
                   <object class="GtkBox" id="full">
-                    <property name="visible">True</property>
                     <property name="spacing">6</property>
+                    <property name="margin_start">6</property>
+                    <property name="margin_end">6</property>
+                    <property name="margin_top">6</property>
+                    <property name="margin_bottom">6</property>
                     <child>
                       <object class="GtkBox" id="buttons">
-                        <property name="visible">True</property>
-                        <property name="can_focus">False</property>
                         <property name="valign">center</property>
                         <child>
                           <object class="GtkButton" id="rewind_button">
                             <property name="width_request">42</property>
-                            <property name="visible">True</property>
-                            <property name="can_focus">True</property>
                             <property name="receives_default">True</property>
                             <property name="tooltip_text" translatable="yes">Rewind 10 seconds</property>
-                            <property name="image">rewind</property>
-                            <property name="always_show_image">True</property>
+                            <property name="icon_name">skip-back-symbolic</property>
                           </object>
                         </child>
                         <child>
                           <object class="GtkButton" id="play_button">
                             <property name="width_request">60</property>
-                            <property name="can_focus">True</property>
                             <property name="receives_default">True</property>
                             <property name="tooltip_text" translatable="yes">Play</property>
-                            <property name="image">play_image</property>
-                            <property name="always_show_image">True</property>
+                            <property name="icon_name">media-playback-start-symbolic</property>
                           </object>
                         </child>
                         <child>
                           <object class="GtkButton" id="pause_button">
                             <property name="width_request">60</property>
-                            <property name="visible">True</property>
-                            <property name="can_focus">True</property>
                             <property name="receives_default">True</property>
                             <property name="tooltip_text" translatable="yes">Pause</property>
-                            <property name="image">pause_image</property>
-                            <property name="always_show_image">True</property>
+                            <property name="icon_name">media-playback-pause-symbolic</property>
                           </object>
                         </child>
                         <child>
                           <object class="GtkButton" id="ff_button">
                             <property name="width_request">42</property>
-                            <property name="visible">True</property>
-                            <property name="can_focus">True</property>
                             <property name="receives_default">True</property>
                             <property name="tooltip_text" translatable="yes">Fast forward 10 seconds</property>
-                            <property name="image">fast_forward</property>
-                            <property name="always_show_image">True</property>
+                            <property name="icon_name">skip-forward-symbolic</property>
                           </object>
                         </child>
                         <style>
@@ -138,14 +94,10 @@ Tobias Bernard
                     </child>
                     <child>
                       <object class="GtkBox" id="info">
-                        <property name="visible">True</property>
-                        <property name="can_focus">False</property>
                         <property name="spacing">6</property>
                         <property name="width_request">150</property>
                         <child>
                           <object class="GtkImage" id="show_cover">
-                            <property name="visible">True</property>
-                            <property name="can_focus">False</property>
                             <property name="valign">center</property>
                             <property name="pixel_size">34</property>
                             <property name="icon_name">image-x-generic-symbolic</property>
@@ -153,16 +105,11 @@ Tobias Bernard
                         </child>
                         <child>
                           <object class="GtkBox">
-                            <property name="visible">True</property>
-                            <property name="can_focus">False</property>
                             <property name="receives_default">True</property>
-                            <property name="halign">center</property>
                             <property name="valign">center</property>
                             <property name="orientation">vertical</property>
                             <child>
                               <object class="GtkLabel" id="show_label">
-                                <property name="visible">True</property>
-                                <property name="can_focus">False</property>
                                 <property name="halign">start</property>
                                 <property name="label">Show Title</property>
                                 <property name="wrap">True</property>
@@ -176,8 +123,6 @@ Tobias Bernard
                             </child>
                             <child>
                               <object class="GtkLabel" id="episode_label">
-                                <property name="visible">True</property>
-                                <property name="can_focus">False</property>
                                 <property name="halign">start</property>
                                 <property name="label">Episode Title</property>
                                 <property name="wrap">True</property>
@@ -195,8 +140,6 @@ Tobias Bernard
                     </child>
                     <child>
                       <object class="GtkScale" id="seek">
-                        <property name="visible">True</property>
-                        <property name="can_focus">True</property>
                         <property name="hexpand">True</property>
                         <property name="round_digits">1</property>
                         <property name="draw_value">False</property>
@@ -205,15 +148,11 @@ Tobias Bernard
                     </child>
                     <child>
                       <object class="GtkBox" id="timer">
-                        <property name="visible">True</property>
-                        <property name="can_focus">False</property>
                         <property name="halign">start</property>
                         <property name="valign">center</property>
                         <property name="spacing">6</property>
                         <child>
                           <object class="GtkLabel" id="progress_time_label">
-                            <property name="visible">True</property>
-                            <property name="can_focus">False</property>
                             <property name="halign">start</property>
                             <property name="valign">center</property>
                             <property name="label">0:00</property>
@@ -224,8 +163,6 @@ Tobias Bernard
                         </child>
                         <child>
                           <object class="GtkLabel" id="separator">
-                            <property name="visible">True</property>
-                            <property name="can_focus">False</property>
                             <property name="halign">start</property>
                             <property name="valign">center</property>
                             <property name="label">/</property>
@@ -233,8 +170,6 @@ Tobias Bernard
                         </child>
                         <child>
                           <object class="GtkLabel" id="total_duration_label">
-                            <property name="visible">True</property>
-                            <property name="can_focus">False</property>
                             <property name="halign">start</property>
                             <property name="valign">center</property>
                             <property name="label">0:00</property>
@@ -247,15 +182,27 @@ Tobias Bernard
                     </child>
                   </object>
                 </child>
+              </object>
+            </child>
+            <child>
+              <object class="GtkBox" id="small">
+                <property name="orientation">vertical</property>
+                <child>
+                  <object class="GtkProgressBar" id="progress_bar">
+                    <style>
+                      <class name="playback-progress"/>
+                    </style>
+                  </object>
+                </child>
                 <child>
-                  <object class="GtkBox" id="small">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
+                  <object class="GtkBox">
                     <property name="spacing">6</property>
+                    <property name="margin_start">6</property>
+                    <property name="margin_end">6</property>
+                    <property name="margin_top">6</property>
+                    <property name="margin_bottom">6</property>
                     <child>
                       <object class="GtkImage" id="show_cover_small">
-                        <property name="visible">True</property>
-                        <property name="can_focus">False</property>
                         <property name="valign">center</property>
                         <property name="pixel_size">34</property>
                         <property name="icon_name">image-x-generic-symbolic</property>
@@ -263,16 +210,12 @@ Tobias Bernard
                     </child>
                     <child>
                       <object class="GtkBox">
-                        <property name="visible">True</property>
-                        <property name="can_focus">False</property>
                         <property name="receives_default">True</property>
-                        <property name="halign">center</property>
                         <property name="valign">center</property>
                         <property name="orientation">vertical</property>
+                        <property name="hexpand">True</property>
                         <child>
                           <object class="GtkLabel" id="show_label_small">
-                            <property name="visible">True</property>
-                            <property name="can_focus">False</property>
                             <property name="halign">start</property>
                             <property name="label">Show Title</property>
                             <property name="ellipsize">end</property>
@@ -284,8 +227,6 @@ Tobias Bernard
                         </child>
                         <child>
                           <object class="GtkLabel" id="episode_label_small">
-                            <property name="visible">True</property>
-                            <property name="can_focus">False</property>
                             <property name="halign">start</property>
                             <property name="label">Episode Title</property>
                             <property name="ellipsize">end</property>
@@ -299,42 +240,34 @@ Tobias Bernard
                     </child>
                     <child>
                       <object class="GtkStack" id="play_pause_small">
-                        <property name="visible">True</property>
                         <property name="hexpand">True</property>
                         <property name="halign">end</property>
+                        <property name="valign">center</property>
                         <child>
                           <object class="GtkButton" id="play_button_small">
-                            <property name="visible">True</property>
-                            <child>
-                              <object class="GtkImage">
-                                <property name="visible">True</property>
-                                <property name="icon_name">media-playback-start-symbolic</property>
-                              </object>
-                            </child>
+                            <property name="icon_name">media-playback-start-symbolic</property>
                           </object>
                         </child>
                         <child>
                           <object class="GtkButton" id="pause_button_small">
-                            <property name="visible">True</property>
-                            <child>
-                              <object class="GtkImage">
-                                <property name="visible">True</property>
-                                <property name="icon_name">media-playback-pause-symbolic</property>
-                              </object>
-                            </child>
+                            <property name="icon_name">media-playback-pause-symbolic</property>
                           </object>
                         </child>
                       </object>
                     </child>
                   </object>
                 </child>
+                <child>
+                  <object class="GtkGestureClick" id="gesture_click">
+                  </object>
+                </child>
               </object>
             </child>
-            <style>
-              <class name="player-actionbar"/>
-            </style>
           </object>
         </child>
+        <style>
+          <class name="player-actionbar"/>
+        </style>
       </object>
     </child>
   </object>
diff --git a/podcasts-gtk/resources/gtk/show_menu.ui b/podcasts-gtk/resources/gtk/show_menu.ui
index b665b4f6..0bd8d00f 100644
--- a/podcasts-gtk/resources/gtk/show_menu.ui
+++ b/podcasts-gtk/resources/gtk/show_menu.ui
@@ -24,7 +24,6 @@ Tobias Bernard
 
 -->
 <interface>
-  <requires lib="gtk+" version="3.22"/>
   <!-- interface-license-type gplv3 -->
   <!-- interface-name GNOME Podcasts -->
   <!-- interface-description A podcast client for the GNOME Desktop -->
diff --git a/podcasts-gtk/resources/gtk/show_widget.ui b/podcasts-gtk/resources/gtk/show_widget.ui
index 5562155e..aba5a899 100644
--- a/podcasts-gtk/resources/gtk/show_widget.ui
+++ b/podcasts-gtk/resources/gtk/show_widget.ui
@@ -24,15 +24,12 @@ Tobias Bernard
 
 -->
 <interface domain="">
-  <requires lib="gtk+" version="3.22"/>
   <!-- interface-license-type gplv3 -->
   <!-- interface-name GNOME Podcasts -->
   <!-- interface-description A podcast client for the GNOME Desktop -->
   <!-- interface-copyright 2017 - 2018 -->
   <!-- interface-authors Jordan Petridis\nTobias Bernard -->
   <object class="GtkBox" id="sub_container">
-    <property name="visible">True</property>
-    <property name="can_focus">False</property>
     <property name="margin_top">32</property>
     <property name="margin_bottom">32</property>
     <property name="hexpand">True</property>
@@ -40,8 +37,6 @@ Tobias Bernard
     <property name="spacing">6</property>
     <child>
       <object class="GtkBox">
-        <property name="visible">True</property>
-        <property name="can_focus">False</property>
         <property name="orientation">vertical</property>
         <property name="spacing">6</property>
         <property name="margin_start">6</property>
@@ -50,80 +45,74 @@ Tobias Bernard
         <property name="margin_bottom">6</property>
         <child>
           <object class="GtkImage" id="cover">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
             <property name="pixel_size">256</property>
             <property name="icon_name">image-x-generic-symbolic</property>
           </object>
         </child>
         <child>
-          <object class="HdyClamp">
-            <property name="visible">True</property>
+          <object class="AdwClamp">
             <property name="maximum_size">600</property>
             <child>
               <object class="GtkStack" id="description_stack">
-                <property name="visible">True</property>
-                <property name="can_focus">True</property>
                 <property name="vhomogeneous">False</property>
+                <property name="hhomogeneous">False</property>
                 <property name="transition_type">none</property>
                 <property name="interpolate_size">True</property>
-                <property name="margin">12</property>
+                <property name="margin_end">12</property>
+                <property name="margin_start">12</property>
+                <property name="margin_top">12</property>
+                <property name="margin_bottom">12</property>
                 <child>
-                  <object class="GtkBox">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
-                    <property name="halign">fill</property>
-                    <property name="orientation">vertical</property>
-                    <child>
-                      <object class="GtkLabel" id="description_short">
-                        <property name="visible">True</property>
-                        <property name="can_focus">False</property>
-                        <property name="halign">center</property>
-                        <property name="valign">center</property>
-                        <property name="use_markup">True</property>
-                        <property name="justify">center</property>
-                        <property name="wrap">True</property>
-                        <property name="wrap_mode">word-char</property>
-                        <property name="ellipsize">end</property>
-                        <property name="lines">4</property>
-                      </object>
-                    </child>
-                    <child>
-                      <object class="GtkRevealer" id="description_button_revealer">
-                        <property name="visible">True</property>
-                        <property name="reveal_child">False</property>
-                        <property name="transition_duration">1</property>
+                  <object class="GtkStackPage">
+                    <property name="name">short</property>
+                    <property name="child">
+                      <object class="GtkBox">
+                        <property name="halign">fill</property>
+                        <property name="orientation">vertical</property>
                         <child>
-                          <object class="GtkButton" id="description_button">
-                            <property name="label" translatable="yes">Read More</property>
-                            <property name="visible">True</property>
-                            <property name="can_focus">False</property>
-                            <property name="receives_default">False</property>
+                          <object class="GtkLabel" id="description_short">
                             <property name="halign">center</property>
-                            <property name="margin_top">12</property>
+                            <property name="valign">center</property>
+                            <property name="use_markup">True</property>
+                            <property name="justify">center</property>
+                            <property name="wrap">True</property>
+                            <property name="wrap_mode">word-char</property>
+                            <property name="ellipsize">end</property>
+                            <property name="lines">4</property>
+                          </object>
+                        </child>
+                        <child>
+                          <object class="GtkRevealer" id="description_button_revealer">
+                            <property name="reveal_child">False</property>
+                            <property name="transition_duration">1</property>
+                            <child>
+                              <object class="GtkButton" id="description_button">
+                                <property name="label" translatable="yes">Read More</property>
+                                <property name="receives_default">False</property>
+                                <property name="halign">center</property>
+                                <property name="margin_top">12</property>
+                              </object>
+                            </child>
                           </object>
                         </child>
                       </object>
-                    </child>
+                    </property>
                   </object>
-                  <packing>
-                    <property name="name">short</property>
-                  </packing>
                 </child>
                 <child>
-                  <object class="GtkLabel" id="description">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
-                    <property name="halign">center</property>
-                    <property name="valign">center</property>
-                    <property name="use_markup">True</property>
-                    <property name="justify">center</property>
-                    <property name="wrap">True</property>
-                    <property name="wrap_mode">word-char</property>
-                  </object>
-                  <packing>
+                  <object class="GtkStackPage">
                     <property name="name">full</property>
-                  </packing>
+                    <property name="child">
+                      <object class="GtkLabel" id="description">
+                        <property name="halign">center</property>
+                        <property name="valign">center</property>
+                        <property name="use_markup">True</property>
+                        <property name="justify">center</property>
+                        <property name="wrap">True</property>
+                        <property name="wrap_mode">word-char</property>
+                      </object>
+                    </property>
+                  </object>
                 </child>
               </object>
             </child>
@@ -133,8 +122,6 @@ Tobias Bernard
     </child>
     <child>
       <object class="GtkListBox" id="episodes">
-        <property name="visible">True</property>
-        <property name="can_focus">False</property>
         <property name="valign">start</property>
         <property name="selection_mode">none</property>
         <property name="activate_on_single_click">True</property>
diff --git a/podcasts-gtk/resources/gtk/style.css b/podcasts-gtk/resources/gtk/style.css
index ab43121b..9ca86aaa 100644
--- a/podcasts-gtk/resources/gtk/style.css
+++ b/podcasts-gtk/resources/gtk/style.css
@@ -25,7 +25,7 @@ progressbar.playback-progress trough progress {
 }
 
 actionbar.player-small revealer box {
-    border-top: none
+    border-top: none;
 }
 
 popover modelbutton > box > label {
diff --git a/podcasts-gtk/resources/org.gnome.Podcasts.gschema.xml.in b/podcasts-gtk/resources/org.gnome.Podcasts.gschema.xml.in
index bd6ecc74..fc0fca11 100644
--- a/podcasts-gtk/resources/org.gnome.Podcasts.gschema.xml.in
+++ b/podcasts-gtk/resources/org.gnome.Podcasts.gschema.xml.in
@@ -10,14 +10,6 @@
     </enum>
 
     <schema path="/org/gnome/Podcasts/" id="@appid@" gettext-domain="gnome-podcasts">
-        <key name="persist-window-geometry-top" type="i">
-            <default>-1</default>
-            <summary>Top position of the last open main window</summary>
-        </key>
-        <key name="persist-window-geometry-left" type="i">
-            <default>-1</default>
-            <summary>Left position of the last open main window</summary>
-        </key>
         <key name="persist-window-geometry-height" type="i">
             <default>640</default>
             <summary>Height of the last open main window</summary>
diff --git a/podcasts-gtk/src/app.rs b/podcasts-gtk/src/app.rs
index 7b330b7f..1526d268 100644
--- a/podcasts-gtk/src/app.rs
+++ b/podcasts-gtk/src/app.rs
@@ -21,11 +21,8 @@ use glib::clone;
 use glib::prelude::*;
 use glib::subclass::prelude::*;
 
-use gio::subclass::prelude::ApplicationImplExt;
-use gio::{self, prelude::*, ApplicationFlags};
-
 use gtk::prelude::*;
-use libhandy::prelude::*;
+use gtk::subclass::prelude::*;
 
 use gettextrs::{bindtextdomain, setlocale, textdomain, LocaleCategory};
 
@@ -82,13 +79,12 @@ impl ObjectSubclass for PdApplicationPrivate {
 
 impl ObjectImpl for PdApplicationPrivate {}
 
-impl gio::subclass::prelude::ApplicationImpl for PdApplicationPrivate {
+impl ApplicationImpl for PdApplicationPrivate {
     fn activate(&self, app: &PdApplication) {
         debug!("GtkApplication<PdApplication>::activate");
 
         if let Some(ref window) = *self.window.borrow() {
             // Ideally Gtk4/GtkBuilder make this irrelvent
-            window.show_all();
             window.present();
             info!("Window presented");
             return;
@@ -99,7 +95,6 @@ impl gio::subclass::prelude::ApplicationImpl for PdApplicationPrivate {
 
         let window = MainWindow::new(&app, &self.sender);
         window.setup_gactions();
-        window.show_all();
         window.present();
         self.window.replace(Some(window));
 
@@ -128,7 +123,7 @@ impl gio::subclass::prelude::ApplicationImpl for PdApplicationPrivate {
     }
 }
 
-impl gtk::subclass::application::GtkApplicationImpl for PdApplicationPrivate {}
+impl GtkApplicationImpl for PdApplicationPrivate {}
 
 glib::wrapper! {
     pub struct PdApplication(ObjectSubclass<PdApplicationPrivate>) @extends gio::Application, gtk::Application;
@@ -166,15 +161,11 @@ pub(crate) enum Action {
 
 impl PdApplication {
     pub(crate) fn new() -> Self {
-        let application = glib::Object::new::<PdApplication>(&[
+        glib::Object::new(&[
             ("application-id", &Some(APP_ID)),
-            ("flags", &ApplicationFlags::empty()),
+            ("resource-base-path", &Some("/org/gnome/Podcasts")),
         ])
-        .expect("Application initialization failed...");
-
-        application.set_resource_base_path(Some("/org/gnome/Podcasts"));
-
-        application
+        .expect("Application initialization failed...")
     }
 
     fn setup_timed_callbacks(&self) {
@@ -261,57 +252,50 @@ impl PdApplication {
                     .ok();
             }
             Action::ShowWidgetAnimated => {
-                window
-                    .main_deck
-                    .navigate(libhandy::NavigationDirection::Back);
+                window.main_deck.navigate(adw::NavigationDirection::Back);
                 let shows = window.content.get_shows();
                 let pop = shows.borrow().populated();
-                window
-                    .content
-                    .get_stack()
-                    .set_visible_child_full("shows", gtk::StackTransitionType::SlideLeft);
+                window.content.get_stack().set_visible_child_name("shows");
                 pop.borrow_mut()
                     .switch_visible(PopulatedState::Widget, gtk::StackTransitionType::SlideLeft);
             }
             Action::ShowShowsAnimated => {
-                window
-                    .main_deck
-                    .navigate(libhandy::NavigationDirection::Back);
+                window.main_deck.navigate(adw::NavigationDirection::Back);
                 let shows = window.content.get_shows();
                 let pop = shows.borrow().populated();
                 pop.borrow_mut()
                     .switch_visible(PopulatedState::View, gtk::StackTransitionType::SlideRight);
             }
             Action::MoveBackOnDeck => {
-                window
-                    .main_deck
-                    .navigate(libhandy::NavigationDirection::Back);
+                window.main_deck.navigate(adw::NavigationDirection::Back);
                 window.headerbar.reveal_bottom_switcher(true);
                 window.headerbar.update_bottom_switcher();
             }
             Action::GoToEpisodeDescription(show, ep) => {
                 window.clear_deck();
                 let description_widget = EpisodeDescription::new(ep, show, window.sender.clone());
-                description_widget.container.set_widget_name("description");
-                window.main_deck.add(&description_widget.container);
+                window.main_deck.append(&description_widget.container);
                 window
                     .main_deck
-                    .navigate(libhandy::NavigationDirection::Forward);
+                    .page(&description_widget.container)
+                    .unwrap()
+                    .set_name(Some("description"));
+                window.main_deck.navigate(adw::NavigationDirection::Forward);
                 window.headerbar.reveal_bottom_switcher(false);
             }
             Action::HeaderBarShowTile(title) => window.headerbar.switch_to_back(&title),
             Action::HeaderBarNormal => window.headerbar.switch_to_normal(),
             Action::CopiedUrlNotification => {
                 let notif = EpisodeDescription::copied_url_notif();
-                notif.show(&window.overlay, &window.headerbar.container);
+                notif.show(&window.overlay);
             }
             Action::MarkAllPlayerNotification(pd) => {
                 let notif = mark_all_notif(pd, &data.sender);
-                notif.show(&window.overlay, &window.headerbar.container);
+                notif.show(&window.overlay);
             }
             Action::RemoveShow(pd) => {
                 let notif = remove_show_notif(pd, data.sender.clone());
-                notif.show(&window.overlay, &window.headerbar.container);
+                notif.show(&window.overlay);
             }
             Action::ErrorNotification(err) => {
                 error!("An error notification was triggered: {}", err);
@@ -321,7 +305,7 @@ impl PdApplication {
                 };
                 let undo_cb: Option<fn()> = None;
                 let notif = InAppNotification::new(&err, 6000, callback, undo_cb);
-                notif.show(&window.overlay, &window.headerbar.container);
+                notif.show(&window.overlay);
             }
             Action::UpdateFeed(source) => {
                 if window.updating.get() {
@@ -356,13 +340,8 @@ impl PdApplication {
                 updater.set_close_state(State::Hidden);
                 updater.set_spinner_state(SpinnerState::Active);
 
-                let old = window.updater.replace(Some(updater));
-                if let Some(i) = old {
-                    unsafe { i.destroy() }
-                }
-
                 if let Some(i) = window.updater.borrow().as_ref() {
-                    i.show(&window.overlay, &window.headerbar.container)
+                    i.show(&window.overlay)
                 }
             }
             Action::InitEpisode(rowid) => {
@@ -436,7 +415,6 @@ impl PdApplication {
 
         // Weird magic I copy-pasted that sets the Application Name in the Shell.
         glib::set_application_name(&i18n("Podcasts"));
-        glib::set_prgname(Some("gnome-podcasts"));
         gtk::Window::set_default_icon_name(APP_ID);
         let args: Vec<String> = env::args().collect();
         ApplicationExtManual::run_with_args(&application, &args);
diff --git a/podcasts-gtk/src/headerbar.rs b/podcasts-gtk/src/headerbar.rs
index 5eff276c..ce9a94f5 100644
--- a/podcasts-gtk/src/headerbar.rs
+++ b/podcasts-gtk/src/headerbar.rs
@@ -37,10 +37,10 @@ use crate::i18n::i18n;
 #[derive(Debug, Clone)]
 // TODO: Make a proper state machine for the headerbar states
 pub(crate) struct Header {
-    pub(crate) container: libhandy::HeaderBar,
-    pub(crate) switch: libhandy::ViewSwitcher,
-    pub(crate) bottom_switcher: libhandy::ViewSwitcherBar,
-    switch_squeezer: libhandy::Squeezer,
+    pub(crate) container: adw::HeaderBar,
+    pub(crate) switch: adw::ViewSwitcher,
+    pub(crate) bottom_switcher: adw::ViewSwitcherBar,
+    switch_squeezer: adw::Squeezer,
     back: gtk::Button,
     title_stack: gtk::Stack,
     show_title: gtk::Label,
@@ -92,9 +92,10 @@ impl AddPopover {
     // FIXME: THIS ALSO SUCKS!
     fn on_add_clicked(&self, sender: &Sender<Action>) -> Result<()> {
         let url = self.entry.text();
-        let sender2 = sender.clone();
 
-        tokio::spawn(async move { add_podcast_from_url(url.to_string(), &sender2).await });
+        tokio::spawn(clone!(@strong sender => async move {
+            add_podcast_from_url(url.to_string(), &sender).await;
+        }));
 
         self.container.hide();
         Ok(())
@@ -153,19 +154,16 @@ impl AddPopover {
         icon_tooltip: Option<&str>,
     ) {
         let entry = &self.entry;
-        let icon_position = gtk::EntryIconPosition::Secondary;
-        entry.set_icon_from_icon_name(icon_position, icon_name);
+        entry.set_secondary_icon_name(icon_name);
         if let Some(icon_tooltip_text) = icon_tooltip {
-            entry.set_icon_tooltip_text(icon_position, Some(i18n(icon_tooltip_text).as_str()));
+            entry.set_secondary_icon_tooltip_text(Some(i18n(icon_tooltip_text).as_str()));
         }
         self.add.set_sensitive(sensitive);
 
-        let error_style_class = &gtk::STYLE_CLASS_ERROR;
-        let style_context = entry.style_context();
         if error {
-            style_context.add_class(error_style_class);
+            entry.add_css_class("error");
         } else {
-            style_context.remove_class(error_style_class);
+            entry.remove_css_class("error");
         }
     }
 }
@@ -176,10 +174,10 @@ impl Default for Header {
         let menus = gtk::Builder::from_resource("/org/gnome/Podcasts/gtk/hamburger.ui");
 
         let header = builder.object("headerbar").unwrap();
-        let switch: libhandy::ViewSwitcher = builder.object("switch").unwrap();
+        let switch: adw::ViewSwitcher = builder.object("switch").unwrap();
         let back = builder.object("back").unwrap();
         let title_stack = builder.object("title_stack").unwrap();
-        let switch_squeezer: libhandy::Squeezer = builder.object("switch_squeezer").unwrap();
+        let switch_squeezer: adw::Squeezer = builder.object("switch_squeezer").unwrap();
         let show_title = builder.object("show_title").unwrap();
 
         // The hamburger menu
@@ -202,7 +200,7 @@ impl Default for Header {
         };
 
         // View switcher bar that goes at the bottom of the window
-        let switcher = libhandy::ViewSwitcherBar::new();
+        let switcher = adw::ViewSwitcherBar::new();
         switcher.set_reveal(false);
 
         Header {
@@ -289,7 +287,7 @@ impl Header {
     }
 
     pub(crate) fn open_menu(&self) {
-        self.hamburger.clicked();
+        self.hamburger.popup();
     }
 
     pub(crate) fn set_secondary_menu(&self, menu: &gio::MenuModel) {
diff --git a/podcasts-gtk/src/main.rs b/podcasts-gtk/src/main.rs
index da3300de..8a4d3675 100644
--- a/podcasts-gtk/src/main.rs
+++ b/podcasts-gtk/src/main.rs
@@ -18,7 +18,7 @@
 // SPDX-License-Identifier: GPL-3.0-or-later
 
 // Enable lint group collections
-#![warn(nonstandard_style, rust_2018_idioms, bad_style, unused)]
+#![warn(nonstandard_style, rust_2018_idioms, bad_style)]
 // standalone lints
 #![warn(
     const_err,
@@ -47,8 +47,6 @@ extern crate pretty_assertions;
 #[macro_use]
 extern crate html5ever;
 
-use gtk::prelude::*;
-
 // Exports the macros defined in utils to the namespace of the crate so they can be used
 // easily without import
 #[macro_use]
@@ -82,7 +80,7 @@ fn init_gtk_tests() -> anyhow::Result<()> {
 
     gst::init()?;
     gtk::init()?;
-    libhandy::init();
+    adw::init();
     register_resources()?;
     Ok(())
 }
@@ -92,16 +90,16 @@ async fn main() {
     pretty_env_logger::init();
     gst::init().expect("Error initializing gstreamer");
     gtk::init().expect("Error initializing gtk.");
-    libhandy::init();
+    adw::init();
     register_resources().expect("Error registering resources");
 
     // Add custom style
     let provider = gtk::CssProvider::new();
-    gtk::CssProvider::load_from_resource(&provider, "/org/gnome/Podcasts/gtk/style.css");
-    gtk::StyleContext::add_provider_for_screen(
-        &gdk::Screen::default().expect("Error initializing gtk css provider."),
+    provider.load_from_resource("/org/gnome/Podcasts/gtk/style.css");
+    gtk::StyleContext::add_provider_for_display(
+        &gtk::gdk::Display::default().expect("Error initializing gtk css provider."),
         &provider,
-        600,
+        gtk::STYLE_PROVIDER_PRIORITY_APPLICATION,
     );
 
     PdApplication::run();
diff --git a/podcasts-gtk/src/settings.rs b/podcasts-gtk/src/settings.rs
index 0c6e0fb7..fff6a7ce 100644
--- a/podcasts-gtk/src/settings.rs
+++ b/podcasts-gtk/src/settings.rs
@@ -19,32 +19,23 @@
 use gio::{prelude::SettingsExt, Settings};
 use gtk::prelude::GtkWindowExt;
 
-use libhandy as hdy;
-
 use chrono::prelude::*;
 use chrono::Duration;
 
 pub(crate) struct WindowGeometry {
-    left: i32,
-    top: i32,
     width: i32,
     height: i32,
     is_maximized: bool,
 }
 
 impl WindowGeometry {
-    pub(crate) fn from_window(window: &hdy::ApplicationWindow) -> WindowGeometry {
-        let position = window.position();
-        let size = window.size();
-        let left = position.0;
-        let top = position.1;
+    pub(crate) fn from_window(window: &adw::ApplicationWindow) -> WindowGeometry {
+        let size = window.default_size();
         let width = size.0;
         let height = size.1;
         let is_maximized = window.is_maximized();
 
         WindowGeometry {
-            left,
-            top,
             width,
             height,
             is_maximized,
@@ -52,40 +43,28 @@ impl WindowGeometry {
     }
 
     pub(crate) fn from_settings(settings: &gio::Settings) -> WindowGeometry {
-        let top = settings.int("persist-window-geometry-top");
-        let left = settings.int("persist-window-geometry-left");
         let width = settings.int("persist-window-geometry-width");
         let height = settings.int("persist-window-geometry-height");
         let is_maximized = settings.boolean("persist-window-geometry-maximized");
 
         WindowGeometry {
-            left,
-            top,
             width,
             height,
             is_maximized,
         }
     }
 
-    pub(crate) fn apply(&self, window: &hdy::ApplicationWindow) {
+    pub(crate) fn apply(&self, window: &adw::ApplicationWindow) {
         if self.width > 0 && self.height > 0 {
-            window.resize(self.width, self.height);
+            window.set_default_size(self.width, self.height);
         }
 
         if self.is_maximized {
             window.maximize();
-        } else if self.top > 0 && self.left > 0 {
-            window.move_(self.left, self.top);
         }
     }
 
     pub(crate) fn write(&self, settings: &gio::Settings) {
-        settings
-            .set_int("persist-window-geometry-left", self.left)
-            .unwrap();
-        settings
-            .set_int("persist-window-geometry-top", self.top)
-            .unwrap();
         settings
             .set_int("persist-window-geometry-width", self.width)
             .unwrap();
diff --git a/podcasts-gtk/src/stacks/content.rs b/podcasts-gtk/src/stacks/content.rs
index 5440f32f..b6f22fdf 100644
--- a/podcasts-gtk/src/stacks/content.rs
+++ b/podcasts-gtk/src/stacks/content.rs
@@ -39,7 +39,7 @@ pub(crate) enum State {
 #[derive(Debug, Clone)]
 pub(crate) struct Content {
     container: gtk::Box,
-    stack: gtk::Stack,
+    stack: adw::ViewStack,
     shows: Rc<RefCell<ShowStack>>,
     home: Rc<RefCell<HomeStack>>,
     sender: Sender<Action>,
@@ -48,24 +48,22 @@ pub(crate) struct Content {
 impl Content {
     pub(crate) fn new(sender: &Sender<Action>) -> Result<Rc<Content>> {
         let container = gtk::Box::new(gtk::Orientation::Vertical, 0);
-        let stack = gtk::Stack::new();
+        let stack = adw::ViewStack::new();
         let home = Rc::new(RefCell::new(HomeStack::new(sender.clone())?));
         let shows = Rc::new(RefCell::new(ShowStack::new(sender.clone())));
 
         // container will hold the header bar and the content
         container.set_widget_name("content");
-        container.pack_end(&stack, true, true, 0);
-        stack.add_titled(&home.borrow().get_stack(), "home", &i18n("New"));
-        stack.add_titled(&shows.borrow().get_stack(), "shows", &i18n("Shows"));
-
-        stack.set_child_icon_name(
-            &home.borrow().get_stack(),
-            Some("document-open-recent-symbolic"),
-        );
-        stack.set_child_icon_name(
-            &shows.borrow().get_stack(),
-            Some("audio-input-microphone-symbolic"),
-        );
+        container.append(&stack);
+        let home_page = stack
+            .add_titled(&home.borrow().get_stack(), Some("home"), &i18n("New"))
+            .unwrap();
+        let shows_page = stack
+            .add_titled(&shows.borrow().get_stack(), Some("shows"), &i18n("Shows"))
+            .unwrap();
+
+        home_page.set_icon_name(Some("document-open-recent-symbolic"));
+        shows_page.set_icon_name(Some("audio-input-microphone-symbolic"));
 
         let con = Content {
             container,
@@ -120,7 +118,7 @@ impl Content {
             .ok();
     }
 
-    pub(crate) fn get_stack(&self) -> gtk::Stack {
+    pub(crate) fn get_stack(&self) -> adw::ViewStack {
         self.stack.clone()
     }
     pub(crate) fn get_container(&self) -> gtk::Box {
diff --git a/podcasts-gtk/src/stacks/home.rs b/podcasts-gtk/src/stacks/home.rs
index 40b3d57a..9de89c0d 100644
--- a/podcasts-gtk/src/stacks/home.rs
+++ b/podcasts-gtk/src/stacks/home.rs
@@ -17,7 +17,6 @@
 //
 // SPDX-License-Identifier: GPL-3.0-or-later
 
-use gtk::prelude::*;
 use gtk::StackTransitionType;
 
 use anyhow::Result;
@@ -46,8 +45,8 @@ impl HomeStack {
         let stack = gtk::Stack::new();
         let state = State::Empty;
 
-        stack.add_named(episodes.view.container(), "home");
-        stack.add_named(empty.deref(), "empty");
+        stack.add_named(episodes.view.container(), Some("home"));
+        stack.add_named(empty.deref(), Some("empty"));
 
         let home = HomeStack {
             empty,
@@ -76,7 +75,7 @@ impl HomeStack {
         // during this the previous view is removed,
         // and the visible child falls back to empty view.
         self.stack.remove(old);
-        self.stack.add_named(eps.view.container(), "home");
+        self.stack.add_named(eps.view.container(), Some("home"));
         // Keep the previous state.
         let s = self.state;
         // Set the visible child back to the previous one to avoid
@@ -86,11 +85,6 @@ impl HomeStack {
         // replace view in the struct too
         self.episodes = eps;
 
-        // This might not be needed
-        unsafe {
-            old.destroy();
-        }
-
         Ok(())
     }
 
diff --git a/podcasts-gtk/src/stacks/populated.rs b/podcasts-gtk/src/stacks/populated.rs
index 23d2a70b..68ba768d 100644
--- a/podcasts-gtk/src/stacks/populated.rs
+++ b/podcasts-gtk/src/stacks/populated.rs
@@ -56,10 +56,9 @@ impl PopulatedStack {
         let show = Rc::new(ShowWidget::default());
         let container = gtk::Box::new(gtk::Orientation::Horizontal, 0);
 
-        stack.add_named(populated.view.container(), "shows");
-        stack.add_named(show.view.container(), "widget");
-        container.add(&stack);
-        container.show_all();
+        stack.add_named(populated.view.container(), Some("shows"));
+        stack.add_named(show.view.container(), Some("widget"));
+        container.append(&stack);
 
         PopulatedStack {
             container,
@@ -96,12 +95,7 @@ impl PopulatedStack {
         self.populated = pop;
         self.stack.remove(old);
         self.stack
-            .add_named(self.populated.view.container(), "shows");
-
-        // This might not be needed
-        unsafe {
-            old.destroy();
-        }
+            .add_named(self.populated.view.container(), Some("shows"));
 
         Ok(())
     }
@@ -120,7 +114,8 @@ impl PopulatedStack {
 
         self.show = new;
         self.stack.remove(&old);
-        self.stack.add_named(self.show.view.container(), "widget");
+        self.stack
+            .add_named(self.show.view.container(), Some("widget"));
 
         // The current visible child might change depending on
         // removal and insertion in the gtk::Stack, so we have
@@ -132,7 +127,6 @@ impl PopulatedStack {
     }
 
     pub(crate) fn update_widget(&mut self) -> Result<()> {
-        let old = self.show.view.container().clone();
         let id = self.show.show_id();
         if id.is_none() {
             return Ok(());
@@ -147,11 +141,6 @@ impl PopulatedStack {
         let s = self.state;
         self.switch_visible(s, StackTransitionType::Crossfade);
 
-        // This might not be needed
-        unsafe {
-            old.destroy();
-        }
-
         Ok(())
     }
 
diff --git a/podcasts-gtk/src/stacks/show.rs b/podcasts-gtk/src/stacks/show.rs
index 7e5ede58..a5f3e275 100644
--- a/podcasts-gtk/src/stacks/show.rs
+++ b/podcasts-gtk/src/stacks/show.rs
@@ -17,8 +17,6 @@
 //
 // SPDX-License-Identifier: GPL-3.0-or-later
 
-use gtk::prelude::*;
-
 use anyhow::Result;
 use glib::Sender;
 use podcasts_data::dbqueries::is_episodes_populated;
@@ -49,8 +47,8 @@ impl ShowStack {
         let stack = gtk::Stack::new();
         let state = State::Empty;
 
-        stack.add_named(&populated.borrow().container(), "populated");
-        stack.add_named(empty.deref(), "empty");
+        stack.add_named(&populated.borrow().container(), Some("populated"));
+        stack.add_named(empty.deref(), Some("empty"));
 
         let mut show = ShowStack {
             empty,
diff --git a/podcasts-gtk/src/utils.rs b/podcasts-gtk/src/utils.rs
index 17ce2e95..0c099c9b 100644
--- a/podcasts-gtk/src/utils.rs
+++ b/podcasts-gtk/src/utils.rs
@@ -17,13 +17,13 @@
 //
 // SPDX-License-Identifier: GPL-3.0-or-later
 
-use gdk_pixbuf::Pixbuf;
 use gio::prelude::ActionMapExt;
 use glib::clone;
+use glib::IsA;
 use glib::Sender;
 use glib::Variant;
 use glib::{self, object::WeakRef};
-use glib::{IsA, Object};
+use gtk::gdk_pixbuf::Pixbuf;
 use gtk::prelude::*;
 use gtk::Widget;
 
@@ -130,15 +130,14 @@ where
 /// let list = gtk::ListBox::new();
 /// lazy_load(widgets, list, |w| w, || {});
 /// ```
-pub(crate) fn lazy_load<T, C, F, W, U>(
+pub(crate) fn lazy_load<T, F, W, U>(
     data: T,
-    container: WeakRef<C>,
+    container: WeakRef<gtk::ListBox>,
     mut constructor: F,
     callback: U,
 ) where
     T: IntoIterator + 'static,
     T::Item: 'static,
-    C: IsA<Object> + ContainerExt + 'static,
     F: FnMut(T::Item) -> W + 'static,
     W: IsA<Widget> + WidgetExt,
     U: Fn() + 'static,
@@ -150,7 +149,32 @@ pub(crate) fn lazy_load<T, C, F, W, U>(
         };
 
         let widget = constructor(x);
-        container.add(&widget);
+        container.append(&widget);
+        widget.show();
+    };
+    lazy_load_full(data, func, callback);
+}
+
+pub(crate) fn lazy_load_flowbox<T, F, W, U>(
+    data: T,
+    container: WeakRef<gtk::FlowBox>,
+    mut constructor: F,
+    callback: U,
+) where
+    T: IntoIterator + 'static,
+    T::Item: 'static,
+    F: FnMut(T::Item) -> W + 'static,
+    W: IsA<Widget> + WidgetExt,
+    U: Fn() + 'static,
+{
+    let func = move |x| {
+        let container = match container.upgrade() {
+            Some(c) => c,
+            None => return,
+        };
+
+        let widget = constructor(x);
+        container.insert(&widget, -1);
         widget.show();
     };
     lazy_load_full(data, func, callback);
@@ -186,7 +210,7 @@ where
 // https://blogs.gnome.org/jsparber/2018/04/29/animate-a-scrolledwindow/
 #[allow(clippy::float_cmp)]
 pub(crate) fn smooth_scroll_to(view: &gtk::ScrolledWindow, target: &gtk::Adjustment) {
-    let adj = view.vadjustment();
+    let adj = view.vadjustment().unwrap();
     if let Some(clock) = view.frame_clock() {
         let duration = 200;
         let start = adj.value();
@@ -390,10 +414,7 @@ pub(crate) fn set_image_from_path(image: &gtk::Image, show_id: i32, size: u32) -
                         }
                     }
                     Err(DownloadError::NoImageLocation) => {
-                        image.set_from_icon_name(
-                            Some("image-x-generic-symbolic"),
-                            gtk::IconSize::__Unknown(s),
-                        );
+                        image.set_from_icon_name(Some("image-x-generic-symbolic"));
                     }
                     _ => {}
                 }
@@ -505,9 +526,6 @@ pub(crate) fn on_import_clicked(window: &gtk::ApplicationWindow, sender: &Sender
         None,
     );
 
-    // Do not show hidden(.thing) files
-    dialog.set_show_hidden(false);
-
     // Set a filter to show only xml files
     let filter = FileFilter::new();
     FileFilter::set_name(&filter, Some(i18n("OPML file").as_str()));
@@ -516,27 +534,31 @@ pub(crate) fn on_import_clicked(window: &gtk::ApplicationWindow, sender: &Sender
     filter.add_mime_type("text/x-opml");
     dialog.add_filter(&filter);
 
-    let resp = dialog.run();
-    debug!("Dialog Response {}", resp);
-    if resp == ResponseType::Accept {
-        if let Some(filename) = dialog.filename() {
-            debug!("File selected: {:?}", filename);
-
-            rayon::spawn(clone!(@strong sender => move || {
-                // Parse the file and import the feeds
-                if let Ok(sources) = opml::import_from_file(filename) {
-                    // Refresh the successfully parsed feeds to index them
-                    schedule_refresh(Some(sources), sender)
-                } else {
-                    let text = i18n("Failed to parse the imported file");
-                    send!(sender, Action::ErrorNotification(text));
+    dialog.connect_response(clone!(@strong sender, @strong dialog => move |_, resp| {
+        debug!("Dialog Response {}", resp);
+        dialog.destroy();
+        if resp == ResponseType::Accept {
+            if let Some(file) = dialog.file() {
+                if let Some(path) = file.peek_path() {
+                    rayon::spawn(clone!(@strong sender => move || {
+                        // Parse the file and import the feeds
+                        if let Ok(sources) = opml::import_from_file(path) {
+                            // Refresh the successfully parsed feeds to index them
+                            schedule_refresh(Some(sources), sender)
+                        } else {
+                            let text = i18n("Failed to parse the imported file");
+                            send!(sender, Action::ErrorNotification(text));
+                        }
+                    }))
                 }
-            }))
-        } else {
-            let text = i18n("Selected file could not be accessed.");
-            send!(sender, Action::ErrorNotification(text))
+            } else {
+                let text = i18n("Selected file could not be accessed.");
+                send!(sender, Action::ErrorNotification(text))
+            }
         }
-    }
+    }));
+
+    dialog.show();
 }
 
 pub(crate) fn on_export_clicked(window: &gtk::ApplicationWindow, sender: &Sender<Action>) {
@@ -554,9 +576,6 @@ pub(crate) fn on_export_clicked(window: &gtk::ApplicationWindow, sender: &Sender
     // Translators: This is the string of the suggested name for the exported opml file
     dialog.set_current_name(&format!("{}.opml", i18n("gnome-podcasts-exported-shows")));
 
-    // Do not show hidden(.thing) files
-    dialog.set_show_hidden(false);
-
     // Set a filter to show only xml files
     let filter = FileFilter::new();
     FileFilter::set_name(&filter, Some(i18n("OPML file").as_str()));
@@ -565,23 +584,28 @@ pub(crate) fn on_export_clicked(window: &gtk::ApplicationWindow, sender: &Sender
     filter.add_mime_type("text/x-opml");
     dialog.add_filter(&filter);
 
-    let resp = dialog.run();
-    debug!("Dialog Response {}", resp);
-    if resp == ResponseType::Accept {
-        if let Some(filename) = dialog.filename() {
-            debug!("File selected: {:?}", filename);
-
-            rayon::spawn(clone!(@strong sender => move || {
-                if opml::export_from_db(filename, i18n("GNOME Podcasts Subscriptions").as_str()).is_err() {
-                    let text = i18n("Failed to export podcasts");
-                    send!(sender, Action::ErrorNotification(text));
+    dialog.connect_response(clone!(@strong sender, @strong dialog => move |_, resp| {
+        debug!("Dialog Response {}", resp);
+        dialog.destroy();
+        if resp == ResponseType::Accept {
+            if let Some(file) = dialog.file() {
+                if let Some(path) = file.peek_path() {
+                    debug!("File selected: {:?}", path);
+                    rayon::spawn(clone!(@strong sender => move || {
+                        if opml::export_from_db(path, i18n("GNOME Podcasts Subscriptions").as_str()).is_err() {
+                            let text = i18n("Failed to export podcasts");
+                            send!(sender, Action::ErrorNotification(text));
+                        }
+                    }))
                 }
-            }))
-        } else {
-            let text = i18n("Selected file could not be accessed.");
-            send!(sender, Action::ErrorNotification(text));
+            } else {
+                let text = i18n("Selected file could not be accessed.");
+                send!(sender, Action::ErrorNotification(text));
+            }
         }
-    }
+    }));
+
+    dialog.show();
 }
 
 #[cfg(test)]
diff --git a/podcasts-gtk/src/widgets/aboutdialog.rs b/podcasts-gtk/src/widgets/aboutdialog.rs
index 1e20b8c1..fba52fe7 100644
--- a/podcasts-gtk/src/widgets/aboutdialog.rs
+++ b/podcasts-gtk/src/widgets/aboutdialog.rs
@@ -18,7 +18,7 @@
 // SPDX-License-Identifier: GPL-3.0-or-later
 
 use crate::config::{APP_ID, VERSION};
-use gtk::{prelude::*, AboutDialogBuilder};
+use gtk::prelude::*;
 
 use crate::i18n::i18n;
 
@@ -43,31 +43,23 @@ pub(crate) fn about_dialog(window: &gtk::ApplicationWindow) {
         "Piotr Drąg",
         "Rowan Lewis",
         "Zander Brown",
-    ]
-    .iter()
-    .map(|name| name.to_string())
-    .collect();
+    ];
 
-    let artists = ["Tobias Bernard", "Sam Hewitt"]
-        .iter()
-        .map(|name| name.to_string())
-        .collect();
+    let dialog = gtk::AboutDialog::new();
+    dialog.set_logo_icon_name(Some(APP_ID));
+    dialog.set_comments(Some(i18n("Podcast Client for the GNOME Desktop.").as_str()));
+    dialog.set_copyright(Some("© 2017, 2018 Jordan Petridis"));
+    dialog.set_license_type(gtk::License::Gpl30);
+    dialog.set_modal(true);
+    dialog.set_version(Some(VERSION));
+    dialog.set_program_name(Some(&i18n("Podcasts")));
+    dialog.set_website(Some("https://wiki.gnome.org/Apps/Podcasts"));
+    dialog.set_website_label(&i18n("Learn more about GNOME Podcasts"));
+    dialog.set_transient_for(Some(window));
 
-    let dialog = AboutDialogBuilder::new()
-        .logo_icon_name(APP_ID)
-        .comments(i18n("Podcast Client for the GNOME Desktop.").as_str())
-        .copyright("© 2017-2021 Jordan Petridis")
-        .license_type(gtk::License::Gpl30)
-        .modal(true)
-        .version(VERSION)
-        .program_name(&i18n("Podcasts"))
-        .website("https://gitlab.gnome.org/World/podcasts")
-        .website_label(i18n("Learn more about GNOME Podcasts").as_str())
-        .transient_for(window)
-        .artists(artists)
-        .authors(authors)
-        .translator_credits(i18n("translator-credits").as_str())
-        .build();
+    dialog.set_artists(&["Tobias Bernard", "Sam Hewitt"]);
+    dialog.set_authors(&authors);
+    dialog.set_translator_credits(Some(i18n("translator-credits").as_str()));
 
     dialog.show();
 }
diff --git a/podcasts-gtk/src/widgets/appnotif.rs b/podcasts-gtk/src/widgets/appnotif.rs
index afc7d3e7..602b55fe 100644
--- a/podcasts-gtk/src/widgets/appnotif.rs
+++ b/podcasts-gtk/src/widgets/appnotif.rs
@@ -139,8 +139,7 @@ impl InAppNotification {
     // the revealer should be attached to something that displays it.
     // Previously we where doing it in the constructor, which had the result
     // of the animation being skipped cause there was no parent widget to display it.
-    pub(crate) fn show(&self, overlay: &gtk::Overlay, headerbar: &libhandy::HeaderBar) {
-        self.revealer.set_margin_top(headerbar.preferred_height().1);
+    pub(crate) fn show(&self, overlay: &gtk::Overlay) {
         overlay.add_overlay(&self.revealer);
         // We need to display the notification after the widget is added to the overlay
         // so there will be a nice animation.
@@ -173,8 +172,4 @@ impl InAppNotification {
             }
         }
     }
-
-    pub(crate) unsafe fn destroy(self) {
-        self.revealer.destroy();
-    }
 }
diff --git a/podcasts-gtk/src/widgets/base_view.rs b/podcasts-gtk/src/widgets/base_view.rs
index bbaac32b..1c3a0010 100644
--- a/podcasts-gtk/src/widgets/base_view.rs
+++ b/podcasts-gtk/src/widgets/base_view.rs
@@ -18,7 +18,7 @@
 // SPDX-License-Identifier: GPL-3.0-or-later
 
 use crate::utils::smooth_scroll_to;
-use gtk::{self, prelude::*, Adjustment, Orientation, PolicyType};
+use gtk::{prelude::*, Adjustment, Orientation, PolicyType};
 
 #[derive(Debug, Clone)]
 pub(crate) struct BaseView {
@@ -29,12 +29,11 @@ pub(crate) struct BaseView {
 impl Default for BaseView {
     fn default() -> Self {
         let container = gtk::Box::new(Orientation::Horizontal, 0);
-        let scrolled_window = gtk::ScrolledWindow::new(None::<&Adjustment>, None::<&Adjustment>);
+        let scrolled_window = gtk::ScrolledWindow::new();
 
         scrolled_window.set_policy(PolicyType::Never, PolicyType::Automatic);
         container.set_size_request(360, -1);
-        container.add(&scrolled_window);
-        container.show_all();
+        container.append(&scrolled_window);
 
         BaseView {
             container,
@@ -52,8 +51,8 @@ impl BaseView {
         &self.scrolled_window
     }
 
-    pub(crate) fn add<T: IsA<gtk::Widget>>(&self, widget: &T) {
-        self.scrolled_window.add(widget);
+    pub(crate) fn set_child<T: IsA<gtk::Widget>>(&self, widget: &T) {
+        self.scrolled_window.set_child(Some(widget));
     }
 
     pub(crate) fn set_adjustments(
@@ -71,6 +70,6 @@ impl BaseView {
     }
 
     pub(crate) fn vadjustment(&self) -> Adjustment {
-        self.scrolled_window().vadjustment()
+        self.scrolled_window().vadjustment().unwrap()
     }
 }
diff --git a/podcasts-gtk/src/widgets/empty.rs b/podcasts-gtk/src/widgets/empty.rs
index 539dcb0b..8d438d15 100644
--- a/podcasts-gtk/src/widgets/empty.rs
+++ b/podcasts-gtk/src/widgets/empty.rs
@@ -18,7 +18,7 @@
 // SPDX-License-Identifier: GPL-3.0-or-later
 
 use crate::config::APP_ID;
-use gtk::{self, prelude::*};
+
 use std::ops::Deref;
 
 #[derive(Clone, Debug)]
@@ -36,10 +36,7 @@ impl Default for EmptyView {
         let builder = gtk::Builder::from_resource("/org/gnome/Podcasts/gtk/empty_view.ui");
         let view: gtk::Box = builder.object("empty_view").unwrap();
         let image: gtk::Image = builder.object("image").unwrap();
-        image.set_from_icon_name(
-            Some(format!("{}-symbolic", APP_ID).as_str()),
-            gtk::IconSize::__Unknown(256),
-        );
+        image.set_from_icon_name(Some(format!("{}-symbolic", APP_ID).as_str()));
         EmptyView(view)
     }
 }
diff --git a/podcasts-gtk/src/widgets/episode.rs b/podcasts-gtk/src/widgets/episode.rs
index d69a52cf..0948de06 100644
--- a/podcasts-gtk/src/widgets/episode.rs
+++ b/podcasts-gtk/src/widgets/episode.rs
@@ -230,22 +230,11 @@ impl Default for EpisodeWidget {
 impl EpisodeWidget {
     pub(crate) fn new(episode: EpisodeWidgetModel, sender: &Sender<Action>) -> Rc<Self> {
         let widget = Rc::new(Self::default());
-        let episode = RefCell::new(Some(episode));
         let weak = Rc::downgrade(&widget);
-        widget
-            .container
-            .connect_draw(clone!(@strong sender => move |_, _| {
-                if let Some(ep) = episode.borrow_mut().take() {
-                    if let Some(w) = weak.upgrade() {
-                        w.info.init(&ep)
-                    }
-                    Self::determine_buttons_state(&weak, &ep, &sender)
-                        .map_err(|err| error!("Error: {}", err))
-                        .ok();
-                };
-
-                gtk::Inhibit(false)
-            }));
+        widget.info.init(&episode);
+        Self::determine_buttons_state(&weak, &episode, &sender)
+            .map_err(|err| error!("Error: {}", err))
+            .ok();
 
         // When the widget is attached to a parent,
         // since it's a rust struct and not a widget the
@@ -258,9 +247,10 @@ impl EpisodeWidget {
         //
         // When the widget is detached from its parent view this
         // callback runs freeing the last reference we were holding.
-        let episode_widget = RefCell::new(Some(widget.clone()));
-        widget.container.connect_remove(move |_, _| {
-            episode_widget.borrow_mut().take();
+        // FIXME This hack feels even worse for GTK4; Use subclassing for EpisodeWidget?
+        let foo = RefCell::new(Some(widget.clone()));
+        widget.container.connect_destroy(move |_| {
+            foo.borrow_mut().take();
         });
 
         widget
@@ -459,8 +449,6 @@ impl EpisodeWidget {
             .buttons
             .download
             .connect_clicked(clone!(@strong weak, @strong sender => move |dl| {
-                // Make the button insensitive so it won't be pressed twice
-                dl.set_sensitive(false);
                 if let Ok(ep) = dbqueries::get_episode_widget_from_rowid(id) {
                     on_download_clicked(&ep, &sender)
                         .and_then(|_| {
diff --git a/podcasts-gtk/src/widgets/episode_description.rs b/podcasts-gtk/src/widgets/episode_description.rs
index 783d7986..7efca7be 100644
--- a/podcasts-gtk/src/widgets/episode_description.rs
+++ b/podcasts-gtk/src/widgets/episode_description.rs
@@ -17,7 +17,7 @@
 //
 // SPDX-License-Identifier: GPL-3.0-or-later
 
-use gtk::{self, prelude::*};
+use gtk::prelude::*;
 
 use glib::{clone, Sender};
 use podcasts_data::{Episode, Show};
@@ -30,7 +30,6 @@ use crate::widgets::EpisodeMenu;
 use crate::episode_description_parser;
 use crate::i18n::i18n;
 use chrono::prelude::*;
-use std::cell::Cell;
 use std::rc::Rc;
 use std::sync::Arc;
 
@@ -138,23 +137,9 @@ impl EpisodeDescription {
     }
 
     fn set_cover(&self, show_id: i32) {
-        // The closure above is a regular `Fn` closure.
-        // which means we can't mutate stuff inside it easily,
-        // so Cell is used.
-        //
-        // `Option<T>` along with the `.take()` method ensure
-        // that the function will only be run once, during the first execution.
-        let show_id = Cell::new(Some(show_id));
-
-        self.image.connect_draw(move |image, _| {
-            if let Some(id) = show_id.take() {
-                utils::set_image_from_path(image, id, 64)
-                    .map_err(|err| error!("Failed to set a cover: {}", err))
-                    .ok();
-            }
-
-            gtk::Inhibit(false)
-        });
+        utils::set_image_from_path(&self.image, show_id, 64)
+            .map_err(|err| error!("Failed to set a cover: {}", err))
+            .ok();
     }
 
     pub(crate) fn copied_url_notif() -> InAppNotification {
diff --git a/podcasts-gtk/src/widgets/episode_menu.rs b/podcasts-gtk/src/widgets/episode_menu.rs
index a4c500b6..3cd3a260 100644
--- a/podcasts-gtk/src/widgets/episode_menu.rs
+++ b/podcasts-gtk/src/widgets/episode_menu.rs
@@ -97,8 +97,8 @@ impl EpisodeMenu {
 }
 
 fn copy_text(text: &str) -> Option<()> {
-    let display = gdk::Display::default()?;
-    let clipboard = gtk::Clipboard::default(&display)?;
+    let display = gtk::gdk::Display::default()?;
+    let clipboard = display.clipboard();
     clipboard.set_text(text);
     Some(())
 }
diff --git a/podcasts-gtk/src/widgets/home_view.rs b/podcasts-gtk/src/widgets/home_view.rs
index 3e61a03c..2f452e16 100644
--- a/podcasts-gtk/src/widgets/home_view.rs
+++ b/podcasts-gtk/src/widgets/home_view.rs
@@ -20,12 +20,12 @@
 use anyhow::Result;
 use chrono::prelude::*;
 
-use gtk::{self, prelude::*, Adjustment};
+use gtk::{prelude::*, Adjustment};
 
 use glib::clone;
 
+use adw::Clamp;
 use glib::Sender;
-use libhandy::Clamp;
 use podcasts_data::dbqueries;
 use podcasts_data::EpisodeWidgetModel;
 
@@ -33,7 +33,6 @@ use crate::app::Action;
 use crate::utils::{self, lazy_load_full};
 use crate::widgets::{BaseView, EpisodeWidget};
 
-use std::cell::Cell;
 use std::rc::Rc;
 
 #[derive(Debug, Clone)]
@@ -81,8 +80,8 @@ impl Default for HomeView {
         clamp.show();
         clamp.set_maximum_size(700);
 
-        clamp.add(&frame_parent);
-        view.add(&clamp);
+        clamp.set_child(Some(&frame_parent));
+        view.set_child(&clamp);
 
         HomeView {
             view,
@@ -130,20 +129,19 @@ impl HomeView {
             }
         };
 
-        let callback = clone!(@weak home => move || {
+        let callback = clone!(@weak home => @default-return (), move || {
             if let Some(ref v) = vadj {
                 home.view.set_adjustments(None, Some(v))
             };
         });
 
         lazy_load_full(episodes, func, callback);
-        home.view.container().show_all();
         Ok(home)
     }
 }
 
 fn add_to_box(widget: &HomeEpisode, listbox: &gtk::ListBox, box_: &gtk::Box) {
-    listbox.add(&widget.row);
+    listbox.append(&widget.row);
     box_.show();
 }
 
@@ -180,9 +178,9 @@ impl Default for HomeEpisode {
         let container: gtk::Box = builder.object("container").unwrap();
         let image: gtk::Image = builder.object("cover").unwrap();
         let ep = EpisodeWidget::default();
-        container.pack_start(&ep.container, true, true, 0);
+        container.append(&ep.container);
         let row = gtk::ListBoxRow::new();
-        row.add(&container);
+        row.set_child(Some(&container));
         row.show();
 
         HomeEpisode {
@@ -203,7 +201,7 @@ impl HomeEpisode {
         let id = episode.rowid();
         let ep = EpisodeWidget::new(episode, sender);
         let row = gtk::ListBoxRow::new();
-        row.add(&container);
+        row.set_child(Some(&container));
         row.set_action_name(Some("app.go-to-episode"));
         row.set_action_target_value(Some(&id.to_variant()));
         row.show();
@@ -221,26 +219,12 @@ impl HomeEpisode {
 
     fn init(&self, show_id: i32) {
         self.set_cover(show_id);
-        self.container.pack_start(&self.episode, true, true, 0);
+        self.container.append(&self.episode);
     }
 
     fn set_cover(&self, show_id: i32) {
-        // The closure above is a regular `Fn` closure.
-        // which means we can't mutate stuff inside it easily,
-        // so Cell is used.
-        //
-        // `Option<T>` along with the `.take()` method ensure
-        // that the function will only be run once, during the first execution.
-        let show_id = Cell::new(Some(show_id));
-
-        self.image.connect_draw(move |image, _| {
-            if let Some(id) = show_id.take() {
-                utils::set_image_from_path(image, id, 64)
-                    .map_err(|err| error!("Failed to set a cover: {}", err))
-                    .ok();
-            }
-
-            gtk::Inhibit(false)
-        });
+        utils::set_image_from_path(&self.image, show_id, 64)
+            .map_err(|err| error!("Failed to set a cover: {}", err))
+            .ok();
     }
 }
diff --git a/podcasts-gtk/src/widgets/player.rs b/podcasts-gtk/src/widgets/player.rs
index 423680c5..e0ee37c0 100644
--- a/podcasts-gtk/src/widgets/player.rs
+++ b/podcasts-gtk/src/widgets/player.rs
@@ -21,8 +21,6 @@ use gst::ClockTime;
 
 use gtk::prelude::*;
 
-use libhandy as hdy;
-
 use gio::File;
 use glib::clone;
 use glib::{SignalHandlerId, WeakRef};
@@ -92,10 +90,6 @@ impl PlayerInfo {
             .bind_property("label", &self.episode_small, "label")
             .flags(glib::BindingFlags::SYNC_CREATE)
             .build();
-        self.cover
-            .bind_property("pixbuf", &self.cover_small, "pixbuf")
-            .flags(glib::BindingFlags::SYNC_CREATE)
-            .build();
     }
 
     // FIXME: create a Diesel Model of the joined episode and podcast query instead
@@ -139,6 +133,9 @@ impl PlayerInfo {
         set_image_from_path(&self.cover, show.id(), 34)
             .map_err(|err| error!("Player Cover: {}", err))
             .ok();
+        set_image_from_path(&self.cover_small, show.id(), 34)
+            .map_err(|err| error!("Player Cover: {}", err))
+            .ok();
     }
 }
 
@@ -220,7 +217,6 @@ fn format_duration(seconds: u32) -> String {
 struct PlayerRate {
     action: gio::SimpleAction,
     btn: gtk::MenuButton,
-    label: gtk::Label,
 }
 
 impl PlayerRate {
@@ -232,9 +228,8 @@ impl PlayerRate {
         let action =
             gio::SimpleAction::new_stateful("set", Some(&variant_type), &"1.00".to_variant());
         let btn: gtk::MenuButton = builder.object("rate_button").unwrap();
-        let label = builder.object("rate_label").unwrap();
 
-        PlayerRate { action, label, btn }
+        PlayerRate { action, btn }
     }
 
     fn connect_signals(&self, widget: &Rc<RefCell<PlayerWidget>>) {
@@ -280,7 +275,7 @@ struct PlayerControls {
 struct PlayerDialog {
     dialog: gtk::Dialog,
     close: gtk::Button,
-    headerbar: hdy::HeaderBar,
+    headerbar: gtk::HeaderBar,
     cover: gtk::Image,
     play_pause: gtk::Stack,
     play: gtk::Button,
@@ -315,7 +310,7 @@ impl PlayerDialog {
         let show = builder.object("show_label").unwrap();
         let episode = builder.object("episode_label").unwrap();
 
-        bottom.pack_start(&rate.btn, false, true, 0);
+        bottom.prepend(&rate.btn);
 
         PlayerDialog {
             dialog,
@@ -349,13 +344,13 @@ impl PlayerDialog {
 #[derive(Debug, Clone)]
 pub(crate) struct PlayerWidget {
     pub(crate) container: gtk::Box,
-    action_bar: gtk::ActionBar,
-    evbox: gtk::EventBox,
+    revealer: gtk::Revealer,
+    gesture_click: gtk::GestureClick,
     player: gst_player::Player,
     controls: PlayerControls,
     dialog: PlayerDialog,
     full: gtk::Box,
-    squeezer: hdy::Squeezer,
+    squeezer: adw::Squeezer,
     timer: PlayerTimes,
     info: PlayerInfo,
     rate: PlayerRate,
@@ -459,19 +454,19 @@ impl Default for PlayerWidget {
         let dialog = PlayerDialog::new(dialog_rate);
 
         let container = builder.object("container").unwrap();
-        let action_bar: gtk::ActionBar = builder.object("action_bar").unwrap();
-        let evbox = builder.object("evbox").unwrap();
+        let revealer: gtk::Revealer = builder.object("revealer").unwrap();
+        let gesture_click = builder.object("gesture_click").unwrap();
         let full: gtk::Box = builder.object("full").unwrap();
         let squeezer = builder.object("squeezer").unwrap();
 
         let rate = PlayerRate::new();
-        full.pack_end(&rate.btn, false, true, 0);
+        full.append(&rate.btn);
 
         PlayerWidget {
             player,
             container,
-            action_bar,
-            evbox,
+            revealer,
+            gesture_click,
             controls,
             dialog,
             full,
@@ -487,12 +482,12 @@ impl Default for PlayerWidget {
 impl PlayerWidget {
     fn on_rate_changed(&self, rate: f64) {
         self.set_playback_rate(rate);
-        self.rate.label.set_text(&format!("{:.2}×", rate));
-        self.dialog.rate.label.set_text(&format!("{:.2}×", rate));
+        self.rate.btn.set_label(&format!("{:.2}×", rate));
+        self.dialog.rate.btn.set_label(&format!("{:.2}×", rate));
     }
 
     fn reveal(&self) {
-        self.action_bar.show();
+        self.revealer.set_reveal_child(true);
     }
 
     pub(crate) fn initialize_episode(&mut self, rowid: i32) -> Result<()> {
@@ -749,11 +744,10 @@ impl PlayerWrapper {
                 let widget = this.borrow();
                 if let Some(child) = widget.squeezer.visible_child() {
                     let full = child == this.borrow().full;
-                    this.borrow().timer.progress_bar.set_visible(!full);
                     if full {
-                        this.borrow().action_bar.style_context().remove_class("player-small");
+                        this.borrow().revealer.remove_css_class("player-small");
                     } else {
-                        this.borrow().action_bar.style_context().add_class("player-small");
+                        this.borrow().revealer.add_css_class("player-small");
                     }
                 }
             }));
@@ -775,32 +769,19 @@ impl PlayerWrapper {
             .slider
             .set_adjustment(&widget.timer.slider.adjustment());
 
-        widget.evbox.connect_button_press_event(
-            clone!(@weak this =>  @default-return Inhibit(false), move |_, event| {
-                let widget = this.borrow();
-                if event.button() != 1 {
-                    return Inhibit(false);
-                }
-                // only open the dialog when the small toolbar is visible
-                if let Some(child) = widget.squeezer.visible_child() {
-                    if child == widget.full {
-                        return Inhibit(false);
-                    }
-                }
+        widget
+            .gesture_click
+            .connect_released(clone!(@weak this => move |_, _, _, _| {
+                let this = this.borrow();
 
-                let parent = widget.container.toplevel().and_then(|toplevel| {
-                    toplevel
-                        .downcast::<gtk::Window>()
-                        .ok()
+                let parent = this.container.root().and_then(|root| {
+                    root.downcast::<gtk::Window>().ok()
                 }).unwrap();
 
                 info!("showing dialog");
-                widget.dialog.dialog.set_transient_for(Some(&parent));
-                widget.dialog.dialog.show();
-
-                Inhibit(false)
-            }),
-        );
+                this.dialog.dialog.set_transient_for(Some(&parent));
+                this.dialog.dialog.show();
+            }));
 
         widget
             .dialog
diff --git a/podcasts-gtk/src/widgets/show.rs b/podcasts-gtk/src/widgets/show.rs
index 70eb2c7d..c958eca7 100644
--- a/podcasts-gtk/src/widgets/show.rs
+++ b/podcasts-gtk/src/widgets/show.rs
@@ -19,12 +19,12 @@
 
 use glib::clone;
 use glib::Sender;
-use gtk::{self, prelude::*, Adjustment};
+use gtk::{prelude::*, Adjustment};
 
+use adw::Clamp;
 use anyhow::Result;
 use crossbeam_channel::bounded;
 use fragile::Fragile;
-use libhandy::Clamp;
 
 use podcasts_data::dbqueries;
 use podcasts_data::EpisodeWidgetModel;
@@ -67,9 +67,8 @@ impl Default for ShowWidget {
         let clamp = Clamp::new();
         clamp.set_maximum_size(700);
 
-        clamp.add(&sub_cont);
-        view.add(&clamp);
-        clamp.show_all();
+        clamp.set_child(Some(&sub_cont));
+        view.set_child(&clamp);
 
         ShowWidget {
             view,
@@ -101,10 +100,7 @@ impl ShowWidget {
         let res = populate_listbox(&pdw, pd, sender, vadj);
         debug_assert!(res.is_ok());
 
-        pdw.description_short
-            .connect_size_allocate(clone!(@weak pdw => move |_, _2| {
-                pdw.update_read_more();
-            }));
+        pdw.update_read_more();
 
         pdw.description_button
             .connect_clicked(clone!(@weak pdw => move |_| {
@@ -128,11 +124,10 @@ impl ShowWidget {
     }
 
     fn update_read_more(&self) {
-        if let Some(layout) = self.description_short.layout() {
-            let more = layout.is_ellipsized()
-                || self.description.label() != self.description_short.label();
-            self.description_button_revealer.set_reveal_child(more);
-        }
+        let layout = self.description_short.layout();
+        let more =
+            layout.is_ellipsized() || self.description.label() != self.description_short.label();
+        self.description_button_revealer.set_reveal_child(more);
     }
 
     /// Set the description text.
@@ -181,7 +176,7 @@ fn populate_listbox(
 
     if count == 0 {
         let empty = EmptyShow::default();
-        show.episodes.add(empty.deref());
+        show.episodes.append(empty.deref());
         return Ok(());
     }
 
@@ -200,7 +195,7 @@ fn populate_listbox(
             let id = ep.rowid();
             let episode_widget = EpisodeWidget::new(ep, &sender).container.clone();
             let row = gtk::ListBoxRow::new();
-            row.add(&episode_widget);
+            row.set_child(Some(&episode_widget));
             row.set_action_name(Some("app.go-to-episode"));
             row.set_action_target_value(Some(&id.to_variant()));
             row
diff --git a/podcasts-gtk/src/widgets/show_menu.rs b/podcasts-gtk/src/widgets/show_menu.rs
index 488f9321..1a33f14c 100644
--- a/podcasts-gtk/src/widgets/show_menu.rs
+++ b/podcasts-gtk/src/widgets/show_menu.rs
@@ -133,40 +133,29 @@ impl ShowMenu {
 // But now I can't think of a better way to do it than hardcoding the title
 // position relative to the EpisodeWidget container gtk::Box.
 fn dim_titles(episodes: &gtk::ListBox) -> Option<()> {
-    let children = episodes.children();
-
-    for row in children {
-        let row = row.downcast::<gtk::ListBoxRow>().ok()?;
-        let container = row.children().remove(0).downcast::<gtk::Box>().ok()?;
-        let first_children_box = container.children().remove(0).downcast::<gtk::Box>().ok()?;
-        let second_children_box = first_children_box
-            .children()
-            .remove(0)
-            .downcast::<gtk::Box>()
-            .ok()?;
-        let third_children_box = second_children_box
-            .children()
-            .remove(0)
-            .downcast::<gtk::Box>()
-            .ok()?;
-        let title = third_children_box
-            .children()
-            .remove(0)
-            .downcast::<gtk::Label>()
-            .ok()?;
-
-        title.style_context().add_class("dim-label");
-
-        let checkmark = third_children_box
-            .children()
-            .remove(1)
-            .downcast::<gtk::Image>()
-            .ok()?;
-        checkmark.show();
+    let listmodel = episodes.observe_children();
+    for i in 0..listmodel.n_items() {
+        let obj = listmodel.item(i)?;
+        let row = obj.downcast_ref::<gtk::ListBoxRow>()?;
+        dim_row_title(&row)?;
     }
     Some(())
 }
 
+fn dim_row_title(row: &gtk::ListBoxRow) -> Option<()> {
+    let container = row.first_child()?.downcast::<gtk::Box>().ok()?;
+    let foo = container.first_child()?.downcast::<gtk::Box>().ok()?;
+    let bar = foo.first_child()?.downcast::<gtk::Box>().ok()?;
+    let baz = bar.first_child()?.downcast::<gtk::Box>().ok()?;
+    let title = baz.first_child()?.downcast::<gtk::Label>().ok()?;
+
+    title.add_css_class("dim-label");
+
+    let checkmark = title.next_sibling()?.downcast::<gtk::Image>().ok()?;
+    checkmark.show();
+    Some(())
+}
+
 fn mark_all_watched(pd: &Show, sender: &Sender<Action>) -> Result<()> {
     // TODO: If this fails for whatever reason, it should be impossible, show an error
     dbqueries::update_none_to_played_now(pd)?;
diff --git a/podcasts-gtk/src/widgets/shows_view.rs b/podcasts-gtk/src/widgets/shows_view.rs
index 8f8a3fc0..f7b21a72 100644
--- a/podcasts-gtk/src/widgets/shows_view.rs
+++ b/podcasts-gtk/src/widgets/shows_view.rs
@@ -18,7 +18,8 @@
 // SPDX-License-Identifier: GPL-3.0-or-later
 
 use glib::clone;
-use gtk::{self, prelude::*, Adjustment, Align, SelectionMode};
+use gtk::glib;
+use gtk::{prelude::*, Adjustment, Align, SelectionMode};
 
 use anyhow::Result;
 use glib::Sender;
@@ -27,10 +28,9 @@ use podcasts_data::dbqueries;
 use podcasts_data::Show;
 
 use crate::app::Action;
-use crate::utils::{get_ignored_shows, lazy_load, set_image_from_path};
+use crate::utils::{get_ignored_shows, lazy_load_flowbox, set_image_from_path};
 use crate::widgets::BaseView;
 
-use std::cell::Cell;
 use std::rc::Rc;
 use std::sync::Arc;
 
@@ -57,7 +57,7 @@ impl Default for ShowsView {
         flowbox.set_valign(Align::Start);
         flowbox.set_halign(Align::Center);
         flowbox.set_selection_mode(SelectionMode::None);
-        view.add(&flowbox);
+        view.set_child(&flowbox);
 
         ShowsView { view, flowbox }
     }
@@ -93,7 +93,7 @@ fn populate_flowbox(shows: &Rc<ShowsView>, vadj: Option<Adjustment>) -> Result<(
         }
     });
 
-    lazy_load(podcasts, flowbox_weak, constructor, callback);
+    lazy_load_flowbox(podcasts, flowbox_weak, constructor, callback);
     Ok(())
 }
 
@@ -116,15 +116,11 @@ struct ShowsChild {
 
 impl Default for ShowsChild {
     fn default() -> Self {
-        let cover = gtk::Image::from_icon_name(
-            Some("image-x-generic-symbolic"),
-            gtk::IconSize::__Unknown(-1),
-        );
+        let cover = gtk::Image::from_icon_name(Some("image-x-generic-symbolic"));
         let child = gtk::FlowBoxChild::new();
 
         cover.set_pixel_size(256);
-        child.add(&cover);
-        child.show_all();
+        child.set_child(Some(&cover));
 
         ShowsChild { cover, child }
     }
@@ -145,22 +141,8 @@ impl ShowsChild {
     }
 
     fn set_cover(&self, show_id: i32) {
-        // The closure above is a regular `Fn` closure.
-        // which means we can't mutate stuff inside it easily,
-        // so Cell is used.
-        //
-        // `Option<T>` along with the `.take()` method ensure
-        // that the function will only be run once, during the first execution.
-        let show_id = Cell::new(Some(show_id));
-
-        self.cover.connect_draw(move |cover, _| {
-            if let Some(id) = show_id.take() {
-                set_image_from_path(cover, id, 256)
-                    .map_err(|err| error!("Failed to set a cover: {}", err))
-                    .ok();
-            }
-
-            gtk::Inhibit(false)
-        });
+        set_image_from_path(&self.cover, show_id, 256)
+            .map_err(|err| error!("Failed to set a cover: {}", err))
+            .ok();
     }
 }
diff --git a/podcasts-gtk/src/window.rs b/podcasts-gtk/src/window.rs
index 653fc44e..f62e900d 100644
--- a/podcasts-gtk/src/window.rs
+++ b/podcasts-gtk/src/window.rs
@@ -24,9 +24,6 @@ use gio::{self, prelude::*};
 
 use gtk::prelude::*;
 
-use libhandy as hdy;
-use libhandy::prelude::DeckExt;
-
 use crate::app::{Action, PdApplication};
 use crate::headerbar::Header;
 use crate::settings::{self, WindowGeometry};
@@ -45,12 +42,12 @@ use crate::i18n::i18n;
 
 #[derive(Debug)]
 pub struct MainWindow {
-    pub(crate) window: hdy::ApplicationWindow,
+    pub(crate) window: adw::ApplicationWindow,
     pub(crate) overlay: gtk::Overlay,
     pub(crate) content: Rc<Content>,
     pub(crate) headerbar: Rc<Header>,
     pub(crate) player: player::PlayerWrapper,
-    pub(crate) main_deck: libhandy::Deck,
+    pub(crate) main_deck: adw::Leaflet,
     pub(crate) updating: Cell<bool>,
     pub(crate) updater: RefCell<Option<InAppNotification>>,
     pub(crate) sender: Sender<Action>,
@@ -60,23 +57,22 @@ impl MainWindow {
     pub(crate) fn new(app: &PdApplication, sender: &Sender<Action>) -> Self {
         let settings = gio::Settings::new(APP_ID);
 
-        let window = hdy::ApplicationWindow::new();
-        window.set_application(Some(app));
+        let window = adw::ApplicationWindow::new(app);
 
-        window.set_title(&i18n("Podcasts"));
+        window.set_title(Some(&i18n("Podcasts")));
         if APP_ID.ends_with("Devel") {
             window.style_context().add_class("devel");
         }
 
-        window.connect_delete_event(
-            clone!(@strong settings, @weak app => @default-return Inhibit(false), move |window, _| {
+        window.connect_close_request(
+            clone!(@strong settings, @weak app => @default-return gtk::Inhibit(false), move |window| {
                     info!("Saving window position");
                     WindowGeometry::from_window(&window).write(&settings);
 
                     info!("Application is exiting");
                     let app = app.upcast::<gio::Application>();
                     app.quit();
-                    Inhibit(false)
+                    gtk::Inhibit(false)
             }),
         );
 
@@ -88,28 +84,27 @@ impl MainWindow {
 
         // Add the content main stack to the overlay.
         let overlay = gtk::Overlay::new();
-        let main_deck = libhandy::Deck::new();
-        main_deck.set_can_swipe_forward(false);
-        main_deck.add(&content.get_container());
-        overlay.add(&main_deck);
+        let main_deck = adw::Leaflet::new();
+        main_deck.set_can_unfold(false);
+        main_deck.set_can_navigate_forward(false);
+        main_deck.append(&content.get_container());
+        overlay.set_child(Some(&main_deck));
 
         let wrap = gtk::Box::new(gtk::Orientation::Vertical, 0);
 
         // Add the Headerbar to the window.
-        content
-            .get_container()
-            .pack_start(&header.container, false, true, 0);
+        content.get_container().prepend(&header.container);
 
         // Add the overlay to the main Box
-        wrap.add(&overlay);
+        wrap.append(&overlay);
 
         let player = player::PlayerWrapper::new(&sender);
         // Add the player to the main Box
-        wrap.add(&player.borrow().container);
+        wrap.append(&player.borrow().container);
 
-        wrap.add(&header.bottom_switcher);
+        wrap.append(&header.bottom_switcher);
 
-        window.add(&wrap);
+        adw::traits::ApplicationWindowExt::set_content(&window, Some(&wrap));
 
         // Retrieve the previous window position and size.
         WindowGeometry::from_settings(&settings).apply(&window);
@@ -201,16 +196,14 @@ impl MainWindow {
     }
     /// Remove all items from the `main_deck` except from the content
     pub fn clear_deck(&self) {
-        for c in self.main_deck.children() {
-            if c.widget_name() != "content" {
-                self.main_deck.remove(&c);
-            }
+        if let Some(page) = self.main_deck.child_by_name("description") {
+            self.main_deck.remove(&page);
         }
     }
 }
 
 impl Deref for MainWindow {
-    type Target = hdy::ApplicationWindow;
+    type Target = adw::ApplicationWindow;
 
     fn deref(&self) -> &Self::Target {
         &self.window
-- 
GitLab


From a5a07acea3bb48cef2be1b7acc4e0a07217a0da4 Mon Sep 17 00:00:00 2001
From: Julian Hofer <julianhofer@gnome.org>
Date: Sun, 18 Oct 2020 23:05:20 +0200
Subject: [PATCH 02/23] player_dialog: Set icon sizes

---
 podcasts-gtk/resources/gtk/player_dialog.ui | 28 ++++++++++++++++++---
 1 file changed, 24 insertions(+), 4 deletions(-)

diff --git a/podcasts-gtk/resources/gtk/player_dialog.ui b/podcasts-gtk/resources/gtk/player_dialog.ui
index 116f7e07..bc0bcb66 100644
--- a/podcasts-gtk/resources/gtk/player_dialog.ui
+++ b/podcasts-gtk/resources/gtk/player_dialog.ui
@@ -132,7 +132,12 @@
                     <property name="height_request">60</property>
                     <property name="valign">center</property>
                     <property name="margin-end">12</property>
-                    <property name="icon_name">skip-back-large-symbolic</property>
+                    <child>
+                      <object class="GtkImage">
+                        <property name="icon_name">skip-back-large-symbolic</property>
+                        <property name="icon_size">2</property>
+                      </object>
+                    </child>
                     <style>
                       <class name="circular"/>
                     </style>
@@ -145,7 +150,12 @@
                         <property name="receives_default">True</property>
                         <property name="width_request">80</property>
                         <property name="height_request">80</property>
-                        <property name="icon_name">media-playback-start-symbolic</property>
+                        <child>
+                          <object class="GtkImage">
+                            <property name="icon_name">media-playback-start-symbolic</property>
+                            <property name="icon_size">2</property>
+                          </object>
+                        </child>
                         <style>
                           <class name="circular"/>
                         </style>
@@ -155,7 +165,12 @@
                       <object class="GtkButton" id="pause">
                         <property name="width_request">80</property>
                         <property name="height_request">80</property>
-                        <property name="icon_name">media-playback-pause-symbolic</property>
+                        <child>
+                          <object class="GtkImage">
+                            <property name="icon_name">media-playback-pause-symbolic</property>
+                            <property name="icon_size">2</property>
+                          </object>
+                        </child>
                         <style>
                           <class name="circular"/>
                         </style>
@@ -170,7 +185,12 @@
                     <property name="height_request">60</property>
                     <property name="valign">center</property>
                     <property name="margin-start">12</property>
-                    <property name="icon_name">skip-forward-large-symbolic</property>
+                    <child>
+                      <object class="GtkImage">
+                        <property name="icon_name">skip-forward-large-symbolic</property>
+                        <property name="icon_size">2</property>
+                      </object>
+                    </child>
                     <style>
                       <class name="circular"/>
                     </style>
-- 
GitLab


From 1d1a1dbc23c1385782269306128b16d33215ef3d Mon Sep 17 00:00:00 2001
From: Jordan Petridis <jordan@centricular.com>
Date: Tue, 29 Dec 2020 11:04:03 +0200
Subject: [PATCH 03/23] podcast-gtk: bundle gresource icons as gtk4 wants to

---
 .../{ => scalable/actions}/skip-back-large-symbolic.svg   | 0
 .../icons/{ => scalable/actions}/skip-back-symbolic.svg   | 0
 .../actions}/skip-forward-large-symbolic.svg              | 0
 .../{ => scalable/actions}/skip-forward-symbolic.svg      | 0
 podcasts-gtk/resources/resources.xml                      | 8 ++++----
 5 files changed, 4 insertions(+), 4 deletions(-)
 rename podcasts-gtk/resources/icons/{ => scalable/actions}/skip-back-large-symbolic.svg (100%)
 rename podcasts-gtk/resources/icons/{ => scalable/actions}/skip-back-symbolic.svg (100%)
 rename podcasts-gtk/resources/icons/{ => scalable/actions}/skip-forward-large-symbolic.svg (100%)
 rename podcasts-gtk/resources/icons/{ => scalable/actions}/skip-forward-symbolic.svg (100%)

diff --git a/podcasts-gtk/resources/icons/skip-back-large-symbolic.svg b/podcasts-gtk/resources/icons/scalable/actions/skip-back-large-symbolic.svg
similarity index 100%
rename from podcasts-gtk/resources/icons/skip-back-large-symbolic.svg
rename to podcasts-gtk/resources/icons/scalable/actions/skip-back-large-symbolic.svg
diff --git a/podcasts-gtk/resources/icons/skip-back-symbolic.svg b/podcasts-gtk/resources/icons/scalable/actions/skip-back-symbolic.svg
similarity index 100%
rename from podcasts-gtk/resources/icons/skip-back-symbolic.svg
rename to podcasts-gtk/resources/icons/scalable/actions/skip-back-symbolic.svg
diff --git a/podcasts-gtk/resources/icons/skip-forward-large-symbolic.svg b/podcasts-gtk/resources/icons/scalable/actions/skip-forward-large-symbolic.svg
similarity index 100%
rename from podcasts-gtk/resources/icons/skip-forward-large-symbolic.svg
rename to podcasts-gtk/resources/icons/scalable/actions/skip-forward-large-symbolic.svg
diff --git a/podcasts-gtk/resources/icons/skip-forward-symbolic.svg b/podcasts-gtk/resources/icons/scalable/actions/skip-forward-symbolic.svg
similarity index 100%
rename from podcasts-gtk/resources/icons/skip-forward-symbolic.svg
rename to podcasts-gtk/resources/icons/scalable/actions/skip-forward-symbolic.svg
diff --git a/podcasts-gtk/resources/resources.xml b/podcasts-gtk/resources/resources.xml
index 729d633d..6503c905 100644
--- a/podcasts-gtk/resources/resources.xml
+++ b/podcasts-gtk/resources/resources.xml
@@ -16,10 +16,10 @@
       <file compressed="true" preprocess="xml-stripblanks">gtk/player_dialog.ui</file>
       <file compressed="true" preprocess="xml-stripblanks">gtk/player_rate.ui</file>
       <file compressed="true" preprocess="xml-stripblanks">gtk/player_toolbar.ui</file>
-      <file compressed="true" preprocess="xml-stripblanks">icons/skip-back-large-symbolic.svg</file>
-      <file compressed="true" preprocess="xml-stripblanks">icons/skip-back-symbolic.svg</file>
-      <file compressed="true" preprocess="xml-stripblanks">icons/skip-forward-large-symbolic.svg</file>
-      <file compressed="true" preprocess="xml-stripblanks">icons/skip-forward-symbolic.svg</file>
+      <file compressed="true" preprocess="xml-stripblanks">icons/scalable/actions/skip-back-large-symbolic.svg</file>
+      <file compressed="true" preprocess="xml-stripblanks">icons/scalable/actions/skip-back-symbolic.svg</file>
+      <file compressed="true" preprocess="xml-stripblanks">icons/scalable/actions/skip-forward-large-symbolic.svg</file>
+      <file compressed="true" preprocess="xml-stripblanks">icons/scalable/actions/skip-forward-symbolic.svg</file>
       <file compressed="true">gtk/style.css</file>
   </gresource>
 </gresources>
-- 
GitLab


From eb41e73ff3a28ef33d7c5670bec622520251b19d Mon Sep 17 00:00:00 2001
From: Maximiliano Sandoval R <msandova@gnome.org>
Date: Sat, 21 Aug 2021 11:31:32 +0200
Subject: [PATCH 04/23] shows_view: Subclass ShowCover

---
 podcasts-gtk/src/widgets/shows_view.rs | 95 ++++++++++++++++++++++----
 1 file changed, 83 insertions(+), 12 deletions(-)

diff --git a/podcasts-gtk/src/widgets/shows_view.rs b/podcasts-gtk/src/widgets/shows_view.rs
index f7b21a72..8b48c473 100644
--- a/podcasts-gtk/src/widgets/shows_view.rs
+++ b/podcasts-gtk/src/widgets/shows_view.rs
@@ -17,9 +17,10 @@
 //
 // SPDX-License-Identifier: GPL-3.0-or-later
 
+use adw::{prelude::BinExt, subclass::prelude::*};
 use glib::clone;
 use gtk::glib;
-use gtk::{prelude::*, Adjustment, Align, SelectionMode};
+use gtk::{prelude::*, subclass::prelude::*, Adjustment, Align, SelectionMode};
 
 use anyhow::Result;
 use glib::Sender;
@@ -31,6 +32,7 @@ use crate::app::Action;
 use crate::utils::{get_ignored_shows, lazy_load_flowbox, set_image_from_path};
 use crate::widgets::BaseView;
 
+use std::cell::Cell;
 use std::rc::Rc;
 use std::sync::Arc;
 
@@ -99,7 +101,12 @@ fn populate_flowbox(shows: &Rc<ShowsView>, vadj: Option<Adjustment>) -> Result<(
 
 fn on_child_activate(child: &gtk::FlowBoxChild, sender: &Sender<Action>) -> Result<()> {
     // This is such an ugly hack...
-    let id = child.widget_name().parse::<i32>()?;
+    let id = child
+        .child()
+        .unwrap()
+        .downcast::<ShowCover>()
+        .expect("Could not downcast Widget to PdShowCover")
+        .id();
     let pd = Arc::new(dbqueries::get_podcast_from_id(id)?);
 
     send!(sender, Action::HeaderBarShowTile(pd.title().into()));
@@ -108,18 +115,76 @@ fn on_child_activate(child: &gtk::FlowBoxChild, sender: &Sender<Action>) -> Resu
     Ok(())
 }
 
+#[derive(Debug)]
+pub struct ShowCoverPrivate {
+    pub cover: gtk::Image,
+    pub show_id: Cell<i32>,
+}
+
+#[glib::object_subclass]
+impl ObjectSubclass for ShowCoverPrivate {
+    const NAME: &'static str = "PdShowCover";
+    type Type = ShowCover;
+    type ParentType = adw::Bin;
+
+    fn new() -> Self {
+        Self {
+            // FIXME: bundle the symbolic in resources
+            cover: gtk::Image::from_icon_name(Some("image-x-generic-symbolic")),
+            show_id: Cell::default(),
+        }
+    }
+}
+
+impl ObjectImpl for ShowCoverPrivate {
+    fn constructed(&self, obj: &Self::Type) {
+        self.parent_constructed(obj);
+        self.cover.set_pixel_size(256);
+
+        obj.set_child(Some(&self.cover));
+    }
+}
+
+impl WidgetImpl for ShowCoverPrivate {}
+impl BinImpl for ShowCoverPrivate {}
+
+glib::wrapper! {
+    pub struct ShowCover(ObjectSubclass<ShowCoverPrivate>)
+        @extends gtk::Widget, adw::Bin;
+}
+
+impl ShowCover {
+    fn new() -> Self {
+        glib::Object::new(&[]).expect("Failed to create PdShowCover")
+    }
+
+    fn set_id(&self, id: i32) {
+        let self_ = ShowCoverPrivate::from_instance(self);
+        self_.show_id.set(id);
+    }
+
+    fn id(&self) -> i32 {
+        self.imp().show_id.get()
+    }
+
+    fn load_image(&self) -> Result<()> {
+        let imp = self.imp();
+        set_image_from_path(&imp.cover, imp.show_id.get(), 256)?;
+        Ok(())
+    }
+}
+
 #[derive(Debug, Clone)]
 struct ShowsChild {
-    cover: gtk::Image,
+    cover: ShowCover,
     child: gtk::FlowBoxChild,
 }
 
 impl Default for ShowsChild {
     fn default() -> Self {
-        let cover = gtk::Image::from_icon_name(Some("image-x-generic-symbolic"));
+        let cover = ShowCover::new();
         let child = gtk::FlowBoxChild::new();
 
-        cover.set_pixel_size(256);
         child.set_child(Some(&cover));
 
         ShowsChild { cover, child }
@@ -128,20 +193,26 @@ impl Default for ShowsChild {
 
 impl ShowsChild {
     pub(crate) fn new(pd: &Show) -> ShowsChild {
-        let child = ShowsChild::default();
-        child.init(pd);
-        child
+        let cover = ShowCover::new();
+        let child = gtk::FlowBoxChild::new();
+
+        child.set_child(Some(&cover));
+
+        let shows_child = ShowsChild { cover, child };
+        shows_child.init(pd);
+        shows_child
     }
 
     fn init(&self, pd: &Show) {
         self.child.set_tooltip_text(Some(pd.title()));
-        self.child.set_widget_name(&pd.id().to_string());
 
-        self.set_cover(pd.id())
+        self.cover.set_id(pd.id());
+        self.set_cover();
     }
 
-    fn set_cover(&self, show_id: i32) {
-        set_image_from_path(&self.cover, show_id, 256)
+    fn set_cover(&self) {
+        self.cover
+            .load_image()
             .map_err(|err| error!("Failed to set a cover: {}", err))
             .ok();
     }
-- 
GitLab


From c29ede858c1166b67778acee3f4487317d5134a1 Mon Sep 17 00:00:00 2001
From: Maximiliano Sandoval R <msandova@gnome.org>
Date: Sun, 22 Aug 2021 10:14:32 +0200
Subject: [PATCH 05/23] podcasts-gtk: Port notifications to AdwToast

---
 Cargo.lock                                    |   1 +
 podcasts-gtk/Cargo.toml                       |   1 +
 podcasts-gtk/resources/gtk/inapp_notif.ui     |  99 ----------
 podcasts-gtk/resources/resources.xml          |   1 -
 podcasts-gtk/src/app.rs                       | 149 +++++++++++----
 podcasts-gtk/src/main.rs                      |   1 -
 podcasts-gtk/src/meson.build                  |   1 -
 podcasts-gtk/src/utils.rs                     |  29 ++-
 podcasts-gtk/src/widgets/appnotif.rs          | 175 ------------------
 .../src/widgets/episode_description.rs        |  12 --
 podcasts-gtk/src/widgets/mod.rs               |   1 -
 podcasts-gtk/src/widgets/show.rs              |   3 +-
 podcasts-gtk/src/widgets/show_menu.rs         |  78 ++++----
 podcasts-gtk/src/window.rs                    |  25 ++-
 14 files changed, 180 insertions(+), 396 deletions(-)
 delete mode 100644 podcasts-gtk/resources/gtk/inapp_notif.ui
 delete mode 100644 podcasts-gtk/src/widgets/appnotif.rs

diff --git a/Cargo.lock b/Cargo.lock
index 8a796749..35756f2e 100644
--- a/Cargo.lock
+++ b/Cargo.lock
@@ -1892,6 +1892,7 @@ dependencies = [
  "log",
  "markup5ever_rcdom",
  "mpris-player",
+ "once_cell",
  "open",
  "podcasts-data",
  "pretty_assertions",
diff --git a/podcasts-gtk/Cargo.toml b/podcasts-gtk/Cargo.toml
index df64822f..6b3cb877 100644
--- a/podcasts-gtk/Cargo.toml
+++ b/podcasts-gtk/Cargo.toml
@@ -26,6 +26,7 @@ markup5ever_rcdom = "0.1"
 html2text = "0.2.1"
 glib = "0.14.2"
 adw = {package = "libadwaita", version = "0.1.0-beta"}
+once_cell = "1.9"
 
 [dependencies.gettext-rs]
 git = "https://github.com/danigm/gettext-rs"
diff --git a/podcasts-gtk/resources/gtk/inapp_notif.ui b/podcasts-gtk/resources/gtk/inapp_notif.ui
deleted file mode 100644
index 36bd9387..00000000
--- a/podcasts-gtk/resources/gtk/inapp_notif.ui
+++ /dev/null
@@ -1,99 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!-- Generated with glade 3.22.0 
-
-Copyright (C) 2017 - 2018
-
-This file is part of GNOME Podcast.
-
-GNOME Podcast is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
-
-GNOME Podcast is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
-
-You should have received a copy of the GNU General Public License
-along with GNOME Podcast.  If not, see <http://www.gnu.org/licenses/>.
-
-Authors:
-Jordan Petridis
-Tobias Bernard
-
--->
-<interface>
-  <!-- interface-license-type gplv3 -->
-  <!-- interface-name GNOME Podcast -->
-  <!-- interface-description A podcast client for the GNOME Desktop -->
-  <!-- interface-copyright 2017 - 2018 -->
-  <!-- interface-authors Jordan Petridis\nTobias Bernard -->
-  <object class="GtkRevealer" id="revealer">
-    <property name="halign">center</property>
-    <property name="valign">start</property>
-    <child>
-      <object class="GtkFrame">
-        <property name="halign">center</property>
-        <property name="valign">center</property>
-        <property name="label_xalign">0</property>
-        <child>
-          <object class="GtkBox">
-            <property name="halign">center</property>
-            <property name="valign">center</property>
-            <property name="margin_start">3</property>
-            <property name="margin_end">3</property>
-            <property name="spacing">6</property>
-            <child>
-              <object class="GtkSpinner" id="spinner">
-              </object>
-            </child>
-            <child>
-              <object class="GtkLabel" id="text">
-                <property name="width_request">150</property>
-                <property name="halign">center</property>
-                <property name="valign">center</property>
-                <property name="margin_start">12</property>
-                <property name="margin_end">12</property>
-                <property name="label" translatable="yes">An in-app action notification</property>
-                <property name="ellipsize">start</property>
-              </object>
-            </child>
-            <child>
-              <object class="GtkButton" id="undo">
-                <property name="label" translatable="yes">Undo</property>
-                <property name="receives_default">True</property>
-                <property name="halign">center</property>
-                <property name="valign">center</property>
-                <style>
-                  <class name="text-button"/>
-                </style>
-              </object>
-            </child>
-            <child>
-              <object class="GtkButton" id="close">
-                <property name="focus_on_click">False</property>
-                <property name="receives_default">True</property>
-                <property name="halign">center</property>
-                <property name="valign">center</property>
-                <property name="icon_name">window-close-symbolic</property>
-                <style>
-                  <class name="flat"/>
-                </style>
-              </object>
-            </child>
-          </object>
-        </child>
-        <child type="label_item">
-          <placeholder/>
-        </child>
-        <style>
-          <class name="app-notification"/>
-        </style>
-      </object>
-    </child>
-    <style>
-      <class name="top"/>
-    </style>
-  </object>
-</interface>
diff --git a/podcasts-gtk/resources/resources.xml b/podcasts-gtk/resources/resources.xml
index 6503c905..b46973df 100644
--- a/podcasts-gtk/resources/resources.xml
+++ b/podcasts-gtk/resources/resources.xml
@@ -9,7 +9,6 @@
       <file compressed="true" preprocess="xml-stripblanks">gtk/home_view.ui</file>
       <file compressed="true" preprocess="xml-stripblanks">gtk/home_episode.ui</file>
       <file compressed="true" preprocess="xml-stripblanks">gtk/headerbar.ui</file>
-      <file compressed="true" preprocess="xml-stripblanks">gtk/inapp_notif.ui</file>
       <file compressed="true" preprocess="xml-stripblanks">gtk/hamburger.ui</file>
       <file compressed="true" preprocess="xml-stripblanks">gtk/show_menu.ui</file>
       <file compressed="true" preprocess="xml-stripblanks">gtk/help-overlay.ui</file>
diff --git a/podcasts-gtk/src/app.rs b/podcasts-gtk/src/app.rs
index 1526d268..f37bfde4 100644
--- a/podcasts-gtk/src/app.rs
+++ b/podcasts-gtk/src/app.rs
@@ -34,7 +34,6 @@ use podcasts_data::{Episode, Show, Source};
 use crate::settings;
 use crate::stacks::PopulatedState;
 use crate::utils;
-use crate::widgets::appnotif::{InAppNotification, SpinnerState, State};
 use crate::widgets::show_menu::{mark_all_notif, remove_show_notif};
 use crate::widgets::EpisodeDescription;
 use crate::window::MainWindow;
@@ -54,6 +53,8 @@ pub struct PdApplicationPrivate {
     window: RefCell<Option<MainWindow>>,
     settings: RefCell<Option<gio::Settings>>,
     inhibit_cookie: RefCell<u32>,
+    undo_remove_ids: RefCell<Vec<i32>>,
+    undo_marked_ids: RefCell<Vec<i32>>,
 }
 
 #[glib::object_subclass]
@@ -73,6 +74,8 @@ impl ObjectSubclass for PdApplicationPrivate {
             window: RefCell::new(None),
             settings: RefCell::new(None),
             inhibit_cookie: RefCell::new(0),
+            undo_remove_ids: RefCell::new(vec![]),
+            undo_marked_ids: RefCell::new(vec![]),
         }
     }
 }
@@ -145,7 +148,8 @@ pub(crate) enum Action {
     CopiedUrlNotification,
     MarkAllPlayerNotification(Arc<Show>),
     UpdateFeed(Option<Vec<Source>>),
-    ShowUpdateNotif(crossbeam_channel::Receiver<bool>),
+    ShowUpdateNotif,
+    FeedRefreshed,
     StopUpdating,
     RemoveShow(Arc<Show>),
     ErrorNotification(String),
@@ -174,6 +178,7 @@ impl PdApplication {
 
     fn setup_gactions(&self) {
         let app = self.upcast_ref::<gtk::Application>();
+        let data = PdApplicationPrivate::from_instance(self);
         // Create the quit action
         utils::make_action(
             app,
@@ -191,6 +196,69 @@ impl PdApplication {
             }
         }));
         app.add_action(&show_episode);
+
+        let undo_mark_all = gio::SimpleAction::new("undo-mark-all", Some(&i32_variant_type));
+        undo_mark_all.connect_activate(
+            clone!(@weak self as app, @strong data.sender as sender => move |_, id_variant_option| {
+                let data = PdApplicationPrivate::from_instance(&app);
+                let id = id_variant_option.unwrap().get::<i32>().unwrap();
+                let mut ids = data.undo_marked_ids.borrow_mut();
+                if !ids.contains(&id) {
+                    ids.push(id);
+                }
+
+                send!(sender, Action::RefreshWidgetIfSame(id));
+            }),
+        );
+        app.add_action(&undo_mark_all);
+
+        let undo_remove_show = gio::SimpleAction::new("undo-remove-show", Some(&i32_variant_type));
+        undo_remove_show.connect_activate(
+            clone!(@weak self as app, @strong data.sender as sender => move |_, id_variant_option| {
+                let data = PdApplicationPrivate::from_instance(&app);
+                let id = id_variant_option.unwrap().get::<i32>().unwrap();
+                let mut ids = data.undo_remove_ids.borrow_mut();
+                if !ids.contains(&id) {
+                    ids.push(id);
+                }
+
+                let res = utils::unignore_show(id);
+                debug_assert!(res.is_ok());
+                send!(sender, Action::RefreshShowsView);
+                send!(sender, Action::RefreshEpisodesView);
+            }),
+        );
+        app.add_action(&undo_remove_show);
+    }
+
+    /// We check if the User pressed the Undo button, which would add
+    /// the id into undo_revove_ids.
+    pub fn is_show_marked_delete(&self, pd: &Show) -> bool {
+        let data = PdApplicationPrivate::from_instance(self);
+        let id = pd.id();
+        let mut undo_remove_ids = data.undo_remove_ids.borrow_mut();
+
+        if let Some(pos) = undo_remove_ids.iter().position(|x| *x == id) {
+            undo_remove_ids.remove(pos);
+
+            return false;
+        }
+
+        true
+    }
+
+    pub fn is_show_marked_mark(&self, pd: &Show) -> bool {
+        let data = PdApplicationPrivate::from_instance(self);
+        let id = pd.id();
+        let mut undo_marked_ids = data.undo_marked_ids.borrow_mut();
+
+        if let Some(pos) = undo_marked_ids.iter().position(|x| *x == id) {
+            undo_marked_ids.remove(pos);
+
+            return false;
+        }
+
+        true
     }
 
     fn go_to_episode(&self, id_variant_option: Option<&glib::Variant>) -> Result<()> {
@@ -286,26 +354,22 @@ impl PdApplication {
             Action::HeaderBarShowTile(title) => window.headerbar.switch_to_back(&title),
             Action::HeaderBarNormal => window.headerbar.switch_to_normal(),
             Action::CopiedUrlNotification => {
-                let notif = EpisodeDescription::copied_url_notif();
-                notif.show(&window.overlay);
+                let text = i18n("Copied URL to clipboard!");
+                let toast = adw::Toast::new(&text);
+                self.send_toast(&toast);
             }
             Action::MarkAllPlayerNotification(pd) => {
-                let notif = mark_all_notif(pd, &data.sender);
-                notif.show(&window.overlay);
+                let toast = mark_all_notif(pd, &data.sender);
+                self.send_toast(&toast);
             }
             Action::RemoveShow(pd) => {
-                let notif = remove_show_notif(pd, data.sender.clone());
-                notif.show(&window.overlay);
+                let toast = remove_show_notif(pd, data.sender.clone());
+                self.send_toast(&toast);
             }
             Action::ErrorNotification(err) => {
                 error!("An error notification was triggered: {}", err);
-                let callback = |revealer: gtk::Revealer| {
-                    revealer.set_reveal_child(false);
-                    glib::Continue(false)
-                };
-                let undo_cb: Option<fn()> = None;
-                let notif = InAppNotification::new(&err, 6000, callback, undo_cb);
-                notif.show(&window.overlay);
+                let toast = adw::Toast::new(&err);
+                window.toast_overlay.add_toast(&toast);
             }
             Action::UpdateFeed(source) => {
                 if window.updating.get() {
@@ -317,33 +381,29 @@ impl PdApplication {
             }
             Action::StopUpdating => {
                 window.updating.set(false);
+                if let Some(timeout) = window.updating_timeout.replace(None) {
+                    glib::source_remove(timeout);
+                }
+                window.progress_bar.hide();
             }
-            Action::ShowUpdateNotif(receiver) => {
-                use crossbeam_channel::TryRecvError;
-
-                let sender = data.sender.clone();
-                let callback = move |revealer: gtk::Revealer| match receiver.try_recv() {
-                    Err(TryRecvError::Empty) => glib::Continue(true),
-                    Err(TryRecvError::Disconnected) => glib::Continue(false),
-                    Ok(_) => {
-                        revealer.set_reveal_child(false);
-
-                        send!(sender, Action::StopUpdating);
-                        send!(sender, Action::RefreshAllViews);
-
-                        glib::Continue(false)
-                    }
-                };
-                let txt = i18n("Fetching new episodes");
-                let undo_cb: Option<fn()> = None;
-                let updater = InAppNotification::new(&txt, 250, callback, undo_cb);
-                updater.set_close_state(State::Hidden);
-                updater.set_spinner_state(SpinnerState::Active);
-
-                if let Some(i) = window.updater.borrow().as_ref() {
-                    i.show(&window.overlay)
+            Action::ShowUpdateNotif => {
+                let updating_timeout = glib::timeout_add_local(
+                    std::time::Duration::from_millis(100),
+                    clone!(@weak window.progress_bar as progress => @default-return Continue(false), move || {
+                        progress.show();
+                        progress.pulse();
+                        Continue(true)
+                    }),
+                );
+                if let Some(old_timeout) = window.updating_timeout.replace(Some(updating_timeout)) {
+                    glib::source_remove(old_timeout);
                 }
             }
+            Action::FeedRefreshed => {
+                let sender = data.sender.clone();
+                send!(sender, Action::StopUpdating);
+                send!(sender, Action::RefreshAllViews);
+            }
             Action::InitEpisode(rowid) => {
                 let res = window.player.borrow_mut().initialize_episode(rowid);
                 debug_assert!(res.is_ok());
@@ -419,4 +479,15 @@ impl PdApplication {
         let args: Vec<String> = env::args().collect();
         ApplicationExtManual::run_with_args(&application, &args);
     }
+
+    pub(crate) fn send_toast(&self, toast: &adw::Toast) {
+        let self_ = PdApplicationPrivate::from_instance(self);
+        self_
+            .window
+            .borrow()
+            .as_ref()
+            .unwrap()
+            .toast_overlay
+            .add_toast(toast);
+    }
 }
diff --git a/podcasts-gtk/src/main.rs b/podcasts-gtk/src/main.rs
index 8a4d3675..39fb2aad 100644
--- a/podcasts-gtk/src/main.rs
+++ b/podcasts-gtk/src/main.rs
@@ -132,7 +132,6 @@ fn test_stuff() -> anyhow::Result<()> {
     EmptyShow::default();
     EpisodeDescription::default();
 
-    appnotif::InAppNotification::default();
     show_menu::ShowMenu::default();
     episode_menu::EpisodeMenu::default();
 
diff --git a/podcasts-gtk/src/meson.build b/podcasts-gtk/src/meson.build
index 75b75ac4..f9e7ad35 100644
--- a/podcasts-gtk/src/meson.build
+++ b/podcasts-gtk/src/meson.build
@@ -23,7 +23,6 @@ podcasts_sources = files(
   'stacks/populated.rs',
   'stacks/show.rs',
   'widgets/aboutdialog.rs',
-  'widgets/appnotif.rs',
   'widgets/base_view.rs',
   'widgets/empty.rs',
   'widgets/episode.rs',
diff --git a/podcasts-gtk/src/utils.rs b/podcasts-gtk/src/utils.rs
index 0c099c9b..fd2ceadd 100644
--- a/podcasts-gtk/src/utils.rs
+++ b/podcasts-gtk/src/utils.rs
@@ -29,7 +29,7 @@ use gtk::Widget;
 
 use anyhow::{anyhow, Result};
 use chrono::prelude::*;
-use crossbeam_channel::{bounded, unbounded};
+use crossbeam_channel::unbounded;
 use fragile::Fragile;
 use regex::Regex;
 use serde_json::Value;
@@ -297,27 +297,20 @@ pub(crate) fn schedule_refresh(source: Option<Vec<Source>>, sender: Sender<Actio
 /// Do not call this function directly unless you are sure no other updates are running.
 /// Use `schedule_refresh()` instead
 pub(crate) fn refresh_feed(source: Option<Vec<Source>>, sender: Sender<Action>) {
-    let (up_sender, up_receiver) = bounded(1);
-    send!(sender, Action::ShowUpdateNotif(up_receiver));
+    send!(sender, Action::ShowUpdateNotif);
 
-    if let Some(s) = source {
-        // Refresh only specified feeds
-        tokio::spawn(async move {
+    tokio::spawn(clone!(@strong sender => async move {
+        if let Some(s) = source {
+            // Refresh only specified feeds
             pipeline(s).await;
-            up_sender
-                .send(true)
-                .expect("Channel was dropped unexpectedly");
-        })
-    } else {
-        // Refresh all the feeds
-        tokio::spawn(async move {
+            send!(sender, Action::FeedRefreshed);
+        } else {
+            // Refresh all the feeds
             let sources = dbqueries::get_sources().map(|s| s.into_iter()).unwrap();
             pipeline(sources).await;
-            up_sender
-                .send(true)
-                .expect("Channel was dropped unexpectedly");
-        })
-    };
+            send!(sender, Action::FeedRefreshed);
+        }
+    }));
 }
 
 lazy_static! {
diff --git a/podcasts-gtk/src/widgets/appnotif.rs b/podcasts-gtk/src/widgets/appnotif.rs
deleted file mode 100644
index 602b55fe..00000000
--- a/podcasts-gtk/src/widgets/appnotif.rs
+++ /dev/null
@@ -1,175 +0,0 @@
-// appnotif.rs
-//
-// Copyright 2017 Jordan Petridis <jpetridis@gnome.org>
-//
-// This program is free software: you can redistribute it and/or modify
-// it under the terms of the GNU General Public License as published by
-// the Free Software Foundation, either version 3 of the License, or
-// (at your option) any later version.
-//
-// This program is distributed in the hope that it will be useful,
-// but WITHOUT ANY WARRANTY; without even the implied warranty of
-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-// GNU General Public License for more details.
-//
-// You should have received a copy of the GNU General Public License
-// along with this program.  If not, see <http://www.gnu.org/licenses/>.
-//
-// SPDX-License-Identifier: GPL-3.0-or-later
-
-use glib::clone;
-use gtk::prelude::*;
-
-use std::cell::RefCell;
-use std::rc::Rc;
-use std::time::Duration;
-
-#[derive(Debug, Clone, Copy)]
-#[allow(dead_code)]
-pub(crate) enum State {
-    Shown,
-    Hidden,
-}
-
-#[derive(Debug, Clone, Copy)]
-#[allow(dead_code)]
-pub(crate) enum SpinnerState {
-    Active,
-    Stopped,
-}
-
-#[derive(Debug, Clone)]
-pub(crate) struct InAppNotification {
-    revealer: gtk::Revealer,
-    text: gtk::Label,
-    undo: gtk::Button,
-    close: gtk::Button,
-    spinner: gtk::Spinner,
-}
-
-impl Default for InAppNotification {
-    fn default() -> Self {
-        let builder = gtk::Builder::from_resource("/org/gnome/Podcasts/gtk/inapp_notif.ui");
-
-        let revealer: gtk::Revealer = builder.object("revealer").unwrap();
-        let text: gtk::Label = builder.object("text").unwrap();
-        let undo: gtk::Button = builder.object("undo").unwrap();
-        let close: gtk::Button = builder.object("close").unwrap();
-        let spinner = builder.object("spinner").unwrap();
-
-        InAppNotification {
-            revealer,
-            text,
-            undo,
-            close,
-            spinner,
-        }
-    }
-}
-
-impl InAppNotification {
-    /// Creates a new instance of InAppNotification
-    ///
-    /// # Arguments
-    ///
-    /// * `text` - Text which is displayed within the revealer
-    /// * `timer` - Time in ms until the callback is called, in milliseconds
-    /// * `callback` - Function to call after `timer` is passed.
-    ///                You will probably want to call `set_reveal_child(false)` within it
-    /// * `undo_callback` - If undo_callback is `is_some()`, then the revealer will include an undo-button.
-    ///                     If the undo-button is pressed, undo_callback will be called.
-    pub(crate) fn new<F, U>(
-        text: &str,
-        timer: u32,
-        mut callback: F,
-        undo_callback: Option<U>,
-    ) -> Self
-    where
-        F: FnMut(gtk::Revealer) -> glib::Continue + 'static,
-        U: Fn() + 'static,
-    {
-        let notif = InAppNotification::default();
-        notif.text.set_text(&text);
-
-        let mut time = Duration::from_millis(0);
-        let interval = Duration::from_millis(250);
-        let id = glib::timeout_add_local(
-            interval,
-            clone!(@weak notif.revealer as revealer => @default-return glib::Continue(false), move || {
-                    if time.as_millis() < timer as u128 {
-                        time += interval;
-                        return glib::Continue(true);
-                    };
-                    callback(revealer)
-            }),
-        );
-        let id = Rc::new(RefCell::new(Some(id)));
-
-        if undo_callback.is_some() {
-            notif.set_undo_state(State::Shown)
-        };
-
-        notif
-            .undo
-            .connect_clicked(clone!(@weak notif.revealer as revealer => move |_| {
-                if let Some(id) = id.borrow_mut().take() {
-                    // Cancel the callback
-                    glib::source::source_remove(id);
-                }
-
-                if let Some(ref f) = undo_callback {
-                    f();
-                }
-
-                // Hide the notification
-                revealer.set_reveal_child(false);
-            }));
-
-        // Hide the revealer when the close button is clicked
-        notif
-            .close
-            .connect_clicked(clone!(@weak notif.revealer as revealer => move |_| {
-                revealer.set_reveal_child(false);
-            }));
-
-        notif
-    }
-
-    // This is a separate method cause in order to get a nice animation
-    // the revealer should be attached to something that displays it.
-    // Previously we where doing it in the constructor, which had the result
-    // of the animation being skipped cause there was no parent widget to display it.
-    pub(crate) fn show(&self, overlay: &gtk::Overlay) {
-        overlay.add_overlay(&self.revealer);
-        // We need to display the notification after the widget is added to the overlay
-        // so there will be a nice animation.
-        self.revealer.set_reveal_child(true);
-    }
-
-    pub(crate) fn set_undo_state(&self, state: State) {
-        match state {
-            State::Shown => self.undo.show(),
-            State::Hidden => self.undo.hide(),
-        }
-    }
-
-    pub(crate) fn set_close_state(&self, state: State) {
-        match state {
-            State::Shown => self.close.show(),
-            State::Hidden => self.close.hide(),
-        }
-    }
-
-    pub(crate) fn set_spinner_state(&self, state: SpinnerState) {
-        match state {
-            SpinnerState::Active => {
-                self.spinner.start();
-                self.spinner.show();
-            }
-            SpinnerState::Stopped => {
-                self.spinner.stop();
-                self.spinner.hide();
-            }
-        }
-    }
-}
diff --git a/podcasts-gtk/src/widgets/episode_description.rs b/podcasts-gtk/src/widgets/episode_description.rs
index 7efca7be..ec080a37 100644
--- a/podcasts-gtk/src/widgets/episode_description.rs
+++ b/podcasts-gtk/src/widgets/episode_description.rs
@@ -24,11 +24,9 @@ use podcasts_data::{Episode, Show};
 
 use crate::app::Action;
 use crate::utils::{self};
-use crate::widgets::appnotif::InAppNotification;
 use crate::widgets::EpisodeMenu;
 
 use crate::episode_description_parser;
-use crate::i18n::i18n;
 use chrono::prelude::*;
 use std::rc::Rc;
 use std::sync::Arc;
@@ -141,14 +139,4 @@ impl EpisodeDescription {
             .map_err(|err| error!("Failed to set a cover: {}", err))
             .ok();
     }
-
-    pub(crate) fn copied_url_notif() -> InAppNotification {
-        let callback = move |revealer: gtk::Revealer| {
-            revealer.set_reveal_child(false);
-            glib::Continue(false)
-        };
-        let text = i18n("Copied URL to clipboard!");
-        let undo_callback: Option<fn()> = None;
-        InAppNotification::new(&text, 2000, callback, undo_callback)
-    }
 }
diff --git a/podcasts-gtk/src/widgets/mod.rs b/podcasts-gtk/src/widgets/mod.rs
index cf9a7dde..ea3e9bb3 100644
--- a/podcasts-gtk/src/widgets/mod.rs
+++ b/podcasts-gtk/src/widgets/mod.rs
@@ -18,7 +18,6 @@
 // SPDX-License-Identifier: GPL-3.0-or-later
 
 mod aboutdialog;
-pub(crate) mod appnotif;
 mod base_view;
 mod empty;
 mod episode;
diff --git a/podcasts-gtk/src/widgets/show.rs b/podcasts-gtk/src/widgets/show.rs
index c958eca7..636098d1 100644
--- a/podcasts-gtk/src/widgets/show.rs
+++ b/podcasts-gtk/src/widgets/show.rs
@@ -166,7 +166,7 @@ fn populate_listbox(
     let count = dbqueries::get_pd_episodes_count(&pd)?;
 
     let (sender_, receiver) = bounded(1);
-    rayon::spawn(clone!(@strong pd => move || {
+    tokio::spawn(clone!(@strong pd => async move {
         if let Ok(episodes) = dbqueries::get_pd_episodeswidgets(&pd) {
             // The receiver can be dropped if there's an early return
             // like on show without episodes for example.
@@ -182,6 +182,7 @@ fn populate_listbox(
 
     let show_weak = Rc::downgrade(&show);
     let list_weak = show.episodes.downgrade();
+
     glib::idle_add_local(move || {
         let episodes = match receiver.try_recv() {
             Ok(e) => e,
diff --git a/podcasts-gtk/src/widgets/show_menu.rs b/podcasts-gtk/src/widgets/show_menu.rs
index 1a33f14c..fc85fbef 100644
--- a/podcasts-gtk/src/widgets/show_menu.rs
+++ b/podcasts-gtk/src/widgets/show_menu.rs
@@ -30,7 +30,6 @@ use podcasts_data::Show;
 
 use crate::app::Action;
 use crate::utils;
-use crate::widgets::appnotif::InAppNotification;
 
 use std::sync::Arc;
 
@@ -166,56 +165,59 @@ fn mark_all_watched(pd: &Show, sender: &Sender<Action>) -> Result<()> {
     Ok(())
 }
 
-pub(crate) fn mark_all_notif(pd: Arc<Show>, sender: &Sender<Action>) -> InAppNotification {
+pub(crate) fn mark_all_notif(pd: Arc<Show>, sender: &Sender<Action>) -> adw::Toast {
     let id = pd.id();
-    let sender_ = sender.clone();
-    let callback = move |revealer: gtk::Revealer| {
-        let res = mark_all_watched(&pd, &sender_);
-        debug_assert!(res.is_ok());
+    let toast = adw::Toast::new(&i18n("Marked all episodes as listened"));
+    toast.set_button_label(Some(&i18n("Undo")));
+    toast.set_action_target_value(Some(&id.to_variant()));
+    toast.set_action_name(Some("app.undo-mark-all"));
 
-        revealer.set_reveal_child(false);
-        glib::Continue(false)
-    };
+    toast.connect_dismissed(clone!(@strong sender => move |_| {
+        let app = gio::Application::default()
+            .expect("Could not get default application")
+            .downcast::<crate::PdApplication>()
+            .unwrap();
+        if app.is_show_marked_mark(&pd) {
+            let res = mark_all_watched(&pd, &sender);
+            debug_assert!(res.is_ok());
+        }
+    }));
 
-    let undo_callback = clone!(@strong sender => move || {
-        send!(sender, Action::RefreshWidgetIfSame(id));
-    });
-    let text = i18n("Marked all episodes as listened");
-    InAppNotification::new(&text, 6000, callback, Some(undo_callback))
+    toast
 }
 
-pub(crate) fn remove_show_notif(pd: Arc<Show>, sender: Sender<Action>) -> InAppNotification {
+pub(crate) fn remove_show_notif(pd: Arc<Show>, sender: Sender<Action>) -> adw::Toast {
     let text = i18n_f("Unsubscribed from {}", &[pd.title()]);
+    let id = pd.id();
 
-    let res = utils::ignore_show(pd.id());
+    let toast = adw::Toast::new(&text);
+    toast.set_button_label(Some(&i18n("Undo")));
+    toast.set_action_target_value(Some(&id.to_variant()));
+    toast.set_action_name(Some("app.undo-remove-show"));
+
+    let res = utils::ignore_show(id);
     debug_assert!(res.is_ok());
 
-    let sender_ = sender.clone();
-    let pd_ = pd.clone();
-    let callback = move |revealer: gtk::Revealer| {
-        let res = utils::unignore_show(pd_.id());
+    toast.connect_dismissed(clone!(@strong sender => move |_args| {
+        let res = utils::unignore_show(id);
         debug_assert!(res.is_ok());
 
         // Spawn a thread so it won't block the ui.
-        rayon::spawn(clone!(@strong pd_, @strong sender_ => move || {
-            delete_show(&pd_)
-                .map_err(|err| error!("Error: {}", err))
-                .map_err(|_| error!("Failed to delete {}", pd_.title()))
-                .ok();
+        rayon::spawn(clone!(@strong pd, @strong sender => move || {
+            let app = gio::Application::default()
+                .expect("Could not get default application")
+                .downcast::<crate::PdApplication>()
+                .unwrap();
+            if app.is_show_marked_delete(&pd) {
+                delete_show(&pd)
+                    .map_err(|err| error!("Error: {}", err))
+                    .map_err(|_| error!("Failed to delete {}", pd.title()))
+                    .ok();
 
-            send!(sender_, Action::RefreshEpisodesView);
+                send!(sender, Action::RefreshEpisodesView);
+            }
         }));
+    }));
 
-        revealer.set_reveal_child(false);
-        glib::Continue(false)
-    };
-
-    let undo_callback = move || {
-        let res = utils::unignore_show(pd.id());
-        debug_assert!(res.is_ok());
-        send!(sender, Action::RefreshShowsView);
-        send!(sender, Action::RefreshEpisodesView);
-    };
-
-    InAppNotification::new(&text, 6000, callback, Some(undo_callback))
+    toast
 }
diff --git a/podcasts-gtk/src/window.rs b/podcasts-gtk/src/window.rs
index f62e900d..b72c4027 100644
--- a/podcasts-gtk/src/window.rs
+++ b/podcasts-gtk/src/window.rs
@@ -30,7 +30,6 @@ use crate::settings::{self, WindowGeometry};
 use crate::stacks::Content;
 use crate::utils::{self, make_action};
 use crate::widgets::about_dialog;
-use crate::widgets::appnotif::InAppNotification;
 use crate::widgets::player;
 
 use std::cell::{Cell, RefCell};
@@ -43,13 +42,14 @@ use crate::i18n::i18n;
 #[derive(Debug)]
 pub struct MainWindow {
     pub(crate) window: adw::ApplicationWindow,
-    pub(crate) overlay: gtk::Overlay,
     pub(crate) content: Rc<Content>,
     pub(crate) headerbar: Rc<Header>,
     pub(crate) player: player::PlayerWrapper,
     pub(crate) main_deck: adw::Leaflet,
+    pub(crate) toast_overlay: adw::ToastOverlay,
+    pub(crate) progress_bar: Rc<gtk::ProgressBar>,
+    pub(crate) updating_timeout: RefCell<Option<glib::source::SourceId>>,
     pub(crate) updating: Cell<bool>,
-    pub(crate) updater: RefCell<Option<InAppNotification>>,
     pub(crate) sender: Sender<Action>,
 }
 
@@ -58,6 +58,7 @@ impl MainWindow {
         let settings = gio::Settings::new(APP_ID);
 
         let window = adw::ApplicationWindow::new(app);
+        let toast_overlay = adw::ToastOverlay::new();
 
         window.set_title(Some(&i18n("Podcasts")));
         if APP_ID.ends_with("Devel") {
@@ -83,20 +84,22 @@ impl MainWindow {
         let header = Header::new(&content, &sender);
 
         // Add the content main stack to the overlay.
-        let overlay = gtk::Overlay::new();
         let main_deck = adw::Leaflet::new();
         main_deck.set_can_unfold(false);
         main_deck.set_can_navigate_forward(false);
         main_deck.append(&content.get_container());
-        overlay.set_child(Some(&main_deck));
 
         let wrap = gtk::Box::new(gtk::Orientation::Vertical, 0);
+        let progress_bar = gtk::ProgressBar::new();
+        progress_bar.hide();
+        progress_bar.add_css_class("osd");
 
+        content.get_container().prepend(&progress_bar);
         // Add the Headerbar to the window.
         content.get_container().prepend(&header.container);
 
-        // Add the overlay to the main Box
-        wrap.append(&overlay);
+        // Add the deck to the main Box
+        wrap.append(&main_deck);
 
         let player = player::PlayerWrapper::new(&sender);
         // Add the player to the main Box
@@ -104,7 +107,8 @@ impl MainWindow {
 
         wrap.append(&header.bottom_switcher);
 
-        adw::traits::ApplicationWindowExt::set_content(&window, Some(&wrap));
+        toast_overlay.set_child(Some(&wrap));
+        adw::traits::ApplicationWindowExt::set_content(&window, Some(&toast_overlay));
 
         // Retrieve the previous window position and size.
         WindowGeometry::from_settings(&settings).apply(&window);
@@ -128,13 +132,14 @@ impl MainWindow {
 
         Self {
             window,
-            overlay,
             headerbar: header,
             content,
             player,
             main_deck,
+            toast_overlay,
+            progress_bar: Rc::new(progress_bar),
             updating: Cell::new(false),
-            updater: RefCell::new(None),
+            updating_timeout: RefCell::new(None),
             sender: sender.clone(),
         }
     }
-- 
GitLab


From 6a3299aeb839f8d5c4df4520884ba5eb601066f0 Mon Sep 17 00:00:00 2001
From: Maximiliano Sandoval R <msandova@gnome.org>
Date: Fri, 10 Dec 2021 09:44:25 +0100
Subject: [PATCH 06/23] podcasts-gtk: Support dark mode api

---
 .../org.gnome.Podcasts.gschema.xml.in         |  5 ----
 podcasts-gtk/src/app.rs                       | 24 -------------------
 2 files changed, 29 deletions(-)

diff --git a/podcasts-gtk/resources/org.gnome.Podcasts.gschema.xml.in b/podcasts-gtk/resources/org.gnome.Podcasts.gschema.xml.in
index fc0fca11..1b94de44 100644
--- a/podcasts-gtk/resources/org.gnome.Podcasts.gschema.xml.in
+++ b/podcasts-gtk/resources/org.gnome.Podcasts.gschema.xml.in
@@ -23,11 +23,6 @@
             <summary>Maximized state of the last open main window</summary>
         </key>
 
-        <key name="dark-theme" type="b">
-            <default>false</default>
-            <summary>Enable or disable dark theme</summary>
-        </key>
-
         <key name="refresh-interval" type="b">
             <default>true</default>
             <summary>Whether to periodically refresh content</summary>
diff --git a/podcasts-gtk/src/app.rs b/podcasts-gtk/src/app.rs
index f37bfde4..0d333d3d 100644
--- a/podcasts-gtk/src/app.rs
+++ b/podcasts-gtk/src/app.rs
@@ -120,9 +120,6 @@ impl ApplicationImpl for PdApplicationPrivate {
         utils::cleanup(cleanup_date);
 
         self.settings.replace(Some(settings));
-
-        let app = app.clone().downcast::<PdApplication>().expect("How?");
-        app.setup_timed_callbacks();
     }
 }
 
@@ -172,10 +169,6 @@ impl PdApplication {
         .expect("Application initialization failed...")
     }
 
-    fn setup_timed_callbacks(&self) {
-        self.setup_dark_theme();
-    }
-
     fn setup_gactions(&self) {
         let app = self.upcast_ref::<gtk::Application>();
         let data = PdApplicationPrivate::from_instance(self);
@@ -281,23 +274,6 @@ impl PdApplication {
         self.set_accels_for_action("win.refresh", &["<primary>r"]);
     }
 
-    fn setup_dark_theme(&self) {
-        let data = PdApplicationPrivate::from_instance(self);
-        if let Some(ref settings) = *data.settings.borrow() {
-            let gtk_settings = gtk::Settings::default().unwrap();
-            settings
-                .bind(
-                    "dark-theme",
-                    &gtk_settings,
-                    "gtk-application-prefer-dark-theme",
-                )
-                .flags(gio::SettingsBindFlags::DEFAULT)
-                .build();
-        } else {
-            debug_assert!(false, "Well how'd you manage that?");
-        }
-    }
-
     fn do_action(&self, action: Action) -> glib::Continue {
         let data = PdApplicationPrivate::from_instance(self);
         let w = data.window.borrow();
-- 
GitLab


From 25fff5f171f7bc3099fdde9a88afe8effdbf5896 Mon Sep 17 00:00:00 2001
From: Maximiliano Sandoval R <msandova@gnome.org>
Date: Fri, 10 Dec 2021 22:44:57 +0100
Subject: [PATCH 07/23] episode_description: Wrap in scrolled window

Wrap the entire view in a scrolled window.

Before if the view overflowed the scrollbar would appear
inside the Clamp instead of the edges of the view.
---
 .../resources/gtk/episode_description.ui      | 139 +++++++++---------
 1 file changed, 68 insertions(+), 71 deletions(-)

diff --git a/podcasts-gtk/resources/gtk/episode_description.ui b/podcasts-gtk/resources/gtk/episode_description.ui
index bcefb816..0fd9131f 100644
--- a/podcasts-gtk/resources/gtk/episode_description.ui
+++ b/podcasts-gtk/resources/gtk/episode_description.ui
@@ -32,6 +32,7 @@ Tobias Bernard
   <object class="GtkBox" id="episode_container">
     <property name="height_request">64</property>
     <property name="vexpand">True</property>
+    <property name="hexpand">True</property>
     <property name="orientation">vertical</property>
     <child>
       <object class="AdwHeaderBar" id="header">
@@ -59,97 +60,93 @@ Tobias Bernard
       </object>
     </child>
     <child>
-      <object class="AdwClamp" id="clamp">
+      <object class="GtkScrolledWindow">
         <property name="vexpand">True</property>
-        <property name="maximum_size">700</property>
+        <property name="hexpand">True</property>
+        <property name="hscrollbar_policy">never</property>
         <child>
-          <object class="GtkBox" id="content">
+          <object class="AdwClamp" id="clamp">
             <property name="vexpand">True</property>
-            <property name="orientation">vertical</property>
-            <property name="baseline_position">top</property>
+            <property name="maximum_size">700</property>
             <child>
-              <object class="GtkBox" id="episode_info">
-                <property name="valign">start</property>
-                <property name="margin_top">18</property>
-                <property name="margin_bottom">18</property>
-                <property name="hexpand">True</property>
+              <object class="GtkBox" id="content">
+                <property name="vexpand">True</property>
                 <property name="orientation">vertical</property>
+                <property name="baseline_position">top</property>
                 <child>
-                  <object class="GtkBox">
-                    <property name="margin_start">18</property>
-                    <property name="margin_end">18</property>
-                    <child>
-                      <object class="GtkImage" id="cover">
-                        <property name="margin_end">12</property>
-                        <property name="hexpand">False</property>
-                        <property name="vexpand">False</property>
-                        <property name="pixel_size">64</property>
-                        <property name="icon_name">image-x-generic-symbolic</property>
-                      </object>
-                    </child>
+                  <object class="GtkBox" id="episode_info">
+                    <property name="valign">start</property>
+                    <property name="margin_top">18</property>
+                    <property name="margin_bottom">18</property>
+                    <property name="hexpand">True</property>
+                    <property name="orientation">vertical</property>
                     <child>
                       <object class="GtkBox">
-                        <property name="orientation">vertical</property>
-                        <child>
-                          <object class="GtkLabel" id="podcast_title">
-                            <property name="label" translatable="yes">Podcast Title</property>
-                            <property name="wrap">True</property>
-                            <property name="wrap_mode">word-char</property>
-                            <property name="xalign">0</property>
-                            <style>
-                              <class name="podcast_title"/>
-                            </style>
-                          </object>
-                        </child>
+                        <property name="margin_start">18</property>
+                        <property name="margin_end">18</property>
                         <child>
-                          <object class="GtkLabel" id="episode_title">
-                            <property name="label">Episode Title</property>
-                            <property name="wrap">True</property>
-                            <property name="wrap_mode">word-char</property>
-                            <property name="lines">1</property>
-                            <property name="xalign">0</property>
-                            <style>
-                              <class name="episode_title"/>
-                            </style>
+                          <object class="GtkImage" id="cover">
+                            <property name="margin_end">12</property>
+                            <property name="hexpand">False</property>
+                            <property name="vexpand">False</property>
+                            <property name="pixel_size">64</property>
+                            <property name="icon_name">image-x-generic-symbolic</property>
                           </object>
                         </child>
                         <child>
-                          <object class="GtkLabel" id="episode_duration_date">
-                            <property name="label" translatable="yes">Duration - Date</property>
-                            <property name="xalign">0</property>
-                            <style>
-                              <class name="episode_duration_date"/>
-                            </style>
+                          <object class="GtkBox">
+                            <property name="orientation">vertical</property>
+                            <child>
+                              <object class="GtkLabel" id="podcast_title">
+                                <property name="label" translatable="yes">Podcast Title</property>
+                                <property name="wrap">True</property>
+                                <property name="wrap_mode">word-char</property>
+                                <property name="xalign">0</property>
+                                <style>
+                                  <class name="podcast_title"/>
+                                </style>
+                              </object>
+                            </child>
+                            <child>
+                              <object class="GtkLabel" id="episode_title">
+                                <property name="label">Episode Title</property>
+                                <property name="wrap">True</property>
+                                <property name="wrap_mode">word-char</property>
+                                <property name="lines">1</property>
+                                <property name="xalign">0</property>
+                                <style>
+                                  <class name="episode_title"/>
+                                </style>
+                              </object>
+                            </child>
+                            <child>
+                              <object class="GtkLabel" id="episode_duration_date">
+                                <property name="label" translatable="yes">Duration - Date</property>
+                                <property name="xalign">0</property>
+                                <style>
+                                  <class name="episode_duration_date"/>
+                                </style>
+                              </object>
+                            </child>
                           </object>
                         </child>
                       </object>
                     </child>
                   </object>
                 </child>
-              </object>
-            </child>
-            <child>
-              <object class="GtkScrolledWindow">
-                <property name="vexpand">True</property>
-                <property name="hscrollbar_policy">never</property>
                 <child>
-                  <object class="GtkViewport">
+                  <object class="GtkLabel" id="episode_description">
+                    <property name="valign">start</property>
+                    <property name="margin_start">18</property>
+                    <property name="margin_end">18</property>
+                    <property name="margin_bottom">18</property>
                     <property name="vexpand">True</property>
-                    <child>
-                      <object class="GtkLabel" id="episode_description">
-                        <property name="valign">start</property>
-                        <property name="margin_start">18</property>
-                        <property name="margin_end">18</property>
-                        <property name="margin_bottom">18</property>
-                        <property name="vexpand">True</property>
-                        <property name="label" translatable="yes">Episode Description</property>
-                        <property name="wrap">True</property>
-                        <property name="xalign">0</property>
-                        <style>
-                          <class name="episode_description_label"/>
-                        </style>
-                      </object>
-                    </child>
+                    <property name="label" translatable="yes">Episode Description</property>
+                    <property name="wrap">True</property>
+                    <property name="xalign">0</property>
+                    <style>
+                      <class name="episode_description_label"/>
+                    </style>
                   </object>
                 </child>
               </object>
-- 
GitLab


From 9b51169880a1cc23bc4ea48593632c875776bd4a Mon Sep 17 00:00:00 2001
From: Maximiliano Sandoval R <msandova@gnome.org>
Date: Wed, 29 Dec 2021 15:56:04 +0100
Subject: [PATCH 08/23] podcasts-gtk: Subclass BaseView and ShowWidget

---
 podcasts-gtk/resources/gtk/show_widget.ui | 172 +++++++++--------
 podcasts-gtk/src/stacks/home.rs           |   6 +-
 podcasts-gtk/src/stacks/populated.rs      |  20 +-
 podcasts-gtk/src/widgets/base_view.rs     | 109 ++++++++---
 podcasts-gtk/src/widgets/home_view.rs     |   2 +-
 podcasts-gtk/src/widgets/show.rs          | 222 +++++++++++++---------
 podcasts-gtk/src/widgets/shows_view.rs    |   9 +-
 7 files changed, 319 insertions(+), 221 deletions(-)

diff --git a/podcasts-gtk/resources/gtk/show_widget.ui b/podcasts-gtk/resources/gtk/show_widget.ui
index aba5a899..d4e1d9ac 100644
--- a/podcasts-gtk/resources/gtk/show_widget.ui
+++ b/podcasts-gtk/resources/gtk/show_widget.ui
@@ -29,106 +29,116 @@ Tobias Bernard
   <!-- interface-description A podcast client for the GNOME Desktop -->
   <!-- interface-copyright 2017 - 2018 -->
   <!-- interface-authors Jordan Petridis\nTobias Bernard -->
-  <object class="GtkBox" id="sub_container">
-    <property name="margin_top">32</property>
-    <property name="margin_bottom">32</property>
-    <property name="hexpand">True</property>
-    <property name="orientation">vertical</property>
-    <property name="spacing">6</property>
+  <template class="PdShowWidget">
     <child>
-      <object class="GtkBox">
-        <property name="orientation">vertical</property>
-        <property name="spacing">6</property>
-        <property name="margin_start">6</property>
-        <property name="margin_end">6</property>
-        <property name="margin_top">6</property>
-        <property name="margin_bottom">6</property>
-        <child>
-          <object class="GtkImage" id="cover">
-            <property name="pixel_size">256</property>
-            <property name="icon_name">image-x-generic-symbolic</property>
-          </object>
-        </child>
-        <child>
+      <object class="PdBaseView" id="view">
+        <property name="child">
           <object class="AdwClamp">
-            <property name="maximum_size">600</property>
             <child>
-              <object class="GtkStack" id="description_stack">
-                <property name="vhomogeneous">False</property>
-                <property name="hhomogeneous">False</property>
-                <property name="transition_type">none</property>
-                <property name="interpolate_size">True</property>
-                <property name="margin_end">12</property>
-                <property name="margin_start">12</property>
-                <property name="margin_top">12</property>
-                <property name="margin_bottom">12</property>
+              <object class="GtkBox" id="sub_container">
+                <property name="margin_top">32</property>
+                <property name="margin_bottom">32</property>
+                <property name="hexpand">True</property>
+                <property name="orientation">vertical</property>
+                <property name="spacing">6</property>
                 <child>
-                  <object class="GtkStackPage">
-                    <property name="name">short</property>
-                    <property name="child">
-                      <object class="GtkBox">
-                        <property name="halign">fill</property>
-                        <property name="orientation">vertical</property>
-                        <child>
-                          <object class="GtkLabel" id="description_short">
-                            <property name="halign">center</property>
-                            <property name="valign">center</property>
-                            <property name="use_markup">True</property>
-                            <property name="justify">center</property>
-                            <property name="wrap">True</property>
-                            <property name="wrap_mode">word-char</property>
-                            <property name="ellipsize">end</property>
-                            <property name="lines">4</property>
-                          </object>
-                        </child>
+                  <object class="GtkBox">
+                    <property name="orientation">vertical</property>
+                    <property name="spacing">6</property>
+                    <property name="margin_start">6</property>
+                    <property name="margin_end">6</property>
+                    <property name="margin_top">6</property>
+                    <property name="margin_bottom">6</property>
+                    <child>
+                      <object class="GtkImage" id="cover">
+                        <property name="pixel_size">256</property>
+                        <property name="icon_name">image-x-generic-symbolic</property>
+                      </object>
+                    </child>
+                    <child>
+                      <object class="AdwClamp">
+                        <property name="maximum_size">600</property>
                         <child>
-                          <object class="GtkRevealer" id="description_button_revealer">
-                            <property name="reveal_child">False</property>
-                            <property name="transition_duration">1</property>
+                          <object class="GtkStack" id="description_stack">
+                            <property name="vhomogeneous">False</property>
+                            <property name="hhomogeneous">False</property>
+                            <property name="transition_type">none</property>
+                            <property name="interpolate_size">True</property>
+                            <property name="margin_end">12</property>
+                            <property name="margin_start">12</property>
+                            <property name="margin_top">12</property>
+                            <property name="margin_bottom">12</property>
+                            <child>
+                              <object class="GtkStackPage">
+                                <property name="name">short</property>
+                                <property name="child">
+                                  <object class="GtkBox">
+                                    <property name="halign">fill</property>
+                                    <property name="orientation">vertical</property>
+                                    <child>
+                                      <object class="GtkLabel" id="description_short">
+                                        <property name="halign">center</property>
+                                        <property name="valign">center</property>
+                                        <property name="use_markup">True</property>
+                                        <property name="justify">center</property>
+                                        <property name="wrap">True</property>
+                                        <property name="wrap_mode">word-char</property>
+                                      </object>
+                                    </child>
+                                    <child>
+                                      <object class="GtkRevealer" id="description_button_revealer">
+                                        <property name="reveal_child">False</property>
+                                        <property name="transition_duration">1</property>
+                                        <child>
+                                          <object class="GtkButton" id="description_button">
+                                            <property name="label" translatable="yes">Read More</property>
+                                            <property name="receives_default">False</property>
+                                            <property name="halign">center</property>
+                                            <property name="margin_top">12</property>
+                                          </object>
+                                        </child>
+                                      </object>
+                                    </child>
+                                  </object>
+                                </property>
+                              </object>
+                            </child>
                             <child>
-                              <object class="GtkButton" id="description_button">
-                                <property name="label" translatable="yes">Read More</property>
-                                <property name="receives_default">False</property>
-                                <property name="halign">center</property>
-                                <property name="margin_top">12</property>
+                              <object class="GtkStackPage">
+                                <property name="name">full</property>
+                                <property name="child">
+                                  <object class="GtkLabel" id="description">
+                                    <property name="halign">center</property>
+                                    <property name="valign">center</property>
+                                    <property name="use_markup">True</property>
+                                    <property name="justify">center</property>
+                                    <property name="wrap">True</property>
+                                    <property name="wrap_mode">word-char</property>
+                                  </object>
+                                </property>
                               </object>
                             </child>
                           </object>
                         </child>
                       </object>
-                    </property>
+                    </child>
                   </object>
                 </child>
                 <child>
-                  <object class="GtkStackPage">
-                    <property name="name">full</property>
-                    <property name="child">
-                      <object class="GtkLabel" id="description">
-                        <property name="halign">center</property>
-                        <property name="valign">center</property>
-                        <property name="use_markup">True</property>
-                        <property name="justify">center</property>
-                        <property name="wrap">True</property>
-                        <property name="wrap_mode">word-char</property>
-                      </object>
-                    </property>
+                  <object class="GtkListBox" id="episodes">
+                    <property name="valign">start</property>
+                    <property name="selection_mode">none</property>
+                    <property name="activate_on_single_click">True</property>
+                    <style>
+                      <class name="content"/>
+                    </style>
                   </object>
                 </child>
               </object>
             </child>
           </object>
-        </child>
-      </object>
-    </child>
-    <child>
-      <object class="GtkListBox" id="episodes">
-        <property name="valign">start</property>
-        <property name="selection_mode">none</property>
-        <property name="activate_on_single_click">True</property>
-        <style>
-          <class name="content"/>
-        </style>
+        </property>
       </object>
     </child>
-  </object>
+  </template>
 </interface>
diff --git a/podcasts-gtk/src/stacks/home.rs b/podcasts-gtk/src/stacks/home.rs
index 9de89c0d..0eef163d 100644
--- a/podcasts-gtk/src/stacks/home.rs
+++ b/podcasts-gtk/src/stacks/home.rs
@@ -45,7 +45,7 @@ impl HomeStack {
         let stack = gtk::Stack::new();
         let state = State::Empty;
 
-        stack.add_named(episodes.view.container(), Some("home"));
+        stack.add_named(&episodes.view, Some("home"));
         stack.add_named(empty.deref(), Some("empty"));
 
         let home = HomeStack {
@@ -65,7 +65,7 @@ impl HomeStack {
 
     pub(crate) fn update(&mut self) -> Result<()> {
         // Get the container of the view
-        let old = &self.episodes.view.container().clone();
+        let old = &self.episodes.view;
 
         // Copy the vertical scrollbar adjustment from the old view.
         let vadj = self.episodes.view.vadjustment();
@@ -75,7 +75,7 @@ impl HomeStack {
         // during this the previous view is removed,
         // and the visible child falls back to empty view.
         self.stack.remove(old);
-        self.stack.add_named(eps.view.container(), Some("home"));
+        self.stack.add_named(&eps.view, Some("home"));
         // Keep the previous state.
         let s = self.state;
         // Set the visible child back to the previous one to avoid
diff --git a/podcasts-gtk/src/stacks/populated.rs b/podcasts-gtk/src/stacks/populated.rs
index 68ba768d..9ea43617 100644
--- a/podcasts-gtk/src/stacks/populated.rs
+++ b/podcasts-gtk/src/stacks/populated.rs
@@ -42,7 +42,7 @@ pub(crate) enum PopulatedState {
 pub(crate) struct PopulatedStack {
     container: gtk::Box,
     populated: Rc<ShowsView>,
-    show: Rc<ShowWidget>,
+    show: ShowWidget,
     stack: gtk::Stack,
     state: PopulatedState,
     sender: Sender<Action>,
@@ -53,11 +53,11 @@ impl PopulatedStack {
         let stack = gtk::Stack::new();
         let state = PopulatedState::View;
         let populated = ShowsView::new(sender.clone(), None);
-        let show = Rc::new(ShowWidget::default());
+        let show = ShowWidget::default();
         let container = gtk::Box::new(gtk::Orientation::Horizontal, 0);
 
-        stack.add_named(populated.view.container(), Some("shows"));
-        stack.add_named(show.view.container(), Some("widget"));
+        stack.add_named(&populated.view, Some("shows"));
+        stack.add_named(&show, Some("widget"));
         container.append(&stack);
 
         PopulatedStack {
@@ -87,24 +87,23 @@ impl PopulatedStack {
     }
 
     pub(crate) fn replace_shows(&mut self) -> Result<()> {
-        let old = &self.populated.view.container().clone();
+        let old = &self.populated.view.clone();
         debug!("Name: {:?}", old.widget_name());
 
         let vadj = self.populated.view.vadjustment();
         let pop = ShowsView::new(self.sender.clone(), Some(vadj));
         self.populated = pop;
         self.stack.remove(old);
-        self.stack
-            .add_named(self.populated.view.container(), Some("shows"));
+        self.stack.add_named(&self.populated.view, Some("shows"));
 
         Ok(())
     }
 
     pub(crate) fn replace_widget(&mut self, pd: Arc<Show>) -> Result<()> {
-        let old = self.show.view.container().clone();
+        let old = self.show.clone();
 
         // Get the ShowWidget vertical alignment
-        let vadj = self.show.view.vadjustment();
+        let vadj = self.show.view().vadjustment();
         let new = match self.show.show_id() {
             // If the previous show was the same, restore the alignment
             Some(id) if id == pd.id() => ShowWidget::new(pd, self.sender.clone(), Some(vadj)),
@@ -114,8 +113,7 @@ impl PopulatedStack {
 
         self.show = new;
         self.stack.remove(&old);
-        self.stack
-            .add_named(self.show.view.container(), Some("widget"));
+        self.stack.add_named(&self.show, Some("widget"));
 
         // The current visible child might change depending on
         // removal and insertion in the gtk::Stack, so we have
diff --git a/podcasts-gtk/src/widgets/base_view.rs b/podcasts-gtk/src/widgets/base_view.rs
index 1c3a0010..3abb4f51 100644
--- a/podcasts-gtk/src/widgets/base_view.rs
+++ b/podcasts-gtk/src/widgets/base_view.rs
@@ -18,41 +18,94 @@
 // SPDX-License-Identifier: GPL-3.0-or-later
 
 use crate::utils::smooth_scroll_to;
-use gtk::{prelude::*, Adjustment, Orientation, PolicyType};
 
-#[derive(Debug, Clone)]
-pub(crate) struct BaseView {
-    container: gtk::Box,
-    scrolled_window: gtk::ScrolledWindow,
+use gtk::glib;
+use gtk::prelude::*;
+use gtk::subclass::prelude::*;
+use gtk::{Adjustment, PolicyType};
+
+use adw::prelude::*;
+use adw::subclass::prelude::*;
+
+use once_cell::sync::Lazy;
+
+#[derive(Debug, Default)]
+pub struct BaseViewPriv {
+    pub scrolled_window: gtk::ScrolledWindow,
 }
 
-impl Default for BaseView {
-    fn default() -> Self {
-        let container = gtk::Box::new(Orientation::Horizontal, 0);
-        let scrolled_window = gtk::ScrolledWindow::new();
+#[glib::object_subclass]
+impl ObjectSubclass for BaseViewPriv {
+    const NAME: &'static str = "PdBaseView";
+    type Type = super::BaseView;
+    type ParentType = adw::Bin;
+}
 
-        scrolled_window.set_policy(PolicyType::Never, PolicyType::Automatic);
-        container.set_size_request(360, -1);
-        container.append(&scrolled_window);
+impl ObjectImpl for BaseViewPriv {
+    fn constructed(&self, obj: &Self::Type) {
+        self.parent_constructed(obj);
 
-        BaseView {
-            container,
-            scrolled_window,
+        self.scrolled_window
+            .set_policy(PolicyType::Never, PolicyType::Automatic);
+        obj.set_size_request(360, -1);
+        obj.set_child(Some(&self.scrolled_window));
+    }
+
+    fn properties() -> &'static [glib::ParamSpec] {
+        static PROPERTIES: Lazy<Vec<glib::ParamSpec>> = Lazy::new(|| {
+            vec![glib::ParamSpec::new_object(
+                "child",
+                "child",
+                "child",
+                gtk::Widget::static_type(),
+                glib::ParamFlags::READWRITE,
+            )]
+        });
+        PROPERTIES.as_ref()
+    }
+
+    fn property(&self, _obj: &Self::Type, _id: usize, pspec: &glib::ParamSpec) -> glib::Value {
+        match pspec.name() {
+            "child" => self.scrolled_window.child().to_value(),
+            _ => unimplemented!(),
         }
     }
-}
 
-impl BaseView {
-    pub(crate) fn container(&self) -> &gtk::Box {
-        &self.container
+    fn set_property(
+        &self,
+        _obj: &Self::Type,
+        _id: usize,
+        value: &glib::Value,
+        pspec: &glib::ParamSpec,
+    ) {
+        match pspec.name() {
+            "child" => self
+                .scrolled_window
+                .set_child(value.get::<gtk::Widget>().ok().as_ref()),
+            _ => unimplemented!(),
+        };
     }
+}
+
+impl WidgetImpl for BaseViewPriv {}
+impl BinImpl for BaseViewPriv {}
 
-    pub(crate) fn scrolled_window(&self) -> &gtk::ScrolledWindow {
-        &self.scrolled_window
+glib::wrapper! {
+    pub struct BaseView(ObjectSubclass<BaseViewPriv>)
+        @extends gtk::Widget, adw::Bin;
+}
+
+impl Default for BaseView {
+    fn default() -> Self {
+        glib::Object::new(&[]).unwrap()
     }
+}
+
+impl BaseView {
+    pub(crate) fn set_content<T: IsA<gtk::Widget>>(&self, widget: &T) {
+        let self_ = BaseViewPriv::from_instance(&self);
 
-    pub(crate) fn set_child<T: IsA<gtk::Widget>>(&self, widget: &T) {
-        self.scrolled_window.set_child(Some(widget));
+        self_.scrolled_window.set_child(Some(widget));
     }
 
     pub(crate) fn set_adjustments(
@@ -60,16 +113,20 @@ impl BaseView {
         hadjustment: Option<&Adjustment>,
         vadjustment: Option<&Adjustment>,
     ) {
+        let self_ = BaseViewPriv::from_instance(&self);
+
         if let Some(h) = hadjustment {
-            smooth_scroll_to(&self.scrolled_window, h);
+            smooth_scroll_to(&self_.scrolled_window, h);
         }
 
         if let Some(v) = vadjustment {
-            smooth_scroll_to(&self.scrolled_window, v);
+            smooth_scroll_to(&self_.scrolled_window, v);
         }
     }
 
     pub(crate) fn vadjustment(&self) -> Adjustment {
-        self.scrolled_window().vadjustment().unwrap()
+        let self_ = BaseViewPriv::from_instance(&self);
+
+        self_.scrolled_window.vadjustment().unwrap()
     }
 }
diff --git a/podcasts-gtk/src/widgets/home_view.rs b/podcasts-gtk/src/widgets/home_view.rs
index 2f452e16..ab0c8759 100644
--- a/podcasts-gtk/src/widgets/home_view.rs
+++ b/podcasts-gtk/src/widgets/home_view.rs
@@ -81,7 +81,7 @@ impl Default for HomeView {
         clamp.set_maximum_size(700);
 
         clamp.set_child(Some(&frame_parent));
-        view.set_child(&clamp);
+        view.set_content(&clamp);
 
         HomeView {
             view,
diff --git a/podcasts-gtk/src/widgets/show.rs b/podcasts-gtk/src/widgets/show.rs
index 636098d1..fdfaba88 100644
--- a/podcasts-gtk/src/widgets/show.rs
+++ b/podcasts-gtk/src/widgets/show.rs
@@ -19,9 +19,8 @@
 
 use glib::clone;
 use glib::Sender;
-use gtk::{prelude::*, Adjustment};
+use gtk::Adjustment;
 
-use adw::Clamp;
 use anyhow::Result;
 use crossbeam_channel::bounded;
 use fragile::Fragile;
@@ -34,53 +33,69 @@ use crate::app::Action;
 use crate::utils::{self, lazy_load};
 use crate::widgets::{BaseView, EmptyShow, EpisodeWidget, ShowMenu};
 
+use std::cell::Cell;
 use std::ops::Deref;
-use std::rc::Rc;
 use std::sync::Arc;
 
-#[derive(Debug, Clone)]
-pub(crate) struct ShowWidget {
-    pub(crate) view: BaseView,
-    cover: gtk::Image,
-    description: gtk::Label,
-    description_short: gtk::Label,
-    description_stack: gtk::Stack,
-    description_button: gtk::Button,
-    description_button_revealer: gtk::Revealer,
-    episodes: gtk::ListBox,
-    show_id: Option<i32>,
+use gtk::glib;
+use gtk::subclass::prelude::*;
+use gtk::{prelude::*, CompositeTemplate};
+
+#[derive(Debug, Default, CompositeTemplate)]
+#[template(resource = "/org/gnome/Podcasts/gtk/show_widget.ui")]
+pub struct ShowWidgetPriv {
+    #[template_child]
+    pub cover: TemplateChild<gtk::Image>,
+    #[template_child]
+    pub description: TemplateChild<gtk::Label>,
+    #[template_child]
+    pub description_short: TemplateChild<gtk::Label>,
+    #[template_child]
+    pub description_stack: TemplateChild<gtk::Stack>,
+    #[template_child]
+    pub description_button: TemplateChild<gtk::Button>,
+    #[template_child]
+    pub description_button_revealer: TemplateChild<gtk::Revealer>,
+    #[template_child]
+    pub episodes: TemplateChild<gtk::ListBox>,
+    #[template_child]
+    pub(crate) view: TemplateChild<BaseView>,
+
+    pub show_id: Cell<Option<i32>>,
+}
+
+#[glib::object_subclass]
+impl ObjectSubclass for ShowWidgetPriv {
+    const NAME: &'static str = "PdShowWidget";
+    type Type = super::ShowWidget;
+    type ParentType = gtk::Widget;
+
+    fn class_init(klass: &mut Self::Class) {
+        Self::bind_template(klass);
+        klass.set_layout_manager_type::<gtk::BinLayout>();
+    }
+
+    fn instance_init(obj: &glib::subclass::InitializingObject<Self>) {
+        obj.init_template();
+    }
+}
+
+impl ObjectImpl for ShowWidgetPriv {
+    fn dispose(&self, _obj: &Self::Type) {
+        self.view.unparent();
+    }
+}
+
+impl WidgetImpl for ShowWidgetPriv {}
+
+glib::wrapper! {
+    pub struct ShowWidget(ObjectSubclass<ShowWidgetPriv>)
+        @extends gtk::Widget;
 }
 
 impl Default for ShowWidget {
     fn default() -> Self {
-        let builder = gtk::Builder::from_resource("/org/gnome/Podcasts/gtk/show_widget.ui");
-        let sub_cont: gtk::Box = builder.object("sub_container").unwrap();
-        let cover: gtk::Image = builder.object("cover").unwrap();
-        let description: gtk::Label = builder.object("description").unwrap();
-        let description_short: gtk::Label = builder.object("description_short").unwrap();
-        let description_stack: gtk::Stack = builder.object("description_stack").unwrap();
-        let description_button: gtk::Button = builder.object("description_button").unwrap();
-        let description_button_revealer = builder.object("description_button_revealer").unwrap();
-        let episodes: gtk::ListBox = builder.object("episodes").unwrap();
-        let view = BaseView::default();
-
-        let clamp = Clamp::new();
-        clamp.set_maximum_size(700);
-
-        clamp.set_child(Some(&sub_cont));
-        view.set_child(&clamp);
-
-        ShowWidget {
-            view,
-            cover,
-            description,
-            description_short,
-            description_stack,
-            description_button,
-            description_button_revealer,
-            episodes,
-            show_id: None,
-        }
+        glib::Object::new(&[]).unwrap()
     }
 }
 
@@ -89,74 +104,90 @@ impl ShowWidget {
         pd: Arc<Show>,
         sender: Sender<Action>,
         vadj: Option<Adjustment>,
-    ) -> Rc<ShowWidget> {
-        let mut pdw = ShowWidget::default();
+    ) -> ShowWidget {
+        let pdw = ShowWidget::default();
+        let pdw_ = ShowWidgetPriv::from_instance(&pdw);
         pdw.init(&pd);
 
-        let menu = ShowMenu::new(&pd, &pdw.episodes, &sender);
+        let menu = ShowMenu::new(&pd, &pdw_.episodes, &sender);
         send!(sender, Action::InitSecondaryMenu(Fragile::new(menu.menu)));
 
-        let pdw = Rc::new(pdw);
         let res = populate_listbox(&pdw, pd, sender, vadj);
         debug_assert!(res.is_ok());
 
-        pdw.update_read_more();
-
-        pdw.description_button
+        pdw_.description_button
             .connect_clicked(clone!(@weak pdw => move |_| {
-                pdw.description_stack.set_visible_child_name("full");
+                let pdw_ = ShowWidgetPriv::from_instance(&pdw);
+
+                pdw_.description_stack.set_visible_child_name("full");
             }));
 
         pdw
     }
 
-    pub(crate) fn init(&mut self, pd: &Arc<Show>) {
+    pub(crate) fn init(&self, pd: &Arc<Show>) {
+        let self_ = ShowWidgetPriv::from_instance(self);
+
         self.set_description(pd.description());
-        self.show_id = Some(pd.id());
+        self_.show_id.set(Some(pd.id()));
 
         let res = self.set_cover(&pd);
+
         debug_assert!(res.is_ok());
     }
 
     /// Set the show cover.
     fn set_cover(&self, pd: &Arc<Show>) -> Result<()> {
-        utils::set_image_from_path(&self.cover, pd.id(), 256)
+        let self_ = ShowWidgetPriv::from_instance(self);
+
+        utils::set_image_from_path(&self_.cover, pd.id(), 256)
     }
 
     fn update_read_more(&self) {
-        let layout = self.description_short.layout();
-        let more =
-            layout.is_ellipsized() || self.description.label() != self.description_short.label();
-        self.description_button_revealer.set_reveal_child(more);
+        let self_ = ShowWidgetPriv::from_instance(self);
+
+        let more = self_.description.label() != self_.description_short.label();
+        self_.description_button_revealer.set_reveal_child(more);
     }
 
     /// Set the description text.
     fn set_description(&self, text: &str) {
+        let self_ = ShowWidgetPriv::from_instance(self);
+
         let markup = html2text::from_read(text.as_bytes(), text.as_bytes().len());
         let markup = markup.trim();
         let lines: Vec<&str> = markup.lines().collect();
 
         if markup.is_empty() {
-            self.description_stack.set_visible(false);
+            self_.description_stack.set_visible(false);
         } else {
-            self.description_stack.set_visible(true);
+            self_.description_stack.set_visible(true);
 
-            self.description.set_markup(markup);
+            self_.description.set_markup(markup);
             debug_assert!(!lines.is_empty());
             if !lines.is_empty() {
-                self.description_short.set_markup(lines[0]);
+                self_.description_short.set_markup(lines[0]);
+                self.update_read_more()
             }
         }
     }
 
     pub(crate) fn show_id(&self) -> Option<i32> {
-        self.show_id
+        let self_ = ShowWidgetPriv::from_instance(self);
+
+        self_.show_id.get()
+    }
+
+    pub(crate) fn view(&self) -> BaseView {
+        let self_ = ShowWidgetPriv::from_instance(self);
+
+        self_.view.clone()
     }
 }
 
 /// Populate the listbox with the shows episodes.
 fn populate_listbox(
-    show: &Rc<ShowWidget>,
+    show: &ShowWidget,
     pd: Arc<Show>,
     sender: Sender<Action>,
     vadj: Option<Adjustment>,
@@ -164,6 +195,7 @@ fn populate_listbox(
     use crossbeam_channel::TryRecvError;
 
     let count = dbqueries::get_pd_episodes_count(&pd)?;
+    let show_ = ShowWidgetPriv::from_instance(show);
 
     let (sender_, receiver) = bounded(1);
     tokio::spawn(clone!(@strong pd => async move {
@@ -176,43 +208,43 @@ fn populate_listbox(
 
     if count == 0 {
         let empty = EmptyShow::default();
-        show.episodes.append(empty.deref());
+        show_.episodes.append(empty.deref());
         return Ok(());
     }
 
-    let show_weak = Rc::downgrade(&show);
-    let list_weak = show.episodes.downgrade();
-
-    glib::idle_add_local(move || {
-        let episodes = match receiver.try_recv() {
-            Ok(e) => e,
-            Err(TryRecvError::Empty) => return glib::Continue(true),
-            Err(TryRecvError::Disconnected) => return glib::Continue(false),
-        };
-
-        debug_assert!(episodes.len() as i64 == count);
-
-        let constructor = clone!(@strong sender => move |ep: EpisodeWidgetModel| {
-            let id = ep.rowid();
-            let episode_widget = EpisodeWidget::new(ep, &sender).container.clone();
-            let row = gtk::ListBoxRow::new();
-            row.set_child(Some(&episode_widget));
-            row.set_action_name(Some("app.go-to-episode"));
-            row.set_action_target_value(Some(&id.to_variant()));
-            row
-        });
-
-        let callback = clone!(@strong show_weak, @strong vadj => move || {
-            if let (Some(ref shows), Some(ref v)) = (show_weak.upgrade(), &vadj)
-            {
-                shows.view.set_adjustments(None, Some(v))
-            }
-        });
+    let list_weak = show_.episodes.downgrade();
+
+    glib::idle_add_local(
+        glib::clone!(@weak show => @default-return glib::Continue(false), move || {
+            let episodes = match receiver.try_recv() {
+                Ok(e) => e,
+                Err(TryRecvError::Empty) => return glib::Continue(true),
+                Err(TryRecvError::Disconnected) => return glib::Continue(false),
+            };
+
+            debug_assert!(episodes.len() as i64 == count);
+
+            let constructor = clone!(@strong sender => move |ep: EpisodeWidgetModel| {
+                let id = ep.rowid();
+                let episode_widget = EpisodeWidget::new(ep, &sender).container.clone();
+                let row = gtk::ListBoxRow::new();
+                row.set_child(Some(&episode_widget));
+                row.set_action_name(Some("app.go-to-episode"));
+                row.set_action_target_value(Some(&id.to_variant()));
+                row
+            });
+
+            let callback = clone!(@weak show, @strong vadj => move || {
+                let show_ = ShowWidgetPriv::from_instance(&show);
+
+                show_.view.set_adjustments(None, vadj.as_ref());
+            });
 
-        lazy_load(episodes, list_weak.clone(), constructor, callback);
+            lazy_load(episodes, list_weak.clone(), constructor, callback);
 
-        glib::Continue(false)
-    });
+            glib::Continue(false)
+        }),
+    );
 
     Ok(())
 }
diff --git a/podcasts-gtk/src/widgets/shows_view.rs b/podcasts-gtk/src/widgets/shows_view.rs
index 8b48c473..fa1a6c41 100644
--- a/podcasts-gtk/src/widgets/shows_view.rs
+++ b/podcasts-gtk/src/widgets/shows_view.rs
@@ -59,7 +59,7 @@ impl Default for ShowsView {
         flowbox.set_valign(Align::Start);
         flowbox.set_halign(Align::Center);
         flowbox.set_selection_mode(SelectionMode::None);
-        view.set_child(&flowbox);
+        view.set_content(&flowbox);
 
         ShowsView { view, flowbox }
     }
@@ -164,12 +164,13 @@ impl ShowCover {
     }
 
     fn id(&self) -> i32 {
-        self.imp().show_id.get()
+        let self_ = ShowCoverPrivate::from_instance(self);
+        self_.show_id.get()
     }
 
     fn load_image(&self) -> Result<()> {
-        let imp = self.imp();
-        set_image_from_path(&imp.cover, imp.show_id.get(), 256)?;
+        let self_ = ShowCoverPrivate::from_instance(self);
+        set_image_from_path(&self_.cover, self_.show_id.get(), 256)?;
         Ok(())
     }
 }
-- 
GitLab


From c0d587357e043f0d406d901e363231f2e5d384fa Mon Sep 17 00:00:00 2001
From: Maximiliano Sandoval R <msandova@gnome.org>
Date: Thu, 30 Dec 2021 18:42:50 +0100
Subject: [PATCH 09/23] wip, figur out what's wrong and fix commit message:
 Detect if short description is ellipsized

This sucks. is_ellipsized has to be called during allocation, but for
some reason implementing the allocation directly on the ShortDesc widget
won't work correctly.
---
 podcasts-gtk/resources/gtk/show_widget.ui     | 10 +--
 podcasts-gtk/src/meson.build                  |  2 +
 podcasts-gtk/src/widgets/mod.rs               |  4 +
 podcasts-gtk/src/widgets/short_desc.rs        | 81 +++++++++++++++++++
 podcasts-gtk/src/widgets/short_desc_layout.rs | 65 +++++++++++++++
 podcasts-gtk/src/widgets/show.rs              | 26 ++++--
 6 files changed, 173 insertions(+), 15 deletions(-)
 create mode 100644 podcasts-gtk/src/widgets/short_desc.rs
 create mode 100644 podcasts-gtk/src/widgets/short_desc_layout.rs

diff --git a/podcasts-gtk/resources/gtk/show_widget.ui b/podcasts-gtk/resources/gtk/show_widget.ui
index d4e1d9ac..37e9c4d5 100644
--- a/podcasts-gtk/resources/gtk/show_widget.ui
+++ b/podcasts-gtk/resources/gtk/show_widget.ui
@@ -73,17 +73,9 @@ Tobias Bernard
                                 <property name="name">short</property>
                                 <property name="child">
                                   <object class="GtkBox">
-                                    <property name="halign">fill</property>
                                     <property name="orientation">vertical</property>
                                     <child>
-                                      <object class="GtkLabel" id="description_short">
-                                        <property name="halign">center</property>
-                                        <property name="valign">center</property>
-                                        <property name="use_markup">True</property>
-                                        <property name="justify">center</property>
-                                        <property name="wrap">True</property>
-                                        <property name="wrap_mode">word-char</property>
-                                      </object>
+                                      <object class="PdShortDesc" id="description_short"/>
                                     </child>
                                     <child>
                                       <object class="GtkRevealer" id="description_button_revealer">
diff --git a/podcasts-gtk/src/meson.build b/podcasts-gtk/src/meson.build
index f9e7ad35..4b394acd 100644
--- a/podcasts-gtk/src/meson.build
+++ b/podcasts-gtk/src/meson.build
@@ -34,6 +34,8 @@ podcasts_sources = files(
   'widgets/show.rs',
   'widgets/show_menu.rs',
   'widgets/shows_view.rs',
+  'widgets/short_desc.rs',
+  'widgets/short_desc_layout.rs',
   'app.rs',
   'episode_description_parser.rs',
   'headerbar.rs',
diff --git a/podcasts-gtk/src/widgets/mod.rs b/podcasts-gtk/src/widgets/mod.rs
index ea3e9bb3..9e2ebab4 100644
--- a/podcasts-gtk/src/widgets/mod.rs
+++ b/podcasts-gtk/src/widgets/mod.rs
@@ -25,6 +25,8 @@ mod episode_description;
 pub(crate) mod episode_menu;
 mod home_view;
 pub(crate) mod player;
+mod short_desc;
+mod short_desc_layout;
 mod show;
 pub(crate) mod show_menu;
 mod shows_view;
@@ -36,6 +38,8 @@ pub(crate) use self::episode::EpisodeWidget;
 pub(crate) use self::episode_description::EpisodeDescription;
 pub(crate) use self::episode_menu::EpisodeMenu;
 pub(crate) use self::home_view::HomeView;
+pub(crate) use self::short_desc::ShortDesc;
+pub(crate) use self::short_desc_layout::ShortDescLayout;
 pub(crate) use self::show::ShowWidget;
 pub(crate) use self::show_menu::ShowMenu;
 pub(crate) use self::shows_view::ShowsView;
diff --git a/podcasts-gtk/src/widgets/short_desc.rs b/podcasts-gtk/src/widgets/short_desc.rs
new file mode 100644
index 00000000..b5889654
--- /dev/null
+++ b/podcasts-gtk/src/widgets/short_desc.rs
@@ -0,0 +1,81 @@
+use glib::subclass::Signal;
+use gtk::glib;
+use gtk::prelude::*;
+use gtk::subclass::prelude::*;
+
+use once_cell::sync::Lazy;
+
+use crate::widgets::ShortDescLayout;
+
+#[derive(Debug, Default)]
+pub struct ShortDescPriv {
+    pub label: gtk::Label,
+}
+
+#[glib::object_subclass]
+impl ObjectSubclass for ShortDescPriv {
+    const NAME: &'static str = "PdShortDesc";
+    type Type = ShortDesc;
+    type ParentType = gtk::Widget;
+}
+
+impl ObjectImpl for ShortDescPriv {
+    fn signals() -> &'static [Signal] {
+        static SIGNALS: Lazy<Vec<Signal>> = Lazy::new(|| {
+            vec![Signal::builder(
+                "is-ellipsized",
+                &[<bool>::static_type().into()],
+                <()>::static_type().into(),
+            )
+            .flags(glib::SignalFlags::ACTION)
+            .build()]
+        });
+        SIGNALS.as_ref()
+    }
+
+    fn constructed(&self, obj: &Self::Type) {
+        self.parent_constructed(obj);
+        self.label.set_parent(obj);
+
+        self.label.set_valign(gtk::Align::Center);
+        self.label.set_halign(gtk::Align::Center);
+        self.label.set_use_markup(true);
+        self.label.set_wrap(true);
+        self.label.set_lines(4);
+        self.label.set_wrap_mode(gtk::pango::WrapMode::WordChar);
+        self.label.set_justify(gtk::Justification::Center);
+        self.label.set_ellipsize(gtk::pango::EllipsizeMode::End);
+
+        let layout = ShortDescLayout::default();
+        obj.set_layout_manager(Some(&layout));
+    }
+
+    fn dispose(&self, _obj: &Self::Type) {
+        self.label.unparent();
+    }
+}
+
+impl WidgetImpl for ShortDescPriv {}
+
+glib::wrapper! {
+    pub struct ShortDesc(ObjectSubclass<ShortDescPriv>)
+        @extends gtk::Widget;
+}
+
+impl Default for ShortDesc {
+    fn default() -> Self {
+        glib::Object::new(&[]).unwrap()
+    }
+}
+
+impl ShortDesc {
+    pub fn label(&self) -> glib::GString {
+        let self_ = ShortDescPriv::from_instance(self);
+        self_.label.label()
+    }
+
+    pub fn set_label(&self, label: &str) {
+        let self_ = ShortDescPriv::from_instance(self);
+        self_.label.set_markup(label);
+    }
+}
diff --git a/podcasts-gtk/src/widgets/short_desc_layout.rs b/podcasts-gtk/src/widgets/short_desc_layout.rs
new file mode 100644
index 00000000..ae7193cf
--- /dev/null
+++ b/podcasts-gtk/src/widgets/short_desc_layout.rs
@@ -0,0 +1,65 @@
+use gtk::glib;
+use gtk::prelude::*;
+use gtk::subclass::prelude::*;
+
+#[derive(Debug, Default)]
+pub struct ShortDescLayoutPriv {}
+
+#[glib::object_subclass]
+impl ObjectSubclass for ShortDescLayoutPriv {
+    const NAME: &'static str = "PdShortDescLayout";
+    type Type = ShortDescLayout;
+    type ParentType = gtk::LayoutManager;
+}
+
+impl ObjectImpl for ShortDescLayoutPriv {}
+impl LayoutManagerImpl for ShortDescLayoutPriv {
+    fn allocate(
+        &self,
+        _layout_manager: &Self::Type,
+        widget: &gtk::Widget,
+        width: i32,
+        height: i32,
+        baseline: i32,
+    ) {
+        if let Some(label) = widget.first_child() {
+            if label.is_visible() {
+                label.allocate(width, height, baseline, None);
+
+                let value = label
+                    .downcast::<gtk::Label>()
+                    .unwrap()
+                    .layout()
+                    .is_ellipsized()
+                    .to_value();
+                widget.emit_by_name("is-ellipsized", &[&value]).unwrap();
+            }
+        }
+    }
+    fn measure(
+        &self,
+        _layout_manager: &Self::Type,
+        widget: &gtk::Widget,
+        orientation: gtk::Orientation,
+        for_size: i32,
+    ) -> (i32, i32, i32, i32) {
+        if let Some(label) = widget.first_child() {
+            label.measure(orientation, for_size)
+        } else {
+            (0, 0, -1, -1)
+        }
+    }
+}
+
+glib::wrapper! {
+    pub struct ShortDescLayout(ObjectSubclass<ShortDescLayoutPriv>)
+        @extends gtk::LayoutManager;
+}
+
+impl Default for ShortDescLayout {
+    fn default() -> Self {
+        glib::Object::new(&[]).unwrap()
+    }
+}
+
+impl ShortDescLayout {}
diff --git a/podcasts-gtk/src/widgets/show.rs b/podcasts-gtk/src/widgets/show.rs
index fdfaba88..2b5efccc 100644
--- a/podcasts-gtk/src/widgets/show.rs
+++ b/podcasts-gtk/src/widgets/show.rs
@@ -31,7 +31,7 @@ use podcasts_data::Show;
 
 use crate::app::Action;
 use crate::utils::{self, lazy_load};
-use crate::widgets::{BaseView, EmptyShow, EpisodeWidget, ShowMenu};
+use crate::widgets::{BaseView, EmptyShow, EpisodeWidget, ShortDesc, ShowMenu};
 
 use std::cell::Cell;
 use std::ops::Deref;
@@ -49,7 +49,7 @@ pub struct ShowWidgetPriv {
     #[template_child]
     pub description: TemplateChild<gtk::Label>,
     #[template_child]
-    pub description_short: TemplateChild<gtk::Label>,
+    pub description_short: TemplateChild<ShortDesc>,
     #[template_child]
     pub description_stack: TemplateChild<gtk::Stack>,
     #[template_child]
@@ -81,6 +81,21 @@ impl ObjectSubclass for ShowWidgetPriv {
 }
 
 impl ObjectImpl for ShowWidgetPriv {
+    fn constructed(&self, obj: &Self::Type) {
+        self.parent_constructed(obj);
+        self.description_short
+            .connect_local(
+                "is-ellipsized",
+                false,
+                clone!(@weak obj => @default-return None, move |args| {
+                    let is_ellipsized = args[1].get().unwrap();
+                    obj.update_read_more(is_ellipsized);
+                    None
+                }),
+            )
+            .unwrap();
+    }
+
     fn dispose(&self, _obj: &Self::Type) {
         self.view.unparent();
     }
@@ -143,10 +158,10 @@ impl ShowWidget {
         utils::set_image_from_path(&self_.cover, pd.id(), 256)
     }
 
-    fn update_read_more(&self) {
+    fn update_read_more(&self, is_ellipsized: bool) {
         let self_ = ShowWidgetPriv::from_instance(self);
 
-        let more = self_.description.label() != self_.description_short.label();
+        let more = is_ellipsized || self_.description.label() != self_.description_short.label();
         self_.description_button_revealer.set_reveal_child(more);
     }
 
@@ -166,8 +181,7 @@ impl ShowWidget {
             self_.description.set_markup(markup);
             debug_assert!(!lines.is_empty());
             if !lines.is_empty() {
-                self_.description_short.set_markup(lines[0]);
-                self.update_read_more()
+                self_.description_short.set_label(lines[0]);
             }
         }
     }
-- 
GitLab


From ce092e3562a8468d41315494e7570230fd98cc7d Mon Sep 17 00:00:00 2001
From: Maximiliano Sandoval R <msandova@gnome.org>
Date: Sun, 2 Jan 2022 21:12:00 +0100
Subject: [PATCH 10/23] podcasts-gtk: Round cover images

---
 podcasts-gtk/resources/gtk/episode_description.ui | 4 ++++
 podcasts-gtk/resources/gtk/home_episode.ui        | 7 ++++++-
 podcasts-gtk/resources/gtk/player_dialog.ui       | 4 ++++
 podcasts-gtk/resources/gtk/player_toolbar.ui      | 8 ++++++++
 podcasts-gtk/resources/gtk/show_widget.ui         | 5 +++++
 podcasts-gtk/resources/gtk/style.css              | 8 ++++++++
 podcasts-gtk/src/widgets/shows_view.rs            | 2 ++
 7 files changed, 37 insertions(+), 1 deletion(-)

diff --git a/podcasts-gtk/resources/gtk/episode_description.ui b/podcasts-gtk/resources/gtk/episode_description.ui
index 0fd9131f..b51fc8eb 100644
--- a/podcasts-gtk/resources/gtk/episode_description.ui
+++ b/podcasts-gtk/resources/gtk/episode_description.ui
@@ -91,6 +91,10 @@ Tobias Bernard
                             <property name="vexpand">False</property>
                             <property name="pixel_size">64</property>
                             <property name="icon_name">image-x-generic-symbolic</property>
+                            <property name="overflow">hidden</property>
+                            <style>
+                              <class name="rounded-small"/>
+                            </style>
                           </object>
                         </child>
                         <child>
diff --git a/podcasts-gtk/resources/gtk/home_episode.ui b/podcasts-gtk/resources/gtk/home_episode.ui
index ad8f6c4f..2b9aab63 100644
--- a/podcasts-gtk/resources/gtk/home_episode.ui
+++ b/podcasts-gtk/resources/gtk/home_episode.ui
@@ -31,13 +31,18 @@ Tobias Bernard
   <!-- interface-authors Jordan Petridis\nTobias Bernard -->
   <object class="GtkBox" id="container">
     <property name="valign">center</property>
+    <property name="margin_start">6</property>
+    <property name="margin_end">6</property>
     <property name="margin_top">6</property>
     <property name="margin_bottom">6</property>
     <child>
       <object class="GtkImage" id="cover">
-        <property name="margin_start">8</property>
         <property name="pixel_size">64</property>
         <property name="icon_name">image-x-generic-symbolic</property>
+        <property name="overflow">hidden</property>
+        <style>
+          <class name="rounded-small"/>
+        </style>
       </object>
     </child>
   </object>
diff --git a/podcasts-gtk/resources/gtk/player_dialog.ui b/podcasts-gtk/resources/gtk/player_dialog.ui
index bc0bcb66..9103f0f1 100644
--- a/podcasts-gtk/resources/gtk/player_dialog.ui
+++ b/podcasts-gtk/resources/gtk/player_dialog.ui
@@ -50,6 +50,10 @@
                     <property name="margin-bottom">6</property>
                     <property name="valign">center</property>
                     <property name="icon_name">gtk-missing-image</property>
+                    <property name="overflow">hidden</property>
+                    <style>
+                      <class name="rounded-big"/>
+                    </style>
                   </object>
                 </child>
               </object>
diff --git a/podcasts-gtk/resources/gtk/player_toolbar.ui b/podcasts-gtk/resources/gtk/player_toolbar.ui
index b0bf5464..b9b161f1 100644
--- a/podcasts-gtk/resources/gtk/player_toolbar.ui
+++ b/podcasts-gtk/resources/gtk/player_toolbar.ui
@@ -101,6 +101,10 @@ Tobias Bernard
                             <property name="valign">center</property>
                             <property name="pixel_size">34</property>
                             <property name="icon_name">image-x-generic-symbolic</property>
+                            <property name="overflow">hidden</property>
+                            <style>
+                              <class name="rounded-small"/>
+                            </style>
                           </object>
                         </child>
                         <child>
@@ -206,6 +210,10 @@ Tobias Bernard
                         <property name="valign">center</property>
                         <property name="pixel_size">34</property>
                         <property name="icon_name">image-x-generic-symbolic</property>
+                        <property name="overflow">hidden</property>
+                        <style>
+                          <class name="rounded-small"/>
+                        </style>
                       </object>
                     </child>
                     <child>
diff --git a/podcasts-gtk/resources/gtk/show_widget.ui b/podcasts-gtk/resources/gtk/show_widget.ui
index 37e9c4d5..45520c0c 100644
--- a/podcasts-gtk/resources/gtk/show_widget.ui
+++ b/podcasts-gtk/resources/gtk/show_widget.ui
@@ -52,7 +52,12 @@ Tobias Bernard
                     <child>
                       <object class="GtkImage" id="cover">
                         <property name="pixel_size">256</property>
+                        <property name="halign">center</property>
                         <property name="icon_name">image-x-generic-symbolic</property>
+                        <property name="overflow">hidden</property>
+                        <style>
+                          <class name="rounded-big"/>
+                        </style>
                       </object>
                     </child>
                     <child>
diff --git a/podcasts-gtk/resources/gtk/style.css b/podcasts-gtk/resources/gtk/style.css
index 9ca86aaa..b23f4bf7 100644
--- a/podcasts-gtk/resources/gtk/style.css
+++ b/podcasts-gtk/resources/gtk/style.css
@@ -42,3 +42,11 @@ popover modelbutton > box > label {
 .episode_description .episode_duration_date {
     color: @insensitive_fg_color;
 }
+
+.rounded-big {
+    border-radius: 8px;
+}
+
+.rounded-small {
+    border-radius: 4px;
+}
diff --git a/podcasts-gtk/src/widgets/shows_view.rs b/podcasts-gtk/src/widgets/shows_view.rs
index fa1a6c41..6aed4dc9 100644
--- a/podcasts-gtk/src/widgets/shows_view.rs
+++ b/podcasts-gtk/src/widgets/shows_view.rs
@@ -140,6 +140,8 @@ impl ObjectImpl for ShowCoverPrivate {
     fn constructed(&self, obj: &Self::Type) {
         self.parent_constructed(obj);
         self.cover.set_pixel_size(256);
+        self.cover.add_css_class("rounded-big");
+        self.cover.set_overflow(gtk::Overflow::Hidden);
 
         obj.set_child(Some(&self.cover));
     }
-- 
GitLab


From 7fa508015d51114901a8978741d88c3b877cc896 Mon Sep 17 00:00:00 2001
From: Maximiliano Sandoval R <msandova@gnome.org>
Date: Mon, 7 Feb 2022 21:45:30 +0100
Subject: [PATCH 11/23] Update gtk-rs stack

---
 Cargo.lock                                    | 877 ++++++++++--------
 podcasts-gtk/Cargo.toml                       |  12 +-
 podcasts-gtk/src/app.rs                       |   5 +-
 podcasts-gtk/src/stacks/content.rs            |   9 +-
 podcasts-gtk/src/utils.rs                     |   2 +-
 podcasts-gtk/src/widgets/aboutdialog.rs       |  64 +-
 podcasts-gtk/src/widgets/base_view.rs         |   4 +-
 podcasts-gtk/src/widgets/player.rs            |   2 +-
 podcasts-gtk/src/widgets/short_desc_layout.rs |   2 +-
 podcasts-gtk/src/widgets/show.rs              |  52 +-
 podcasts-gtk/src/widgets/shows_view.rs        |   2 +-
 podcasts-gtk/src/window.rs                    |   4 +-
 12 files changed, 542 insertions(+), 493 deletions(-)

diff --git a/Cargo.lock b/Cargo.lock
index 35756f2e..aae2d86f 100644
--- a/Cargo.lock
+++ b/Cargo.lock
@@ -13,15 +13,14 @@ dependencies = [
 
 [[package]]
 name = "ammonia"
-version = "3.1.2"
+version = "3.1.4"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "2e445c26125ff80316eaea16e812d717b147b82a68682bd4730f74d4845c8b35"
+checksum = "ea9f21d23d82bae9d33c21080572af1fa749788e68234b5d8fa5e39d3e0783ed"
 dependencies = [
  "html5ever",
  "lazy_static",
  "maplit",
  "markup5ever_rcdom",
- "matches",
  "tendril",
  "url",
 ]
@@ -37,9 +36,9 @@ dependencies = [
 
 [[package]]
 name = "anyhow"
-version = "1.0.52"
+version = "1.0.56"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "84450d0b4a8bd1ba4144ce8ce718fbc5d071358b1e5384bace6536b3d1f2d5b3"
+checksum = "4361135be9122e0870de935d7c439aef945b9f9ddd4199a553b5270b49c82a27"
 
 [[package]]
 name = "atom_syndication"
@@ -67,9 +66,9 @@ dependencies = [
 
 [[package]]
 name = "autocfg"
-version = "1.0.1"
+version = "1.1.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "cdb031dd78e28731d87d56cc8ffef4a8f36ca26c38fe2de700543e627f8a464a"
+checksum = "d468802bab17cbc0cc575e9b053f41e72aa36bfa6b7f55e3529ffa43161b97fa"
 
 [[package]]
 name = "base64"
@@ -85,9 +84,9 @@ checksum = "bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a"
 
 [[package]]
 name = "bumpalo"
-version = "3.8.0"
+version = "3.9.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "8f1e260c3a9040a7c19a12468758f4c16f31a81a1fe087482be9570ec864bb6c"
+checksum = "a4a45a46ab1f2412e53d3a0ade76ffad2025804294569aae387231a0cd6e0899"
 
 [[package]]
 name = "byteorder"
@@ -103,48 +102,39 @@ checksum = "c4872d67bab6358e59559027aa3b9157c53d9358c51423c17554809a8858e0f8"
 
 [[package]]
 name = "cairo-rs"
-version = "0.14.9"
+version = "0.15.10"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "33b5725979db0c586d98abad2193cdb612dd40ef95cd26bd99851bf93b3cb482"
+checksum = "129e928d3eda625f53ce257589efbe5143416875fd01bddd08c8c6feb8b9962b"
 dependencies = [
  "bitflags",
  "cairo-sys-rs",
- "glib 0.14.8",
+ "glib 0.15.10",
  "libc",
  "thiserror",
 ]
 
 [[package]]
 name = "cairo-sys-rs"
-version = "0.14.9"
+version = "0.15.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "b448b876970834fda82ba3aeaccadbd760206b75388fc5c1b02f1e343b697570"
+checksum = "3c55d429bef56ac9172d25fecb85dc8068307d17acd74b377866b7a1ef25d3c8"
 dependencies = [
- "glib-sys 0.14.0",
+ "glib-sys 0.15.10",
  "libc",
- "system-deps 3.2.0",
+ "system-deps 6.0.2",
 ]
 
 [[package]]
 name = "cc"
-version = "1.0.72"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "22a9137b95ea06864e018375b72adfb7db6e6f68cfc8df5a04d00288050485ee"
-
-[[package]]
-name = "cfg-expr"
-version = "0.8.1"
+version = "1.0.73"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "b412e83326147c2bb881f8b40edfbf9905b9b8abaebd0e47ca190ba62fda8f0e"
-dependencies = [
- "smallvec",
-]
+checksum = "2fff2a6927b3bb87f9595d67196a70493f627687a71d87a0d692242c33f58c11"
 
 [[package]]
 name = "cfg-expr"
-version = "0.9.0"
+version = "0.10.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "edae0b9625d1fce32f7d64b71784d9b1bf8469ec1a9c417e44aaf16a9cbd7571"
+checksum = "5e068cb2806bbc15b439846dc16c5f89f8599f2c3e4d73d4449d38f9b2f0b6c5"
 dependencies = [
  "smallvec",
 ]
@@ -170,9 +160,9 @@ dependencies = [
 
 [[package]]
 name = "core-foundation"
-version = "0.9.2"
+version = "0.9.3"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "6888e10551bb93e424d8df1d07f1a8b4fceb0001a3a4b048bfc47554946f47b3"
+checksum = "194a7a9e6de53fa55116934067c844d9d749312f75c6f6d0980e8c252f8c2146"
 dependencies = [
  "core-foundation-sys",
  "libc",
@@ -186,9 +176,9 @@ checksum = "5827cebf4670468b8772dd191856768aedcb1b0278a04f989f7766351917b9dc"
 
 [[package]]
 name = "crossbeam-channel"
-version = "0.5.1"
+version = "0.5.4"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "06ed27e177f16d65f0f0c22a213e17c696ace5dd64b14258b52f9417ccb52db4"
+checksum = "5aaa7bd5fb665c6864b5f963dd9097905c54125909c7aa94c9e18507cdbe6c53"
 dependencies = [
  "cfg-if",
  "crossbeam-utils",
@@ -207,10 +197,11 @@ dependencies = [
 
 [[package]]
 name = "crossbeam-epoch"
-version = "0.9.5"
+version = "0.9.8"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "4ec02e091aa634e2c3ada4a392989e7c3116673ef0ac5b72232439094d73b7fd"
+checksum = "1145cf131a2c6ba0615079ab6a638f7e1973ac9c2634fcbeaaad6114246efe8c"
 dependencies = [
+ "autocfg",
  "cfg-if",
  "crossbeam-utils",
  "lazy_static",
@@ -220,9 +211,9 @@ dependencies = [
 
 [[package]]
 name = "crossbeam-utils"
-version = "0.8.5"
+version = "0.8.8"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "d82cfc11ce7f2c3faef78d8a684447b40d503d9681acebed6cb728d45940c4db"
+checksum = "0bf124c720b7686e3c2663cf54062ab0f68a88af2fb6a030e87e30bf721fcb38"
 dependencies = [
  "cfg-if",
  "lazy_static",
@@ -230,9 +221,9 @@ dependencies = [
 
 [[package]]
 name = "ctor"
-version = "0.1.21"
+version = "0.1.22"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "ccc0a48a9b826acdf4028595adc9db92caea352f7af011a3034acd172a52a0aa"
+checksum = "f877be4f7c9f246b183111634f75baa039715e3f46ce860677d3b19a69fb229c"
 dependencies = [
  "quote",
  "syn",
@@ -425,18 +416,18 @@ dependencies = [
 
 [[package]]
 name = "dirs"
-version = "3.0.2"
+version = "4.0.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "30baa043103c9d0c2a57cf537cc2f35623889dc0d405e6c3cccfadbc81c71309"
+checksum = "ca3aa72a6f96ea37bbc5aa912f6788242832f75369bdfdadcb0e38423f100059"
 dependencies = [
  "dirs-sys",
 ]
 
 [[package]]
 name = "dirs-sys"
-version = "0.3.6"
+version = "0.3.7"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "03d86534ed367a67548dc68113a0f5db55432fdfbb6e6f9d77704397d95d5780"
+checksum = "1b1d1d91c932ef41c0f2663aa8b0ca0342d444d842c06914aa0a7e352d0bada6"
 dependencies = [
  "libc",
  "redox_users",
@@ -451,9 +442,9 @@ checksum = "e78d4f1cc4ae33bbfc157ed5d5a5ef3bc29227303d595861deb238fcec4e9457"
 
 [[package]]
 name = "encoding_rs"
-version = "0.8.30"
+version = "0.8.31"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "7896dc8abb250ffdda33912550faa54c88ec8b998dec0b2c55ab224921ce11df"
+checksum = "9852635589dc9f9ea1b6fe9f05b50ef208c85c834a562f0c6abb1c475736ec2b"
 dependencies = [
  "cfg-if",
 ]
@@ -471,6 +462,15 @@ dependencies = [
  "termcolor",
 ]
 
+[[package]]
+name = "fastrand"
+version = "1.7.0"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "c3fcf0cee53519c866c09b5de1f6c56ff9d647101f81c1964fa632e148896cdf"
+dependencies = [
+ "instant",
+]
+
 [[package]]
 name = "field-offset"
 version = "0.3.4"
@@ -514,9 +514,9 @@ dependencies = [
 
 [[package]]
 name = "fragile"
-version = "1.0.0"
+version = "1.2.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "69a039c3498dc930fe810151a34ba0c1c70b02b8625035592e74432f678591f2"
+checksum = "e9d758e60b45e8d749c89c1b389ad8aee550f86aa12e2b9298b546dda7a82ab1"
 
 [[package]]
 name = "fuchsia-cprng"
@@ -526,9 +526,9 @@ checksum = "a06f77d526c1a601b7c4cdd98f54b5eaabffc14d5f2f0296febdc7f357c6d3ba"
 
 [[package]]
 name = "futf"
-version = "0.1.4"
+version = "0.1.5"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "7c9c1ce3fa9336301af935ab852c437817d14cd33690446569392e65170aac3b"
+checksum = "df420e2e84819663797d1ec6544b13c5be84629e7bb00dc960d6917db2987843"
 dependencies = [
  "mac",
  "new_debug_unreachable",
@@ -536,9 +536,9 @@ dependencies = [
 
 [[package]]
 name = "futures"
-version = "0.3.19"
+version = "0.3.21"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "28560757fe2bb34e79f907794bb6b22ae8b0e5c669b638a1132f2592b19035b4"
+checksum = "f73fe65f54d1e12b726f517d3e2135ca3125a437b6d998caf1962961f7172d9e"
 dependencies = [
  "futures-channel",
  "futures-core",
@@ -551,9 +551,9 @@ dependencies = [
 
 [[package]]
 name = "futures-channel"
-version = "0.3.19"
+version = "0.3.21"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "ba3dda0b6588335f360afc675d0564c17a77a2bda81ca178a4b6081bd86c7f0b"
+checksum = "c3083ce4b914124575708913bca19bfe887522d6e2e6d0952943f5eac4a74010"
 dependencies = [
  "futures-core",
  "futures-sink",
@@ -561,15 +561,15 @@ dependencies = [
 
 [[package]]
 name = "futures-core"
-version = "0.3.19"
+version = "0.3.21"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "d0c8ff0461b82559810cdccfde3215c3f373807f5e5232b71479bff7bb2583d7"
+checksum = "0c09fd04b7e4073ac7156a9539b57a484a8ea920f79c7c675d05d289ab6110d3"
 
 [[package]]
 name = "futures-executor"
-version = "0.3.19"
+version = "0.3.21"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "29d6d2ff5bb10fb95c85b8ce46538a2e5f5e7fdc755623a7d4529ab8a4ed9d2a"
+checksum = "9420b90cfa29e327d0429f19be13e7ddb68fa1cccb09d65e5706b8c7a749b8a6"
 dependencies = [
  "futures-core",
  "futures-task",
@@ -578,15 +578,15 @@ dependencies = [
 
 [[package]]
 name = "futures-io"
-version = "0.3.19"
+version = "0.3.21"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "b1f9d34af5a1aac6fb380f735fe510746c38067c5bf16c7fd250280503c971b2"
+checksum = "fc4045962a5a5e935ee2fdedaa4e08284547402885ab326734432bed5d12966b"
 
 [[package]]
 name = "futures-macro"
-version = "0.3.19"
+version = "0.3.21"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "6dbd947adfffb0efc70599b3ddcf7b5597bb5fa9e245eb99f62b3a5f7bb8bd3c"
+checksum = "33c1e13800337f4d4d7a316bf45a567dbcb6ffe087f16424852d97e97a91f512"
 dependencies = [
  "proc-macro2",
  "quote",
@@ -595,21 +595,21 @@ dependencies = [
 
 [[package]]
 name = "futures-sink"
-version = "0.3.19"
+version = "0.3.21"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "e3055baccb68d74ff6480350f8d6eb8fcfa3aa11bdc1a1ae3afdd0514617d508"
+checksum = "21163e139fa306126e6eedaf49ecdb4588f939600f0b1e770f4205ee4b7fa868"
 
 [[package]]
 name = "futures-task"
-version = "0.3.19"
+version = "0.3.21"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "6ee7c6485c30167ce4dfb83ac568a849fe53274c831081476ee13e0dce1aad72"
+checksum = "57c66a976bf5909d801bbef33416c41372779507e7a6b3a5e25e4749c58f776a"
 
 [[package]]
 name = "futures-util"
-version = "0.3.19"
+version = "0.3.21"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "d9b5cf40b47a271f77a8b1bec03ca09044d99d2372c0de244e66430761127164"
+checksum = "d8b7abd5d659d9b90c8cba917f6ec750a74e2dc23902ef9cd4cc8c8b22e6036a"
 dependencies = [
  "futures-channel",
  "futures-core",
@@ -625,60 +625,61 @@ dependencies = [
 
 [[package]]
 name = "gdk-pixbuf"
-version = "0.14.0"
+version = "0.15.10"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "534192cb8f01daeb8fab2c8d4baa8f9aae5b7a39130525779f5c2608e235b10f"
+checksum = "678516f1baef591d270ca10587c01a12542a731a7879cc62391a18191a470831"
 dependencies = [
+ "bitflags",
  "gdk-pixbuf-sys",
  "gio",
- "glib 0.14.8",
+ "glib 0.15.10",
  "libc",
 ]
 
 [[package]]
 name = "gdk-pixbuf-sys"
-version = "0.14.0"
+version = "0.15.10"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "f097c0704201fbc8f69c1762dc58c6947c8bb188b8ed0bc7e65259f1894fe590"
+checksum = "140b2f5378256527150350a8346dbdb08fadc13453a7a2d73aecd5fab3c402a7"
 dependencies = [
  "gio-sys",
- "glib-sys 0.14.0",
- "gobject-sys 0.14.0",
+ "glib-sys 0.15.10",
+ "gobject-sys 0.15.10",
  "libc",
- "system-deps 3.2.0",
+ "system-deps 6.0.2",
 ]
 
 [[package]]
 name = "gdk4"
-version = "0.3.1"
+version = "0.4.7"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "f97a162c17214d1bf981af3f683156a0b1667dd1927057c4f0a68513251ecf0f"
+checksum = "d4a2fc0bd03d59383fc10b71a8cb731a1fac2998732a36a0c03e9b1de1513218"
 dependencies = [
  "bitflags",
  "cairo-rs",
  "gdk-pixbuf",
  "gdk4-sys",
  "gio",
- "glib 0.14.8",
+ "glib 0.15.10",
  "libc",
  "pango",
 ]
 
 [[package]]
 name = "gdk4-sys"
-version = "0.3.1"
+version = "0.4.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "9498f4e06969fb96a4e4234dfe1d308a3ac6b120b3c6d93e3ec5c77fe88bc6d5"
+checksum = "48a39e34abe35ee2cf54a1e29dd983accecd113ad30bdead5050418fa92f2a1b"
 dependencies = [
  "cairo-sys-rs",
  "gdk-pixbuf-sys",
  "gio-sys",
- "glib-sys 0.14.0",
- "gobject-sys 0.14.0",
- "graphene-sys",
+ "glib-sys 0.15.10",
+ "gobject-sys 0.15.10",
  "libc",
  "pango-sys",
- "system-deps 5.0.0",
+ "pkg-config",
+ "system-deps 6.0.2",
 ]
 
 [[package]]
@@ -694,13 +695,13 @@ dependencies = [
 
 [[package]]
 name = "getrandom"
-version = "0.2.3"
+version = "0.2.6"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "7fcd999463524c52659517fe2cea98493cfe485d10565e7b0fb07dbba7ad2753"
+checksum = "9be70c98951c83b8d2f8f60d7065fa6d5146873094452a1008da8c2f1e4205ad"
 dependencies = [
  "cfg-if",
  "libc",
- "wasi 0.10.2+wasi-snapshot-preview1",
+ "wasi 0.10.0+wasi-snapshot-preview1",
 ]
 
 [[package]]
@@ -722,16 +723,16 @@ dependencies = [
 
 [[package]]
 name = "gio"
-version = "0.14.8"
+version = "0.15.10"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "711c3632b3ebd095578a9c091418d10fed492da9443f58ebc8f45efbeb215cb0"
+checksum = "76cd21a7a674ea811749661012512b0ba5237ba404ccbcab2850db5537549b64"
 dependencies = [
  "bitflags",
  "futures-channel",
  "futures-core",
  "futures-io",
  "gio-sys",
- "glib 0.14.8",
+ "glib 0.15.10",
  "libc",
  "once_cell",
  "thiserror",
@@ -739,14 +740,14 @@ dependencies = [
 
 [[package]]
 name = "gio-sys"
-version = "0.14.0"
+version = "0.15.10"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "c0a41df66e57fcc287c4bcf74fc26b884f31901ea9792ec75607289b456f48fa"
+checksum = "32157a475271e2c4a023382e9cab31c4584ee30a97da41d3c4e9fdd605abcf8d"
 dependencies = [
- "glib-sys 0.14.0",
- "gobject-sys 0.14.0",
+ "glib-sys 0.15.10",
+ "gobject-sys 0.15.10",
  "libc",
- "system-deps 3.2.0",
+ "system-deps 6.0.2",
  "winapi",
 ]
 
@@ -771,21 +772,22 @@ dependencies = [
 
 [[package]]
 name = "glib"
-version = "0.14.8"
+version = "0.15.10"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "7c515f1e62bf151ef6635f528d05b02c11506de986e43b34a5c920ef0b3796a4"
+checksum = "a826fad715b57834920839d7a594c3b5e416358c7d790bdaba847a40d7c1d96d"
 dependencies = [
  "bitflags",
  "futures-channel",
  "futures-core",
  "futures-executor",
  "futures-task",
- "glib-macros 0.14.1",
- "glib-sys 0.14.0",
- "gobject-sys 0.14.0",
+ "glib-macros 0.15.10",
+ "glib-sys 0.15.10",
+ "gobject-sys 0.15.10",
  "libc",
  "once_cell",
  "smallvec",
+ "thiserror",
 ]
 
 [[package]]
@@ -795,8 +797,8 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "41486a26d1366a8032b160b59065a59fb528530a46a49f627e7048fb8c064039"
 dependencies = [
  "anyhow",
- "heck",
- "itertools 0.9.0",
+ "heck 0.3.3",
+ "itertools",
  "proc-macro-crate 0.1.5",
  "proc-macro-error",
  "proc-macro2",
@@ -806,13 +808,13 @@ dependencies = [
 
 [[package]]
 name = "glib-macros"
-version = "0.14.1"
+version = "0.15.10"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "2aad66361f66796bfc73f530c51ef123970eb895ffba991a234fcf7bea89e518"
+checksum = "dac4d47c544af67747652ab1865ace0ffa1155709723ac4f32e97587dd4735b2"
 dependencies = [
  "anyhow",
- "heck",
- "proc-macro-crate 1.1.0",
+ "heck 0.4.0",
+ "proc-macro-crate 1.1.3",
  "proc-macro-error",
  "proc-macro2",
  "quote",
@@ -831,12 +833,12 @@ dependencies = [
 
 [[package]]
 name = "glib-sys"
-version = "0.14.0"
+version = "0.15.10"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "1c1d60554a212445e2a858e42a0e48cece1bd57b311a19a9468f70376cf554ae"
+checksum = "ef4b192f8e65e9cf76cbf4ea71fa8e3be4a0e18ffe3d68b8da6836974cc5bad4"
 dependencies = [
  "libc",
- "system-deps 3.2.0",
+ "system-deps 6.0.2",
 ]
 
 [[package]]
@@ -858,48 +860,48 @@ dependencies = [
 
 [[package]]
 name = "gobject-sys"
-version = "0.14.0"
+version = "0.15.10"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "aa92cae29759dae34ab5921d73fff5ad54b3d794ab842c117e36cafc7994c3f5"
+checksum = "0d57ce44246becd17153bd035ab4d32cfee096a657fc01f2231c9278378d1e0a"
 dependencies = [
- "glib-sys 0.14.0",
+ "glib-sys 0.15.10",
  "libc",
- "system-deps 3.2.0",
+ "system-deps 6.0.2",
 ]
 
 [[package]]
 name = "graphene-rs"
-version = "0.14.8"
+version = "0.15.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "e3380f132530ef9eb9e0a2bac180e30390aa5e49892d20294f822a974117a563"
+checksum = "7c54f9fbbeefdb62c99f892dfca35f83991e2cb5b46a8dc2a715e58612f85570"
 dependencies = [
- "glib 0.14.8",
+ "glib 0.15.10",
  "graphene-sys",
  "libc",
 ]
 
 [[package]]
 name = "graphene-sys"
-version = "0.14.8"
+version = "0.15.10"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "9a9ac7450b3aa80792513a3c029920a2ede419de13fb5169a4e51b07a5685332"
+checksum = "fa691fc7337ba1df599afb55c3bcb85c04f1b3f17362570e9bb0ff0d1bc3028a"
 dependencies = [
- "glib-sys 0.14.0",
+ "glib-sys 0.15.10",
  "libc",
  "pkg-config",
- "system-deps 3.2.0",
+ "system-deps 6.0.2",
 ]
 
 [[package]]
 name = "gsk4"
-version = "0.3.1"
+version = "0.4.7"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "eff59ca46c4fc5087fd7a0c3770a71ea4b6e94f8c24c12e2c2e8538f9f6fd764"
+checksum = "14d5a47a78c682bb67496b562495ed84972c0512ba0654888c4dc92b80a85bd3"
 dependencies = [
  "bitflags",
  "cairo-rs",
  "gdk4",
- "glib 0.14.8",
+ "glib 0.15.10",
  "graphene-rs",
  "gsk4-sys",
  "libc",
@@ -908,38 +910,39 @@ dependencies = [
 
 [[package]]
 name = "gsk4-sys"
-version = "0.3.1"
+version = "0.4.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "13aa53ce70234da02f9954339d988d5ab853d746a8f47a4ae17735ff873545b5"
+checksum = "e31d21d7ce02ba261bb24c50c4ab238a10b41a2c97c32afffae29471b7cca69b"
 dependencies = [
  "cairo-sys-rs",
  "gdk4-sys",
- "glib-sys 0.14.0",
- "gobject-sys 0.14.0",
+ "glib-sys 0.15.10",
+ "gobject-sys 0.15.10",
  "graphene-sys",
  "libc",
  "pango-sys",
- "system-deps 5.0.0",
+ "system-deps 6.0.2",
 ]
 
 [[package]]
 name = "gstreamer"
-version = "0.17.4"
+version = "0.18.7"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "c6a255f142048ba2c4a4dce39106db1965abe355d23f4b5335edea43a553faa4"
+checksum = "cd58af6f8b268fc335122a3ccc66efa0cd56584948f49a37e5feef0b89dfc29b"
 dependencies = [
  "bitflags",
  "cfg-if",
  "futures-channel",
  "futures-core",
  "futures-util",
- "glib 0.14.8",
+ "glib 0.15.10",
  "gstreamer-sys",
  "libc",
  "muldiv",
  "num-integer",
  "num-rational",
  "once_cell",
+ "option-operations",
  "paste",
  "pretty-hex",
  "thiserror",
@@ -947,13 +950,13 @@ dependencies = [
 
 [[package]]
 name = "gstreamer-base"
-version = "0.17.2"
+version = "0.18.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "2c0c1d8c62eb5d08fb80173609f2eea71d385393363146e4e78107facbd67715"
+checksum = "224f35f36582407caf58ded74854526beeecc23d0cf64b8d1c3e00584ed6863f"
 dependencies = [
  "bitflags",
  "cfg-if",
- "glib 0.14.8",
+ "glib 0.15.10",
  "gstreamer",
  "gstreamer-base-sys",
  "libc",
@@ -961,25 +964,25 @@ dependencies = [
 
 [[package]]
 name = "gstreamer-base-sys"
-version = "0.17.0"
+version = "0.18.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "28169a7b58edb93ad8ac766f0fa12dcd36a2af4257a97ee10194c7103baf3e27"
+checksum = "a083493c3c340e71fa7c66eebda016e9fafc03eb1b4804cf9b2bad61994b078e"
 dependencies = [
- "glib-sys 0.14.0",
- "gobject-sys 0.14.0",
+ "glib-sys 0.15.10",
+ "gobject-sys 0.15.10",
  "gstreamer-sys",
  "libc",
- "system-deps 3.2.0",
+ "system-deps 6.0.2",
 ]
 
 [[package]]
 name = "gstreamer-player"
-version = "0.17.0"
+version = "0.18.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "c503dba6f79b5cd8a4be5329119892c196db013ce66fce16079a7df8ce819a3a"
+checksum = "5f14ee02352ba73cadebe640bfb33f12fe8d03cbcad816a102d55a0251fb99bb"
 dependencies = [
  "bitflags",
- "glib 0.14.8",
+ "glib 0.15.10",
  "gstreamer",
  "gstreamer-player-sys",
  "gstreamer-video",
@@ -989,40 +992,40 @@ dependencies = [
 
 [[package]]
 name = "gstreamer-player-sys"
-version = "0.17.0"
+version = "0.18.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "3e50bed2a120574750ea1370163df21b50762d0b4967f569fdc58232f4c930d5"
+checksum = "1f9b674b39a4d0e18710f6e3d2b109f1793d8028ee4e39da3909b55b4529d399"
 dependencies = [
- "glib-sys 0.14.0",
- "gobject-sys 0.14.0",
+ "glib-sys 0.15.10",
+ "gobject-sys 0.15.10",
  "gstreamer-sys",
  "gstreamer-video-sys",
  "libc",
- "system-deps 3.2.0",
+ "system-deps 6.0.2",
 ]
 
 [[package]]
 name = "gstreamer-sys"
-version = "0.17.3"
+version = "0.18.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "a81704feeb3e8599913bdd1e738455c2991a01ff4a1780cb62200993e454cc3e"
+checksum = "e3517a65d3c2e6f8905b456eba5d53bda158d664863aef960b44f651cb7d33e2"
 dependencies = [
- "glib-sys 0.14.0",
- "gobject-sys 0.14.0",
+ "glib-sys 0.15.10",
+ "gobject-sys 0.15.10",
  "libc",
- "system-deps 3.2.0",
+ "system-deps 6.0.2",
 ]
 
 [[package]]
 name = "gstreamer-video"
-version = "0.17.2"
+version = "0.18.7"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "e3447ee95c8e79daec0b163260cf6a3de9bc19ff47a01b533787f900074a3476"
+checksum = "9418adfc72dafa1ad9eb106527ce4804887d101027c4528ec28c7d29cc899519"
 dependencies = [
  "bitflags",
  "cfg-if",
  "futures-channel",
- "glib 0.14.8",
+ "glib 0.15.10",
  "gstreamer",
  "gstreamer-base",
  "gstreamer-video-sys",
@@ -1032,23 +1035,23 @@ dependencies = [
 
 [[package]]
 name = "gstreamer-video-sys"
-version = "0.17.0"
+version = "0.18.3"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "b81608f4182bdddd5bd33aaaa341d5544eda12b067a3dab75b1b7d2de01a3ba7"
+checksum = "33331b1675e73b5b000c796354278eca7fdde9327015971d9f41afe28b96e0dc"
 dependencies = [
- "glib-sys 0.14.0",
- "gobject-sys 0.14.0",
+ "glib-sys 0.15.10",
+ "gobject-sys 0.15.10",
  "gstreamer-base-sys",
  "gstreamer-sys",
  "libc",
- "system-deps 3.2.0",
+ "system-deps 6.0.2",
 ]
 
 [[package]]
 name = "gtk4"
-version = "0.3.1"
+version = "0.4.7"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "58a04f421d1485ba4739e723199f5828bca05ab4e622ed39a96a342b6b1a6a3d"
+checksum = "eb5d40303dabe4608fc260de2bd7563da6f85bc90af956323f0cd8ae0abcfe03"
 dependencies = [
  "bitflags",
  "cairo-rs",
@@ -1057,7 +1060,7 @@ dependencies = [
  "gdk-pixbuf",
  "gdk4",
  "gio",
- "glib 0.14.8",
+ "glib 0.15.10",
  "graphene-rs",
  "gsk4",
  "gtk4-macros",
@@ -1069,44 +1072,43 @@ dependencies = [
 
 [[package]]
 name = "gtk4-macros"
-version = "0.3.1"
+version = "0.4.7"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "5068d4354af02454f44687adc613100aa98ae11e273cdcac84f89dc08be2b4a1"
+checksum = "7f3c4aa605fb3d78205c7aef0eeaa6db61d8cc4dd05a465dc6ffdfdaee84f825"
 dependencies = [
  "anyhow",
- "heck",
- "itertools 0.10.3",
- "proc-macro-crate 1.1.0",
+ "proc-macro-crate 1.1.3",
  "proc-macro-error",
  "proc-macro2",
+ "quick-xml",
  "quote",
  "syn",
 ]
 
 [[package]]
 name = "gtk4-sys"
-version = "0.3.1"
+version = "0.4.5"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "e20a64c8f0ddcff8902ff04c130747f2fb7834a43530f75d03d6c71335733b49"
+checksum = "c47c075e8f795c38f6e9a47b51a73eab77b325f83c0154979ed4d4245c36490d"
 dependencies = [
  "cairo-sys-rs",
  "gdk-pixbuf-sys",
  "gdk4-sys",
  "gio-sys",
- "glib-sys 0.14.0",
- "gobject-sys 0.14.0",
+ "glib-sys 0.15.10",
+ "gobject-sys 0.15.10",
  "graphene-sys",
  "gsk4-sys",
  "libc",
  "pango-sys",
- "system-deps 5.0.0",
+ "system-deps 6.0.2",
 ]
 
 [[package]]
 name = "h2"
-version = "0.3.9"
+version = "0.3.13"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "8f072413d126e57991455e0a922b31e4c8ba7c2ffbebf6b78b4f8521397d65cd"
+checksum = "37a82c6d637fc9515a4694bbf1cb2457b79d81ce52b3108bdeea58b07dd34a57"
 dependencies = [
  "bytes",
  "fnv",
@@ -1136,6 +1138,12 @@ dependencies = [
  "unicode-segmentation",
 ]
 
+[[package]]
+name = "heck"
+version = "0.4.0"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "2540771e65fc8cb83cd6e8a237f70c319bd5c29f78ed1084ba5d50eeac86f7f9"
+
 [[package]]
 name = "hermit-abi"
 version = "0.1.19"
@@ -1158,9 +1166,9 @@ dependencies = [
 
 [[package]]
 name = "html5ever"
-version = "0.25.1"
+version = "0.25.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "aafcf38a1a36118242d29b92e1b08ef84e67e4a5ed06e0a80be20e6a32bfed6b"
+checksum = "e5c13fb08e5d4dfc151ee5e88bae63f7773d61852f3bdc73c9f4b9e1bde03148"
 dependencies = [
  "log",
  "mac",
@@ -1178,7 +1186,7 @@ checksum = "31f4c6746584866f0feabcc69893c5b51beef3831656a968ed7ae254cdc4fd03"
 dependencies = [
  "bytes",
  "fnv",
- "itoa 1.0.1",
+ "itoa",
 ]
 
 [[package]]
@@ -1194,9 +1202,9 @@ dependencies = [
 
 [[package]]
 name = "httparse"
-version = "1.5.1"
+version = "1.6.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "acd94fdbe1d4ff688b67b04eee2e17bd50995534a61539e45adfefb45e5e5503"
+checksum = "9100414882e15fb7feccb4897e5f0ff0ff1ca7d1a86a23208ada4d7a18e6c6c4"
 
 [[package]]
 name = "httpdate"
@@ -1221,9 +1229,9 @@ dependencies = [
 
 [[package]]
 name = "hyper"
-version = "0.14.16"
+version = "0.14.18"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "b7ec3e62bdc98a2f0393a5048e4c30ef659440ea6e0e572965103e72bd836f55"
+checksum = "b26ae0a80afebe130861d90abf98e3814a4f28a4c6ffeb5ab8ebb2be311e0ef2"
 dependencies = [
  "bytes",
  "futures-channel",
@@ -1234,7 +1242,7 @@ dependencies = [
  "http-body",
  "httparse",
  "httpdate",
- "itoa 0.4.8",
+ "itoa",
  "pin-project-lite",
  "socket2",
  "tokio",
@@ -1275,9 +1283,9 @@ dependencies = [
 
 [[package]]
 name = "indexmap"
-version = "1.7.0"
+version = "1.8.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "bc633605454125dec4b66843673f01c7df2b89479b32e0ed634e43a91cff62a5"
+checksum = "0f647032dfaa1f8b6dc29bd3edb7bbef4861b8b8007ebb118d6db284fd59f6ee"
 dependencies = [
  "autocfg",
  "hashbrown",
@@ -1294,9 +1302,9 @@ dependencies = [
 
 [[package]]
 name = "ipnet"
-version = "2.3.1"
+version = "2.4.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "68f2d64f2edebec4ce84ad108148e67e1064789bee435edc5b60ad398714a3a9"
+checksum = "35e70ee094dc02fd9c13fdad4940090f22dbd6ac7c9e7094a46cf0232a50bc7c"
 
 [[package]]
 name = "itertools"
@@ -1307,21 +1315,6 @@ dependencies = [
  "either",
 ]
 
-[[package]]
-name = "itertools"
-version = "0.10.3"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "a9a9d19fa1e79b6215ff29b9d6880b706147f16e9b1dbb1e4e5947b5b02bc5e3"
-dependencies = [
- "either",
-]
-
-[[package]]
-name = "itoa"
-version = "0.4.8"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "b71991ff56294aa922b450139ee08b3bfc70982c6b2c7562771375cf73542dd4"
-
 [[package]]
 name = "itoa"
 version = "1.0.1"
@@ -1330,9 +1323,9 @@ checksum = "1aab8fc367588b89dcee83ab0fd66b72b50b72fa1904d7095045ace2b0c81c35"
 
 [[package]]
 name = "js-sys"
-version = "0.3.55"
+version = "0.3.56"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "7cc9ffccd38c451a86bf13657df244e9c3f37493cce8e5e21e940963777acc84"
+checksum = "a38fc24e30fd564ce974c02bf1d337caddff65be6cc4735a1f7eab22a7440f04"
 dependencies = [
  "wasm-bindgen",
 ]
@@ -1345,14 +1338,14 @@ checksum = "e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646"
 
 [[package]]
 name = "libadwaita"
-version = "0.1.0-beta-1"
+version = "0.1.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "cef1e2d4b5490caff8a1d44648f68721ab917f765a7fa1d0226fcdac42d86552"
+checksum = "f2ae453d28e3b91f03749f02b1531e8cfe315a1d0762b77a61797d2ab80bb87d"
 dependencies = [
  "gdk-pixbuf",
  "gdk4",
  "gio",
- "glib 0.14.8",
+ "glib 0.15.10",
  "gtk4",
  "libadwaita-sys",
  "libc",
@@ -1362,24 +1355,24 @@ dependencies = [
 
 [[package]]
 name = "libadwaita-sys"
-version = "0.1.0-beta-1"
+version = "0.1.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "7a165d8c96824753ec072b70a9149790efa3d5abb07e130cda7eb04ef2006d4c"
+checksum = "f18b6ac4cadd252a89f5cba0a5a4e99836131795d6fad37b859ac79e8cb7d2c8"
 dependencies = [
  "gdk4-sys",
  "gio-sys",
- "glib-sys 0.14.0",
- "gobject-sys 0.14.0",
+ "glib-sys 0.15.10",
+ "gobject-sys 0.15.10",
  "gtk4-sys",
  "libc",
- "system-deps 3.2.0",
+ "system-deps 6.0.2",
 ]
 
 [[package]]
 name = "libc"
-version = "0.2.112"
+version = "0.2.122"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "1b03d17f364a3a042d5e5d46b053bbbf82c92c9430c592dd4c064dc6ee997125"
+checksum = "ec647867e2bf0772e28c8bcde4f0d19a9216916e890543b5a03ed8ef27b8f259"
 
 [[package]]
 name = "libdbus-sys"
@@ -1413,18 +1406,19 @@ dependencies = [
 
 [[package]]
 name = "lock_api"
-version = "0.4.5"
+version = "0.4.7"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "712a4d093c9976e24e7dbca41db895dabcbac38eb5f4045393d17a95bdfb1109"
+checksum = "327fa5b6a6940e4699ec49a9beae1ea4845c6bab9314e4f84ac68742139d8c53"
 dependencies = [
+ "autocfg",
  "scopeguard",
 ]
 
 [[package]]
 name = "log"
-version = "0.4.14"
+version = "0.4.16"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "51b9bbe6c47d51fc3e1a9b945965946b4c44142ab8792c50835a980d362c2710"
+checksum = "6389c490849ff5bc16be905ae24bc913a9c8892e19b2341dbc175e14c341c2b8"
 dependencies = [
  "cfg-if",
 ]
@@ -1517,9 +1511,9 @@ checksum = "2a60c7ce501c71e03a9c9c0d35b861413ae925bd979cc7a4e30d060069aaac8d"
 
 [[package]]
 name = "mime_guess"
-version = "2.0.3"
+version = "2.0.4"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "2684d4c2e97d99848d30b324b00c8fcc7e5c897b7cbb5819b09e7c90e8baf212"
+checksum = "4192263c238a5f0d0c6bfd21f336a313a4ce1c450542449ca191bb657b4642ef"
 dependencies = [
  "mime",
  "unicase",
@@ -1527,14 +1521,15 @@ dependencies = [
 
 [[package]]
 name = "mio"
-version = "0.7.14"
+version = "0.8.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "8067b404fe97c70829f082dec8bcf4f71225d7eaea1d8645349cb76fa06205cc"
+checksum = "52da4364ffb0e4fe33a9841a98a3f3014fb964045ce4f7a45a398243c8d6b0c9"
 dependencies = [
  "libc",
  "log",
  "miow",
  "ntapi",
+ "wasi 0.11.0+wasi-snapshot-preview1",
  "winapi",
 ]
 
@@ -1565,9 +1560,9 @@ checksum = "b5136edda114182728ccdedb9f5eda882781f35fa6e80cc360af12a8932507f3"
 
 [[package]]
 name = "native-tls"
-version = "0.2.8"
+version = "0.2.10"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "48ba9f7719b5a0f42f338907614285fb5fd70e53858141f69898a1fb7203b24d"
+checksum = "fd7e2f3618557f980e0b17e8856252eee3c97fa12c54dff0ca290fb6266ca4a9"
 dependencies = [
  "lazy_static",
  "libc",
@@ -1595,9 +1590,9 @@ checksum = "e4a24736216ec316047a1fc4252e27dabb04218aa4a3f37c6e7ddbf1f9782b54"
 
 [[package]]
 name = "ntapi"
-version = "0.3.6"
+version = "0.3.7"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "3f6bb902e437b6d86e03cce10a7e2af662292c5dfef23b65899ea3ac9354ad44"
+checksum = "c28774a7fd2fbb4f0babd8237ce554b73af68021b5f695a3cebd6c59bac0980f"
 dependencies = [
  "winapi",
 ]
@@ -1644,15 +1639,15 @@ dependencies = [
 
 [[package]]
 name = "once_cell"
-version = "1.9.0"
+version = "1.10.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "da32515d9f6e6e489d7bc9d84c71b060db7247dc035bbe44eac88cf87486d8d5"
+checksum = "87f3e037eac156d1775da914196f0f37741a274155e34a0b7e427c35d2a2ecb9"
 
 [[package]]
 name = "open"
-version = "2.0.2"
+version = "2.1.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "176ee4b630d174d2da8241336763bb459281dddc0f4d87f72c3b1efc9a6109b7"
+checksum = "9213e7b66aa06a7722828ee2980c1adff22a3922b582baaa1e62e30ca2a6c018"
 dependencies = [
  "pathdiff",
  "winapi",
@@ -1674,9 +1669,9 @@ dependencies = [
 
 [[package]]
 name = "openssl-probe"
-version = "0.1.4"
+version = "0.1.5"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "28988d872ab76095a6e6ac88d99b54fd267702734fd7ffe610ca27f533ddb95a"
+checksum = "ff011a302c396a5197692431fc1948019154afc178baf7d8e37367442a4601cf"
 
 [[package]]
 name = "openssl-sys"
@@ -1691,23 +1686,32 @@ dependencies = [
  "vcpkg",
 ]
 
+[[package]]
+name = "option-operations"
+version = "0.4.0"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "95d6113415f41b268f1195907427519769e40ee6f28cbb053795098a2c16f447"
+dependencies = [
+ "paste",
+]
+
 [[package]]
 name = "output_vt100"
-version = "0.1.2"
+version = "0.1.3"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "53cdc5b785b7a58c5aad8216b3dfa114df64b0b06ae6e1501cef91df2fbdf8f9"
+checksum = "628223faebab4e3e40667ee0b2336d34a5b960ff60ea743ddfdbcf7770bcfb66"
 dependencies = [
  "winapi",
 ]
 
 [[package]]
 name = "pango"
-version = "0.14.8"
+version = "0.15.10"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "546fd59801e5ca735af82839007edd226fe7d3bb06433ec48072be4439c28581"
+checksum = "22e4045548659aee5313bde6c582b0d83a627b7904dd20dc2d9ef0895d414e4f"
 dependencies = [
  "bitflags",
- "glib 0.14.8",
+ "glib 0.15.10",
  "libc",
  "once_cell",
  "pango-sys",
@@ -1715,14 +1719,14 @@ dependencies = [
 
 [[package]]
 name = "pango-sys"
-version = "0.14.0"
+version = "0.15.10"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "2367099ca5e761546ba1d501955079f097caa186bb53ce0f718dca99ac1942fe"
+checksum = "d2a00081cde4661982ed91d80ef437c20eacaf6aa1a5962c0279ae194662c3aa"
 dependencies = [
- "glib-sys 0.14.0",
- "gobject-sys 0.14.0",
+ "glib-sys 0.15.10",
+ "gobject-sys 0.15.10",
  "libc",
- "system-deps 3.2.0",
+ "system-deps 6.0.2",
 ]
 
 [[package]]
@@ -1733,7 +1737,17 @@ checksum = "7d17b78036a60663b797adeaee46f5c9dfebb86948d1255007a1d6be0271ff99"
 dependencies = [
  "instant",
  "lock_api",
- "parking_lot_core",
+ "parking_lot_core 0.8.5",
+]
+
+[[package]]
+name = "parking_lot"
+version = "0.12.0"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "87f5ec2493a61ac0506c0f4199f99070cbe83857b0337006a30f3e6719b8ef58"
+dependencies = [
+ "lock_api",
+ "parking_lot_core 0.9.2",
 ]
 
 [[package]]
@@ -1750,11 +1764,24 @@ dependencies = [
  "winapi",
 ]
 
+[[package]]
+name = "parking_lot_core"
+version = "0.9.2"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "995f667a6c822200b0433ac218e05582f0e2efa1b922a3fd2fbaadc5f87bab37"
+dependencies = [
+ "cfg-if",
+ "libc",
+ "redox_syscall",
+ "smallvec",
+ "windows-sys",
+]
+
 [[package]]
 name = "paste"
-version = "1.0.6"
+version = "1.0.7"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "0744126afe1a6dd7f394cb50a716dbe086cb06e255e53d8d0185d82828358fb5"
+checksum = "0c520e05135d6e763148b6426a837e239041653ba7becd2e538c076c738025fc"
 
 [[package]]
 name = "pathdiff"
@@ -1783,7 +1810,7 @@ version = "0.8.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "3dfb61232e34fcb633f43d12c58f83c1df82962dcdfa565a4e866ffc17dafe12"
 dependencies = [
- "phf_shared",
+ "phf_shared 0.8.0",
 ]
 
 [[package]]
@@ -1792,8 +1819,8 @@ version = "0.8.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "cbffee61585b0411840d3ece935cce9cb6321f01c45477d30066498cd5e1a815"
 dependencies = [
- "phf_generator",
- "phf_shared",
+ "phf_generator 0.8.0",
+ "phf_shared 0.8.0",
 ]
 
 [[package]]
@@ -1802,10 +1829,20 @@ version = "0.8.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "17367f0cc86f2d25802b2c26ee58a7b23faeccf78a396094c13dced0d0182526"
 dependencies = [
- "phf_shared",
+ "phf_shared 0.8.0",
  "rand 0.7.3",
 ]
 
+[[package]]
+name = "phf_generator"
+version = "0.10.0"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "5d5285893bb5eb82e6aaf5d59ee909a06a16737a8970984dd7746ba9283498d6"
+dependencies = [
+ "phf_shared 0.10.0",
+ "rand 0.8.5",
+]
+
 [[package]]
 name = "phf_shared"
 version = "0.8.0"
@@ -1815,6 +1852,15 @@ dependencies = [
  "siphasher",
 ]
 
+[[package]]
+name = "phf_shared"
+version = "0.10.0"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "b6796ad771acdc0123d2a88dc428b5e38ef24456743ddb1744ed628f9815c096"
+dependencies = [
+ "siphasher",
+]
+
 [[package]]
 name = "pin-project-lite"
 version = "0.2.8"
@@ -1829,9 +1875,9 @@ checksum = "8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184"
 
 [[package]]
 name = "pkg-config"
-version = "0.3.24"
+version = "0.3.25"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "58893f751c9b0412871a09abd62ecd2a00298c6c83befa223ef98c52aef40cbe"
+checksum = "1df8c4ec4b0627e53bdf214615ad287367e482558cf84b109250b37464dc03ae"
 
 [[package]]
 name = "podcasts-data"
@@ -1857,7 +1903,7 @@ dependencies = [
  "native-tls",
  "num_cpus",
  "pretty_assertions",
- "rand 0.8.4",
+ "rand 0.8.5",
  "rayon",
  "reqwest",
  "rfc822_sanitizer",
@@ -1880,7 +1926,7 @@ dependencies = [
  "fragile",
  "gettext-rs",
  "gio",
- "glib 0.14.8",
+ "glib 0.15.10",
  "gstreamer",
  "gstreamer-player",
  "gtk4",
@@ -1925,9 +1971,9 @@ checksum = "bc5c99d529f0d30937f6f4b8a86d988047327bb88d04d2c4afc356de74722131"
 
 [[package]]
 name = "pretty_assertions"
-version = "1.0.0"
+version = "1.2.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "ec0cfe1b2403f172ba0f234e500906ee0a3e493fb81092dac23ebefe129301cc"
+checksum = "c89f989ac94207d048d92db058e4f6ec7342b0971fc58d1271ca148b799b3563"
 dependencies = [
  "ansi_term",
  "ctor",
@@ -1956,9 +2002,9 @@ dependencies = [
 
 [[package]]
 name = "proc-macro-crate"
-version = "1.1.0"
+version = "1.1.3"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "1ebace6889caf889b4d3f76becee12e90353f2b8c7d875534a71e5742f8f6f83"
+checksum = "e17d47ce914bf4de440332250b0edd23ce48c005f59fab39d3335866b114f11a"
 dependencies = [
  "thiserror",
  "toml",
@@ -1990,9 +2036,9 @@ dependencies = [
 
 [[package]]
 name = "proc-macro2"
-version = "1.0.36"
+version = "1.0.37"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "c7342d5883fbccae1cc37a2353b09c87c9b0f3afd73f5fb9bba687a1f733b029"
+checksum = "ec757218438d5fda206afc041538b2f6d889286160d649a86a24d37e1235afd1"
 dependencies = [
  "unicode-xid",
 ]
@@ -2015,9 +2061,9 @@ dependencies = [
 
 [[package]]
 name = "quote"
-version = "1.0.14"
+version = "1.0.17"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "47aa80447ce4daf1717500037052af176af5d38cc3e571d9ec1c7353fc10c87d"
+checksum = "632d02bff7f874a36f33ea8bb416cd484b90cc66c1194b1a1110d067a7013f58"
 dependencies = [
  "proc-macro2",
 ]
@@ -2029,7 +2075,7 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "545c5bc2b880973c9c10e4067418407a0ccaa3091781d1671d46eb35107cb26f"
 dependencies = [
  "log",
- "parking_lot",
+ "parking_lot 0.11.2",
  "scheduled-thread-pool",
 ]
 
@@ -2056,20 +2102,19 @@ dependencies = [
  "libc",
  "rand_chacha 0.2.2",
  "rand_core 0.5.1",
- "rand_hc 0.2.0",
+ "rand_hc",
  "rand_pcg",
 ]
 
 [[package]]
 name = "rand"
-version = "0.8.4"
+version = "0.8.5"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "2e7573632e6454cf6b99d7aac4ccca54be06da05aca2ef7423d22d27d4d4bcd8"
+checksum = "34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404"
 dependencies = [
  "libc",
  "rand_chacha 0.3.1",
  "rand_core 0.6.3",
- "rand_hc 0.3.1",
 ]
 
 [[package]]
@@ -2122,7 +2167,7 @@ version = "0.6.3"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "d34f1408f55294453790c48b2f1ebbb1c5b4b7563eb1f418bcfcfdbb06ebb4e7"
 dependencies = [
- "getrandom 0.2.3",
+ "getrandom 0.2.6",
 ]
 
 [[package]]
@@ -2134,15 +2179,6 @@ dependencies = [
  "rand_core 0.5.1",
 ]
 
-[[package]]
-name = "rand_hc"
-version = "0.3.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "d51e9f596de227fda2ea6c84607f5558e196eeaf43c986b724ba4fb8fdf497e7"
-dependencies = [
- "rand_core 0.6.3",
-]
-
 [[package]]
 name = "rand_pcg"
 version = "0.2.1"
@@ -2188,28 +2224,29 @@ dependencies = [
 
 [[package]]
 name = "redox_syscall"
-version = "0.2.10"
+version = "0.2.13"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "8383f39639269cde97d255a32bdb68c047337295414940c68bdd30c2e13203ff"
+checksum = "62f25bc4c7e55e0b0b7a1d43fb893f4fa1361d0abe38b9ce4f323c2adfe6ef42"
 dependencies = [
  "bitflags",
 ]
 
 [[package]]
 name = "redox_users"
-version = "0.4.0"
+version = "0.4.3"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "528532f3d801c87aec9def2add9ca802fe569e44a544afe633765267840abe64"
+checksum = "b033d837a7cf162d7993aded9304e30a83213c648b6e389db233191f891e5c2b"
 dependencies = [
- "getrandom 0.2.3",
+ "getrandom 0.2.6",
  "redox_syscall",
+ "thiserror",
 ]
 
 [[package]]
 name = "regex"
-version = "1.5.4"
+version = "1.5.5"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "d07a8629359eb56f1e2fb1652bb04212c072a87ba68546a04065d525673ac461"
+checksum = "1a11647b6b25ff05a515cb92c365cec08801e83423a235b51e231e1808747286"
 dependencies = [
  "aho-corasick",
  "memchr",
@@ -2233,15 +2270,16 @@ dependencies = [
 
 [[package]]
 name = "reqwest"
-version = "0.11.8"
+version = "0.11.10"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "7c4e0a76dc12a116108933f6301b95e83634e0c47b0afbed6abbaa0601e99258"
+checksum = "46a1f7aa4f35e5e8b4160449f51afc758f0ce6454315a9fa7d0d113e958c41eb"
 dependencies = [
  "base64",
  "bytes",
  "encoding_rs",
  "futures-core",
  "futures-util",
+ "h2",
  "http",
  "http-body",
  "hyper",
@@ -2268,9 +2306,9 @@ dependencies = [
 
 [[package]]
 name = "rfc822_sanitizer"
-version = "0.3.4"
+version = "0.3.6"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "3ae57cb2820842d1ba94ba719453fffc6f8ab953059e133a04e2bf4016b3c4f9"
+checksum = "d95e6ac0e635800681025bddc2fa6747cf1159bb897223a74e481ec54b4f5d44"
 dependencies = [
  "chrono",
  "lazy_static",
@@ -2320,7 +2358,7 @@ version = "0.2.5"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "dc6f74fd1204073fa02d5d5d68bec8021be4c38690b61264b2fdb48083d0e7d7"
 dependencies = [
- "parking_lot",
+ "parking_lot 0.11.2",
 ]
 
 [[package]]
@@ -2331,9 +2369,9 @@ checksum = "d29ab0c6d3fc0ee92fe66e2d99f700eab17a8d57d1c1d3b748380fb20baa78cd"
 
 [[package]]
 name = "security-framework"
-version = "2.4.2"
+version = "2.6.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "525bc1abfda2e1998d152c45cf13e696f76d0a4972310b22fac1658b05df7c87"
+checksum = "2dc14f172faf8a0194a3aded622712b0de276821addc574fa54fc0a1167e10dc"
 dependencies = [
  "bitflags",
  "core-foundation",
@@ -2344,9 +2382,9 @@ dependencies = [
 
 [[package]]
 name = "security-framework-sys"
-version = "2.4.2"
+version = "2.6.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "a9dd14d83160b528b7bfd66439110573efcfbe281b17fc2ca9f39f550d619c7e"
+checksum = "0160a13a177a45bfb43ce71c01580998474f556ad854dcbca936dd2841a5c556"
 dependencies = [
  "core-foundation-sys",
  "libc",
@@ -2372,56 +2410,56 @@ dependencies = [
 
 [[package]]
 name = "serde"
-version = "1.0.133"
+version = "1.0.136"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "97565067517b60e2d1ea8b268e59ce036de907ac523ad83a0475da04e818989a"
+checksum = "ce31e24b01e1e524df96f1c2fdd054405f8d7376249a5110886fb4b658484789"
 
 [[package]]
 name = "serde_json"
-version = "1.0.74"
+version = "1.0.79"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "ee2bb9cd061c5865d345bb02ca49fcef1391741b672b54a0bf7b679badec3142"
+checksum = "8e8d9fa5c3b304765ce1fd9c4c8a3de2c8db365a5b91be52f186efc675681d95"
 dependencies = [
- "itoa 1.0.1",
+ "itoa",
  "ryu",
  "serde",
 ]
 
 [[package]]
 name = "serde_urlencoded"
-version = "0.7.0"
+version = "0.7.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "edfa57a7f8d9c1d260a549e7224100f6c43d43f9103e06dd8b4095a9b2b43ce9"
+checksum = "d3491c14715ca2294c4d6a88f15e84739788c1d030eed8c110436aafdaa2f3fd"
 dependencies = [
  "form_urlencoded",
- "itoa 0.4.8",
+ "itoa",
  "ryu",
  "serde",
 ]
 
 [[package]]
 name = "siphasher"
-version = "0.3.7"
+version = "0.3.10"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "533494a8f9b724d33625ab53c6c4800f7cc445895924a8ef649222dcb76e938b"
+checksum = "7bd3e3206899af3f8b12af284fafc038cc1dc2b41d1b89dd17297221c5d225de"
 
 [[package]]
 name = "slab"
-version = "0.4.5"
+version = "0.4.6"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "9def91fd1e018fe007022791f865d0ccc9b3a0d5001e01aabb8b40e46000afb5"
+checksum = "eb703cfe953bccee95685111adeedb76fabe4e97549a58d16f03ea7b9367bb32"
 
 [[package]]
 name = "smallvec"
-version = "1.7.0"
+version = "1.8.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "1ecab6c735a6bb4139c0caafd0cc3635748bbb3acf4550e8138122099251f309"
+checksum = "f2dd574626839106c320a323308629dcb1acfc96e32a8cba364ddc61ac23ee83"
 
 [[package]]
 name = "socket2"
-version = "0.4.2"
+version = "0.4.4"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "5dc90fe6c7be1a323296982db1836d1ea9e47b6839496dde9a541bc496df3516"
+checksum = "66d72b759436ae32898a2af0a14218dbf55efde3feeb170eb623637db85ee1e0"
 dependencies = [
  "libc",
  "winapi",
@@ -2429,26 +2467,26 @@ dependencies = [
 
 [[package]]
 name = "string_cache"
-version = "0.8.2"
+version = "0.8.4"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "923f0f39b6267d37d23ce71ae7235602134b250ace715dd2c90421998ddac0c6"
+checksum = "213494b7a2b503146286049378ce02b482200519accc31872ee8be91fa820a08"
 dependencies = [
- "lazy_static",
  "new_debug_unreachable",
- "parking_lot",
- "phf_shared",
+ "once_cell",
+ "parking_lot 0.12.0",
+ "phf_shared 0.10.0",
  "precomputed-hash",
  "serde",
 ]
 
 [[package]]
 name = "string_cache_codegen"
-version = "0.5.1"
+version = "0.5.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "f24c8e5e19d22a726626f1a5e16fe15b132dcf21d10177fa5a45ce7962996b97"
+checksum = "6bb30289b722be4ff74a408c3cc27edeaad656e06cb1fe8fa9231fa59c728988"
 dependencies = [
- "phf_generator",
- "phf_shared",
+ "phf_generator 0.10.0",
+ "phf_shared 0.10.0",
  "proc-macro2",
  "quote",
 ]
@@ -2471,31 +2509,13 @@ version = "0.18.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "57bd81eb48f4c437cadc685403cad539345bf703d78e63707418431cecd4522b"
 
-[[package]]
-name = "strum"
-version = "0.21.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "aaf86bbcfd1fa9670b7a129f64fc0c9fcbbfe4f1bc4210e9e98fe71ffc12cde2"
-
 [[package]]
 name = "strum_macros"
 version = "0.18.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "87c85aa3f8ea653bfd3ddf25f7ee357ee4d204731f6aa9ad04002306f6e2774c"
 dependencies = [
- "heck",
- "proc-macro2",
- "quote",
- "syn",
-]
-
-[[package]]
-name = "strum_macros"
-version = "0.21.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "d06aaeeee809dbc59eb4556183dd927df67db1540de5be8d3ec0b6636358a5ec"
-dependencies = [
- "heck",
+ "heck 0.3.3",
  "proc-macro2",
  "quote",
  "syn",
@@ -2503,9 +2523,9 @@ dependencies = [
 
 [[package]]
 name = "syn"
-version = "1.0.84"
+version = "1.0.91"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "ecb2e6da8ee5eb9a61068762a32fa9619cc591ceb055b3687f4cd4051ec2e06b"
+checksum = "b683b2b825c8eef438b77c36a06dc262294da3d5a5813fac20da149241dcd44d"
 dependencies = [
  "proc-macro2",
  "quote",
@@ -2518,10 +2538,10 @@ version = "1.3.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "0f3ecc17269a19353b3558b313bba738b25d82993e30d62a18406a24aba4649b"
 dependencies = [
- "heck",
+ "heck 0.3.3",
  "pkg-config",
- "strum 0.18.0",
- "strum_macros 0.18.0",
+ "strum",
+ "strum_macros",
  "thiserror",
  "toml",
  "version-compare 0.0.10",
@@ -2529,33 +2549,15 @@ dependencies = [
 
 [[package]]
 name = "system-deps"
-version = "3.2.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "480c269f870722b3b08d2f13053ce0c2ab722839f472863c3e2d61ff3a1c2fa6"
-dependencies = [
- "anyhow",
- "cfg-expr 0.8.1",
- "heck",
- "itertools 0.10.3",
- "pkg-config",
- "strum 0.21.0",
- "strum_macros 0.21.1",
- "thiserror",
- "toml",
- "version-compare 0.0.11",
-]
-
-[[package]]
-name = "system-deps"
-version = "5.0.0"
+version = "6.0.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "18db855554db7bd0e73e06cf7ba3df39f97812cb11d3f75e71c39bf45171797e"
+checksum = "a1a45a1c4c9015217e12347f2a411b57ce2c4fc543913b14b6fe40483328e709"
 dependencies = [
- "cfg-expr 0.9.0",
- "heck",
+ "cfg-expr",
+ "heck 0.4.0",
  "pkg-config",
  "toml",
- "version-compare 0.0.11",
+ "version-compare 0.1.0",
 ]
 
 [[package]]
@@ -2570,13 +2572,13 @@ dependencies = [
 
 [[package]]
 name = "tempfile"
-version = "3.2.0"
+version = "3.3.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "dac1c663cfc93810f88aed9b8941d48cabf856a1b111c29a40439018d870eb22"
+checksum = "5cdb1ef4eaeeaddc8fbd371e5017057064af0911902ef36b39801f67cc6d79e4"
 dependencies = [
  "cfg-if",
+ "fastrand",
  "libc",
- "rand 0.8.4",
  "redox_syscall",
  "remove_dir_all",
  "winapi",
@@ -2584,9 +2586,9 @@ dependencies = [
 
 [[package]]
 name = "tendril"
-version = "0.4.2"
+version = "0.4.3"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "a9ef557cb397a4f0a5a3a628f06515f78563f2209e64d47055d9dc6052bf5e33"
+checksum = "d24a120c5fc464a3458240ee02c299ebcb9d67b5249c8848b09d639dca8d7bb0"
 dependencies = [
  "futf",
  "mac",
@@ -2595,9 +2597,9 @@ dependencies = [
 
 [[package]]
 name = "termcolor"
-version = "1.1.2"
+version = "1.1.3"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "2dfed899f0eb03f32ee8c6a0aabdb8a7949659e3466561fc0adf54e26d88c5f4"
+checksum = "bab24d30b911b2376f3a13cc2cd443142f0c81dda04c118693e35b3835757755"
 dependencies = [
  "winapi-util",
 ]
@@ -2624,11 +2626,12 @@ dependencies = [
 
 [[package]]
 name = "time"
-version = "0.1.43"
+version = "0.1.44"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "ca8a50ef2360fbd1eeb0ecd46795a87a19024eb4b53c5dc916ca1fd95fe62438"
+checksum = "6db9e6914ab8b1ae1c260a4ae7a49b6c5611b40328a735b21862567685e73255"
 dependencies = [
  "libc",
+ "wasi 0.10.0+wasi-snapshot-preview1",
  "winapi",
 ]
 
@@ -2649,9 +2652,9 @@ checksum = "cda74da7e1a664f795bb1f8a87ec406fb89a02522cf6e50620d016add6dbbf5c"
 
 [[package]]
 name = "tokio"
-version = "1.15.0"
+version = "1.17.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "fbbf1c778ec206785635ce8ad57fe52b3009ae9e0c9f574a728f3049d3e55838"
+checksum = "2af73ac49756f3f7c01172e34a23e5d0216f6c32333757c2c61feb2bbff5a5ee"
 dependencies = [
  "bytes",
  "libc",
@@ -2659,6 +2662,7 @@ dependencies = [
  "mio",
  "num_cpus",
  "pin-project-lite",
+ "socket2",
  "tokio-macros",
  "winapi",
 ]
@@ -2686,16 +2690,16 @@ dependencies = [
 
 [[package]]
 name = "tokio-util"
-version = "0.6.9"
+version = "0.7.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "9e99e1983e5d376cd8eb4b66604d2e99e79f5bd988c3055891dcd8c9e2604cc0"
+checksum = "0edfdeb067411dba2044da6d1cb2df793dd35add7888d73c16e3381ded401764"
 dependencies = [
  "bytes",
  "futures-core",
  "futures-sink",
- "log",
  "pin-project-lite",
  "tokio",
+ "tracing",
 ]
 
 [[package]]
@@ -2715,20 +2719,32 @@ checksum = "360dfd1d6d30e05fda32ace2c8c70e9c0a9da713275777f5a4dbb8a1893930c6"
 
 [[package]]
 name = "tracing"
-version = "0.1.29"
+version = "0.1.32"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "375a639232caf30edfc78e8d89b2d4c375515393e7af7e16f01cd96917fb2105"
+checksum = "4a1bdf54a7c28a2bbf701e1d2233f6c77f473486b94bee4f9678da5a148dca7f"
 dependencies = [
  "cfg-if",
  "pin-project-lite",
+ "tracing-attributes",
  "tracing-core",
 ]
 
+[[package]]
+name = "tracing-attributes"
+version = "0.1.20"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "2e65ce065b4b5c53e73bb28912318cb8c9e9ad3921f1d669eb0e68b4c8143a2b"
+dependencies = [
+ "proc-macro2",
+ "quote",
+ "syn",
+]
+
 [[package]]
 name = "tracing-core"
-version = "0.1.21"
+version = "0.1.24"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "1f4ed65637b8390770814083d20756f87bfa2c21bf2f110babdc5438351746e4"
+checksum = "90442985ee2f57c9e1b548ee72ae842f4a9a20e3f417cc38dbc5dc684d9bb4ee"
 dependencies = [
  "lazy_static",
 ]
@@ -2771,9 +2787,9 @@ dependencies = [
 
 [[package]]
 name = "unicode-segmentation"
-version = "1.8.0"
+version = "1.9.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "8895849a949e7845e06bd6dc1aa51731a103c42707010a5b591c0038fb73385b"
+checksum = "7e8820f5d777f6224dc4be3632222971ac30164d4a258d595640799554ebfd99"
 
 [[package]]
 name = "unicode-width"
@@ -2819,9 +2835,9 @@ checksum = "d63556a25bae6ea31b52e640d7c41d1ab27faba4ccb600013837a3d0b3994ca1"
 
 [[package]]
 name = "version-compare"
-version = "0.0.11"
+version = "0.1.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "1c18c859eead79d8b95d09e4678566e8d70105c4e7b251f707a03df32442661b"
+checksum = "fe88247b92c1df6b6de80ddc290f3976dbdf2f5f5d3fd049a9fb598c6dd5ca73"
 
 [[package]]
 name = "version_check"
@@ -2847,15 +2863,21 @@ checksum = "cccddf32554fecc6acb585f82a32a72e28b48f8c4c1883ddfeeeaa96f7d8e519"
 
 [[package]]
 name = "wasi"
-version = "0.10.2+wasi-snapshot-preview1"
+version = "0.10.0+wasi-snapshot-preview1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "fd6fbd9a79829dd1ad0cc20627bf1ed606756a7f77edff7b66b7064f9cb327c6"
+checksum = "1a143597ca7c7793eff794def352d41792a93c481eb1042423ff7ff72ba2c31f"
+
+[[package]]
+name = "wasi"
+version = "0.11.0+wasi-snapshot-preview1"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423"
 
 [[package]]
 name = "wasm-bindgen"
-version = "0.2.78"
+version = "0.2.79"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "632f73e236b219150ea279196e54e610f5dbafa5d61786303d4da54f84e47fce"
+checksum = "25f1af7423d8588a3d840681122e72e6a24ddbcb3f0ec385cac0d12d24256c06"
 dependencies = [
  "cfg-if",
  "wasm-bindgen-macro",
@@ -2863,9 +2885,9 @@ dependencies = [
 
 [[package]]
 name = "wasm-bindgen-backend"
-version = "0.2.78"
+version = "0.2.79"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "a317bf8f9fba2476b4b2c85ef4c4af8ff39c3c7f0cdfeed4f82c34a880aa837b"
+checksum = "8b21c0df030f5a177f3cba22e9bc4322695ec43e7257d865302900290bcdedca"
 dependencies = [
  "bumpalo",
  "lazy_static",
@@ -2878,9 +2900,9 @@ dependencies = [
 
 [[package]]
 name = "wasm-bindgen-futures"
-version = "0.4.28"
+version = "0.4.29"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "8e8d7523cb1f2a4c96c1317ca690031b714a51cc14e05f712446691f413f5d39"
+checksum = "2eb6ec270a31b1d3c7e266b999739109abce8b6c87e4b31fcfcd788b65267395"
 dependencies = [
  "cfg-if",
  "js-sys",
@@ -2890,9 +2912,9 @@ dependencies = [
 
 [[package]]
 name = "wasm-bindgen-macro"
-version = "0.2.78"
+version = "0.2.79"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "d56146e7c495528bf6587663bea13a8eb588d39b36b679d83972e1a2dbbdacf9"
+checksum = "2f4203d69e40a52ee523b2529a773d5ffc1dc0071801c87b3d270b471b80ed01"
 dependencies = [
  "quote",
  "wasm-bindgen-macro-support",
@@ -2900,9 +2922,9 @@ dependencies = [
 
 [[package]]
 name = "wasm-bindgen-macro-support"
-version = "0.2.78"
+version = "0.2.79"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "7803e0eea25835f8abdc585cd3021b3deb11543c6fe226dcd30b228857c5c5ab"
+checksum = "bfa8a30d46208db204854cadbb5d4baf5fcf8071ba5bf48190c3e59937962ebc"
 dependencies = [
  "proc-macro2",
  "quote",
@@ -2913,15 +2935,15 @@ dependencies = [
 
 [[package]]
 name = "wasm-bindgen-shared"
-version = "0.2.78"
+version = "0.2.79"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "0237232789cf037d5480773fe568aac745bfe2afbc11a863e97901780a6b47cc"
+checksum = "3d958d035c4438e28c70e4321a2911302f10135ce78a9c7834c0cab4123d06a2"
 
 [[package]]
 name = "web-sys"
-version = "0.3.55"
+version = "0.3.56"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "38eb105f1c59d9eaa6b5cdc92b859d85b926e82cb2e0945cd0c9259faa6fe9fb"
+checksum = "c060b319f29dd25724f09a2ba1418f142f539b2be99fbf4d2d5a8f7330afb8eb"
 dependencies = [
  "js-sys",
  "wasm-bindgen",
@@ -2958,20 +2980,63 @@ version = "0.4.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f"
 
+[[package]]
+name = "windows-sys"
+version = "0.34.0"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "5acdd78cb4ba54c0045ac14f62d8f94a03d10047904ae2a40afa1e99d8f70825"
+dependencies = [
+ "windows_aarch64_msvc",
+ "windows_i686_gnu",
+ "windows_i686_msvc",
+ "windows_x86_64_gnu",
+ "windows_x86_64_msvc",
+]
+
+[[package]]
+name = "windows_aarch64_msvc"
+version = "0.34.0"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "17cffbe740121affb56fad0fc0e421804adf0ae00891205213b5cecd30db881d"
+
+[[package]]
+name = "windows_i686_gnu"
+version = "0.34.0"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "2564fde759adb79129d9b4f54be42b32c89970c18ebf93124ca8870a498688ed"
+
+[[package]]
+name = "windows_i686_msvc"
+version = "0.34.0"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "9cd9d32ba70453522332c14d38814bceeb747d80b3958676007acadd7e166956"
+
+[[package]]
+name = "windows_x86_64_gnu"
+version = "0.34.0"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "cfce6deae227ee8d356d19effc141a509cc503dfd1f850622ec4b0f84428e1f4"
+
+[[package]]
+name = "windows_x86_64_msvc"
+version = "0.34.0"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "d19538ccc21819d01deaf88d6a17eae6596a12e9aafdbb97916fb49896d89de9"
+
 [[package]]
 name = "winreg"
-version = "0.7.0"
+version = "0.10.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "0120db82e8a1e0b9fb3345a539c478767c0048d842860994d96113d5b667bd69"
+checksum = "80d0f4e272c85def139476380b12f9ac60926689dd2e01d4923222f40580869d"
 dependencies = [
  "winapi",
 ]
 
 [[package]]
 name = "xdg"
-version = "2.4.0"
+version = "2.4.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "3a23fe958c70412687039c86f578938b4a0bb50ec788e96bce4d6ab00ddd5803"
+checksum = "0c4583db5cbd4c4c0303df2d15af80f0539db703fa1c68802d4cbbd2dd0f88f6"
 dependencies = [
  "dirs",
 ]
diff --git a/podcasts-gtk/Cargo.toml b/podcasts-gtk/Cargo.toml
index 6b3cb877..8639163e 100644
--- a/podcasts-gtk/Cargo.toml
+++ b/podcasts-gtk/Cargo.toml
@@ -7,8 +7,8 @@ edition = "2018"
 [dependencies]
 chrono = "0.4"
 crossbeam-channel = "0.5.1"
-gst = { version = "0.17.0", package = "gstreamer" }
-gst-player = { version = "0.17.0", package = "gstreamer-player" }
+gst = { version = "0.18.0", package = "gstreamer" }
+gst-player = { version = "0.18.0", package = "gstreamer-player" }
 humansize = "1.1"
 lazy_static = "1.4"
 log = "0.4"
@@ -24,8 +24,8 @@ serde_json = "1.0"
 html5ever = "0.25"
 markup5ever_rcdom = "0.1"
 html2text = "0.2.1"
-glib = "0.14.2"
-adw = {package = "libadwaita", version = "0.1.0-beta"}
+glib = "0.15.0"
+adw = {package = "libadwaita", version = "0.1.0"}
 once_cell = "1.9"
 
 [dependencies.gettext-rs]
@@ -35,11 +35,11 @@ features = ["gettext-system"]
 
 [dependencies.gio]
 features = ["v2_50"]
-version = "0.14.0"
+version = "0.15.0"
 
 [dependencies.gtk]
 package = "gtk4"
-version = "0.3.0"
+version = "0.4.0"
 
 [dependencies.mpris-player]
 # git = "https://gitlab.gnome.org/World/Rust/mpris-player.git"
diff --git a/podcasts-gtk/src/app.rs b/podcasts-gtk/src/app.rs
index 0d333d3d..a528ed71 100644
--- a/podcasts-gtk/src/app.rs
+++ b/podcasts-gtk/src/app.rs
@@ -322,7 +322,6 @@ impl PdApplication {
                 window
                     .main_deck
                     .page(&description_widget.container)
-                    .unwrap()
                     .set_name(Some("description"));
                 window.main_deck.navigate(adw::NavigationDirection::Forward);
                 window.headerbar.reveal_bottom_switcher(false);
@@ -358,7 +357,7 @@ impl PdApplication {
             Action::StopUpdating => {
                 window.updating.set(false);
                 if let Some(timeout) = window.updating_timeout.replace(None) {
-                    glib::source_remove(timeout);
+                    timeout.remove();
                 }
                 window.progress_bar.hide();
             }
@@ -372,7 +371,7 @@ impl PdApplication {
                     }),
                 );
                 if let Some(old_timeout) = window.updating_timeout.replace(Some(updating_timeout)) {
-                    glib::source_remove(old_timeout);
+                    old_timeout.remove();
                 }
             }
             Action::FeedRefreshed => {
diff --git a/podcasts-gtk/src/stacks/content.rs b/podcasts-gtk/src/stacks/content.rs
index b6f22fdf..11a2d995 100644
--- a/podcasts-gtk/src/stacks/content.rs
+++ b/podcasts-gtk/src/stacks/content.rs
@@ -55,12 +55,9 @@ impl Content {
         // container will hold the header bar and the content
         container.set_widget_name("content");
         container.append(&stack);
-        let home_page = stack
-            .add_titled(&home.borrow().get_stack(), Some("home"), &i18n("New"))
-            .unwrap();
-        let shows_page = stack
-            .add_titled(&shows.borrow().get_stack(), Some("shows"), &i18n("Shows"))
-            .unwrap();
+        let home_page = stack.add_titled(&home.borrow().get_stack(), Some("home"), &i18n("New"));
+        let shows_page =
+            stack.add_titled(&shows.borrow().get_stack(), Some("shows"), &i18n("Shows"));
 
         home_page.set_icon_name(Some("document-open-recent-symbolic"));
         shows_page.set_icon_name(Some("audio-input-microphone-symbolic"));
diff --git a/podcasts-gtk/src/utils.rs b/podcasts-gtk/src/utils.rs
index fd2ceadd..9b0cc873 100644
--- a/podcasts-gtk/src/utils.rs
+++ b/podcasts-gtk/src/utils.rs
@@ -210,7 +210,7 @@ where
 // https://blogs.gnome.org/jsparber/2018/04/29/animate-a-scrolledwindow/
 #[allow(clippy::float_cmp)]
 pub(crate) fn smooth_scroll_to(view: &gtk::ScrolledWindow, target: &gtk::Adjustment) {
-    let adj = view.vadjustment().unwrap();
+    let adj = view.vadjustment();
     if let Some(clock) = view.frame_clock() {
         let duration = 200;
         let start = adj.value();
diff --git a/podcasts-gtk/src/widgets/aboutdialog.rs b/podcasts-gtk/src/widgets/aboutdialog.rs
index fba52fe7..00d47548 100644
--- a/podcasts-gtk/src/widgets/aboutdialog.rs
+++ b/podcasts-gtk/src/widgets/aboutdialog.rs
@@ -26,40 +26,42 @@ use crate::i18n::i18n;
 pub(crate) fn about_dialog(window: &gtk::ApplicationWindow) {
     // Feel free to add yourself if you contributed.
     // Please keep it sorted alphabetically
-    let authors = [
-        "Alexandre Franke",
-        "Carlos Soriano",
-        "Constantin Nickel",
-        "Daniel García Moreno",
-        "Felix Häcker",
-        "Gabriele Musco",
-        "Ivan Augusto",
-        "James Wykeham-Martin",
-        "Jordan Petridis",
-        "Jordan Williams",
-        "Julian Hofer",
-        "Julian Sparber",
-        "Matthew Martin",
-        "Piotr Drąg",
-        "Rowan Lewis",
-        "Zander Brown",
+    let authors = vec![
+        String::from("Alexandre Franke"),
+        String::from("Carlos Soriano"),
+        String::from("Constantin Nickel"),
+        String::from("Daniel García Moreno"),
+        String::from("Felix Häcker"),
+        String::from("Gabriele Musco"),
+        String::from("Ivan Augusto"),
+        String::from("James Wykeham-Martin"),
+        String::from("Jordan Petridis"),
+        String::from("Jordan Williams"),
+        String::from("Julian Hofer"),
+        String::from("Julian Sparber"),
+        String::from("Matthew Martin"),
+        String::from("Piotr Drąg"),
+        String::from("Rowan Lewis"),
+        String::from("Zander Brown"),
     ];
 
-    let dialog = gtk::AboutDialog::new();
-    dialog.set_logo_icon_name(Some(APP_ID));
-    dialog.set_comments(Some(i18n("Podcast Client for the GNOME Desktop.").as_str()));
-    dialog.set_copyright(Some("© 2017, 2018 Jordan Petridis"));
-    dialog.set_license_type(gtk::License::Gpl30);
-    dialog.set_modal(true);
-    dialog.set_version(Some(VERSION));
-    dialog.set_program_name(Some(&i18n("Podcasts")));
-    dialog.set_website(Some("https://wiki.gnome.org/Apps/Podcasts"));
-    dialog.set_website_label(&i18n("Learn more about GNOME Podcasts"));
-    dialog.set_transient_for(Some(window));
+    let artists = vec![String::from("Tobias Bernard"), String::from("Sam Hewitt")];
 
-    dialog.set_artists(&["Tobias Bernard", "Sam Hewitt"]);
-    dialog.set_authors(&authors);
-    dialog.set_translator_credits(Some(i18n("translator-credits").as_str()));
+    let dialog = gtk::AboutDialog::builder()
+        .logo_icon_name(APP_ID)
+        .comments(i18n("Podcast Client for the GNOME Desktop.").as_str())
+        .copyright("© 2017-2021 Jordan Petridis")
+        .license_type(gtk::License::Gpl30)
+        .modal(true)
+        .version(VERSION)
+        .program_name(&i18n("Podcasts"))
+        .website("https://gitlab.gnome.org/World/podcasts")
+        .website_label(i18n("Learn more about GNOME Podcasts").as_str())
+        .transient_for(window)
+        .artists(artists)
+        .authors(authors)
+        .translator_credits(i18n("translator-credits").as_str())
+        .build();
 
     dialog.show();
 }
diff --git a/podcasts-gtk/src/widgets/base_view.rs b/podcasts-gtk/src/widgets/base_view.rs
index 3abb4f51..32957a35 100644
--- a/podcasts-gtk/src/widgets/base_view.rs
+++ b/podcasts-gtk/src/widgets/base_view.rs
@@ -53,7 +53,7 @@ impl ObjectImpl for BaseViewPriv {
 
     fn properties() -> &'static [glib::ParamSpec] {
         static PROPERTIES: Lazy<Vec<glib::ParamSpec>> = Lazy::new(|| {
-            vec![glib::ParamSpec::new_object(
+            vec![glib::ParamSpecObject::new(
                 "child",
                 "child",
                 "child",
@@ -127,6 +127,6 @@ impl BaseView {
     pub(crate) fn vadjustment(&self) -> Adjustment {
         let self_ = BaseViewPriv::from_instance(&self);
 
-        self_.scrolled_window.vadjustment().unwrap()
+        self_.scrolled_window.vadjustment()
     }
 }
diff --git a/podcasts-gtk/src/widgets/player.rs b/podcasts-gtk/src/widgets/player.rs
index e0ee37c0..a9ded5d3 100644
--- a/podcasts-gtk/src/widgets/player.rs
+++ b/podcasts-gtk/src/widgets/player.rs
@@ -510,7 +510,7 @@ impl PlayerWidget {
 
                 // If it's not the same file load the uri, otherwise just unpause
                 if self.player.uri().map_or(true, |s| s != uri.as_str()) {
-                    self.player.set_uri(uri.as_str());
+                    self.player.set_uri(Some(uri.as_str()));
                 } else {
                     // just unpause, no restore required
                     self.info.finished_restore = true;
diff --git a/podcasts-gtk/src/widgets/short_desc_layout.rs b/podcasts-gtk/src/widgets/short_desc_layout.rs
index ae7193cf..a607020b 100644
--- a/podcasts-gtk/src/widgets/short_desc_layout.rs
+++ b/podcasts-gtk/src/widgets/short_desc_layout.rs
@@ -32,7 +32,7 @@ impl LayoutManagerImpl for ShortDescLayoutPriv {
                     .layout()
                     .is_ellipsized()
                     .to_value();
-                widget.emit_by_name("is-ellipsized", &[&value]).unwrap();
+                widget.emit_by_name::<()>("is-ellipsized", &[&value]);
             }
         }
     }
diff --git a/podcasts-gtk/src/widgets/show.rs b/podcasts-gtk/src/widgets/show.rs
index 2b5efccc..e94c5a51 100644
--- a/podcasts-gtk/src/widgets/show.rs
+++ b/podcasts-gtk/src/widgets/show.rs
@@ -83,17 +83,15 @@ impl ObjectSubclass for ShowWidgetPriv {
 impl ObjectImpl for ShowWidgetPriv {
     fn constructed(&self, obj: &Self::Type) {
         self.parent_constructed(obj);
-        self.description_short
-            .connect_local(
-                "is-ellipsized",
-                false,
-                clone!(@weak obj => @default-return None, move |args| {
-                    let is_ellipsized = args[1].get().unwrap();
-                    obj.update_read_more(is_ellipsized);
-                    None
-                }),
-            )
-            .unwrap();
+        self.description_short.connect_local(
+            "is-ellipsized",
+            false,
+            clone!(@weak obj => @default-return None, move |args| {
+                let is_ellipsized = args[1].get().unwrap();
+                obj.update_read_more(is_ellipsized);
+                None
+            }),
+        );
     }
 
     fn dispose(&self, _obj: &Self::Type) {
@@ -121,7 +119,7 @@ impl ShowWidget {
         vadj: Option<Adjustment>,
     ) -> ShowWidget {
         let pdw = ShowWidget::default();
-        let pdw_ = ShowWidgetPriv::from_instance(&pdw);
+        let pdw_ = pdw.imp();
         pdw.init(&pd);
 
         let menu = ShowMenu::new(&pd, &pdw_.episodes, &sender);
@@ -132,19 +130,15 @@ impl ShowWidget {
 
         pdw_.description_button
             .connect_clicked(clone!(@weak pdw => move |_| {
-                let pdw_ = ShowWidgetPriv::from_instance(&pdw);
-
-                pdw_.description_stack.set_visible_child_name("full");
+                pdw.imp().description_stack.set_visible_child_name("full");
             }));
 
         pdw
     }
 
     pub(crate) fn init(&self, pd: &Arc<Show>) {
-        let self_ = ShowWidgetPriv::from_instance(self);
-
         self.set_description(pd.description());
-        self_.show_id.set(Some(pd.id()));
+        self.imp().show_id.set(Some(pd.id()));
 
         let res = self.set_cover(&pd);
 
@@ -153,13 +147,11 @@ impl ShowWidget {
 
     /// Set the show cover.
     fn set_cover(&self, pd: &Arc<Show>) -> Result<()> {
-        let self_ = ShowWidgetPriv::from_instance(self);
-
-        utils::set_image_from_path(&self_.cover, pd.id(), 256)
+        utils::set_image_from_path(&self.imp().cover, pd.id(), 256)
     }
 
     fn update_read_more(&self, is_ellipsized: bool) {
-        let self_ = ShowWidgetPriv::from_instance(self);
+        let self_ = self.imp();
 
         let more = is_ellipsized || self_.description.label() != self_.description_short.label();
         self_.description_button_revealer.set_reveal_child(more);
@@ -167,7 +159,7 @@ impl ShowWidget {
 
     /// Set the description text.
     fn set_description(&self, text: &str) {
-        let self_ = ShowWidgetPriv::from_instance(self);
+        let self_ = self.imp();
 
         let markup = html2text::from_read(text.as_bytes(), text.as_bytes().len());
         let markup = markup.trim();
@@ -187,15 +179,11 @@ impl ShowWidget {
     }
 
     pub(crate) fn show_id(&self) -> Option<i32> {
-        let self_ = ShowWidgetPriv::from_instance(self);
-
-        self_.show_id.get()
+        self.imp().show_id.get()
     }
 
     pub(crate) fn view(&self) -> BaseView {
-        let self_ = ShowWidgetPriv::from_instance(self);
-
-        self_.view.clone()
+        self.imp().view.clone()
     }
 }
 
@@ -209,7 +197,7 @@ fn populate_listbox(
     use crossbeam_channel::TryRecvError;
 
     let count = dbqueries::get_pd_episodes_count(&pd)?;
-    let show_ = ShowWidgetPriv::from_instance(show);
+    let show_ = show.imp();
 
     let (sender_, receiver) = bounded(1);
     tokio::spawn(clone!(@strong pd => async move {
@@ -249,9 +237,7 @@ fn populate_listbox(
             });
 
             let callback = clone!(@weak show, @strong vadj => move || {
-                let show_ = ShowWidgetPriv::from_instance(&show);
-
-                show_.view.set_adjustments(None, vadj.as_ref());
+                show.imp().view.set_adjustments(None, vadj.as_ref());
             });
 
             lazy_load(episodes, list_weak.clone(), constructor, callback);
diff --git a/podcasts-gtk/src/widgets/shows_view.rs b/podcasts-gtk/src/widgets/shows_view.rs
index 6aed4dc9..f9ae5315 100644
--- a/podcasts-gtk/src/widgets/shows_view.rs
+++ b/podcasts-gtk/src/widgets/shows_view.rs
@@ -130,7 +130,7 @@ impl ObjectSubclass for ShowCoverPrivate {
     fn new() -> Self {
         Self {
             // FIXME: bundle the symbolic in resources
-            cover: gtk::Image::from_icon_name(Some("image-x-generic-symbolic")),
+            cover: gtk::Image::from_icon_name("image-x-generic-symbolic"),
             show_id: Cell::default(),
         }
     }
diff --git a/podcasts-gtk/src/window.rs b/podcasts-gtk/src/window.rs
index b72c4027..77c2a87f 100644
--- a/podcasts-gtk/src/window.rs
+++ b/podcasts-gtk/src/window.rs
@@ -22,7 +22,7 @@ use glib::Sender;
 
 use gio::{self, prelude::*};
 
-use gtk::prelude::*;
+use adw::prelude::*;
 
 use crate::app::{Action, PdApplication};
 use crate::headerbar::Header;
@@ -108,7 +108,7 @@ impl MainWindow {
         wrap.append(&header.bottom_switcher);
 
         toast_overlay.set_child(Some(&wrap));
-        adw::traits::ApplicationWindowExt::set_content(&window, Some(&toast_overlay));
+        window.set_content(Some(&toast_overlay));
 
         // Retrieve the previous window position and size.
         WindowGeometry::from_settings(&settings).apply(&window);
-- 
GitLab


From f0e78150c64b25df6fc4e655132de2f724976832 Mon Sep 17 00:00:00 2001
From: Jordan Petridis <jpetridis@gnome.org>
Date: Fri, 25 Dec 2020 02:13:32 +0200
Subject: [PATCH 12/23] podcasts-gtk: move empty_show to a composite template

---
 podcasts-gtk/resources/gtk/empty_show.ui | 32 +++++++++++++
 podcasts-gtk/resources/gtk/empty_view.ui | 29 +-----------
 podcasts-gtk/resources/resources.xml     |  1 +
 podcasts-gtk/src/main.rs                 |  2 -
 podcasts-gtk/src/meson.build             |  1 +
 podcasts-gtk/src/widgets/empty.rs        | 19 --------
 podcasts-gtk/src/widgets/empty_show.rs   | 58 ++++++++++++++++++++++++
 podcasts-gtk/src/widgets/mod.rs          |  4 +-
 podcasts-gtk/src/widgets/show.rs         |  3 +-
 9 files changed, 97 insertions(+), 52 deletions(-)
 create mode 100644 podcasts-gtk/resources/gtk/empty_show.ui
 create mode 100644 podcasts-gtk/src/widgets/empty_show.rs

diff --git a/podcasts-gtk/resources/gtk/empty_show.ui b/podcasts-gtk/resources/gtk/empty_show.ui
new file mode 100644
index 00000000..8958d5f5
--- /dev/null
+++ b/podcasts-gtk/resources/gtk/empty_show.ui
@@ -0,0 +1,32 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<interface>
+  <template class="PdEmptyShow" parent="GtkBox">
+    <property name="halign">center</property>
+    <property name="valign">center</property>
+    <property name="hexpand">True</property>
+    <property name="vexpand">True</property>
+    <property name="orientation">vertical</property>
+    <property name="spacing">6</property>
+    <property name="margin_start">6</property>
+    <property name="margin_end">6</property>
+    <property name="margin_top">6</property>
+    <property name="margin_bottom">6</property>
+    <child>
+      <object class="GtkLabel" id="label_1">
+        <property name="label" translatable="yes">This show does not have episodes yet</property>
+        <attributes>
+          <attribute name="weight" value="bold"></attribute>
+          <attribute name="scale" value="1.4399999999999999"></attribute>
+        </attributes>
+      </object>
+    </child>
+    <child>
+      <object class="GtkLabel" id="label_2">
+        <property name="label" translatable="yes">If you think this is an error, please consider writing a bug report.</property>
+        <style>
+          <class name="dim-label"/>
+        </style>
+      </object>
+    </child>
+  </template>
+</interface>
\ No newline at end of file
diff --git a/podcasts-gtk/resources/gtk/empty_view.ui b/podcasts-gtk/resources/gtk/empty_view.ui
index 3c12a282..9aefad68 100644
--- a/podcasts-gtk/resources/gtk/empty_view.ui
+++ b/podcasts-gtk/resources/gtk/empty_view.ui
@@ -24,34 +24,7 @@ Tobias Bernard
 
 -->
 <interface>
-  <!-- interface-license-type gplv3 -->
-  <!-- interface-name GNOME Podcasts -->
-  <!-- interface-description A podcast client for the GNOME Desktop -->
-  <!-- interface-copyright 2017 - 2018 -->
-  <!-- interface-authors Jordan Petridis\nTobias Bernard -->
-  <object class="GtkBox" id="empty_show">
-    <property name="orientation">vertical</property>
-    <property name="margin-top">6</property>
-    <property name="margin-bottom">6</property>
-    <property name="margin-start">6</property>
-    <property name="margin-end">6</property>
-    <child>
-      <object class="GtkLabel">
-        <property name="label" translatable="yes">This show does not have episodes yet</property>
-        <style>
-          <class name="title-3"/>
-        </style>
-      </object>
-    </child>
-    <child>
-      <object class="GtkLabel">
-        <property name="label" translatable="yes">If you think this is an error, please consider writing a bug report.</property>
-        <style>
-          <class name="dim-label"/>
-        </style>
-      </object>
-    </child>
-  </object>
+  <requires lib="gtk" version="4.0"/>
   <object class="GtkBox" id="empty_view">
     <property name="halign">center</property>
     <property name="valign">center</property>
diff --git a/podcasts-gtk/resources/resources.xml b/podcasts-gtk/resources/resources.xml
index b46973df..5326e42f 100644
--- a/podcasts-gtk/resources/resources.xml
+++ b/podcasts-gtk/resources/resources.xml
@@ -6,6 +6,7 @@
       <file compressed="true" preprocess="xml-stripblanks">gtk/episode_description.ui</file>
       <file compressed="true" preprocess="xml-stripblanks">gtk/show_widget.ui</file>
       <file compressed="true" preprocess="xml-stripblanks">gtk/empty_view.ui</file>
+      <file compressed="true" preprocess="xml-stripblanks">gtk/empty_show.ui</file>
       <file compressed="true" preprocess="xml-stripblanks">gtk/home_view.ui</file>
       <file compressed="true" preprocess="xml-stripblanks">gtk/home_episode.ui</file>
       <file compressed="true" preprocess="xml-stripblanks">gtk/headerbar.ui</file>
diff --git a/podcasts-gtk/src/main.rs b/podcasts-gtk/src/main.rs
index 39fb2aad..4c8c9ed8 100644
--- a/podcasts-gtk/src/main.rs
+++ b/podcasts-gtk/src/main.rs
@@ -129,8 +129,6 @@ fn test_stuff() -> anyhow::Result<()> {
     HomeEpisode::default();
     EpisodeWidget::default();
     EmptyView::default();
-    EmptyShow::default();
-    EpisodeDescription::default();
 
     show_menu::ShowMenu::default();
     episode_menu::EpisodeMenu::default();
diff --git a/podcasts-gtk/src/meson.build b/podcasts-gtk/src/meson.build
index 4b394acd..3cf321c8 100644
--- a/podcasts-gtk/src/meson.build
+++ b/podcasts-gtk/src/meson.build
@@ -25,6 +25,7 @@ podcasts_sources = files(
   'widgets/aboutdialog.rs',
   'widgets/base_view.rs',
   'widgets/empty.rs',
+  'widgets/empty_show.rs',
   'widgets/episode.rs',
   'widgets/episode_menu.rs',
   'widgets/episode_description.rs',
diff --git a/podcasts-gtk/src/widgets/empty.rs b/podcasts-gtk/src/widgets/empty.rs
index 8d438d15..168b2da8 100644
--- a/podcasts-gtk/src/widgets/empty.rs
+++ b/podcasts-gtk/src/widgets/empty.rs
@@ -18,7 +18,6 @@
 // SPDX-License-Identifier: GPL-3.0-or-later
 
 use crate::config::APP_ID;
-
 use std::ops::Deref;
 
 #[derive(Clone, Debug)]
@@ -40,21 +39,3 @@ impl Default for EmptyView {
         EmptyView(view)
     }
 }
-
-#[derive(Clone, Debug)]
-pub(crate) struct EmptyShow(gtk::Box);
-
-impl Deref for EmptyShow {
-    type Target = gtk::Box;
-    fn deref(&self) -> &Self::Target {
-        &self.0
-    }
-}
-
-impl Default for EmptyShow {
-    fn default() -> Self {
-        let builder = gtk::Builder::from_resource("/org/gnome/Podcasts/gtk/empty_view.ui");
-        let box_: gtk::Box = builder.object("empty_show").unwrap();
-        EmptyShow(box_)
-    }
-}
diff --git a/podcasts-gtk/src/widgets/empty_show.rs b/podcasts-gtk/src/widgets/empty_show.rs
new file mode 100644
index 00000000..e074e4ac
--- /dev/null
+++ b/podcasts-gtk/src/widgets/empty_show.rs
@@ -0,0 +1,58 @@
+// empty_show.rs
+//
+// Copyright 2022 Jordan Petridis <jpetridis@gnome.org>
+//
+// This program is free software: you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation, either version 3 of the License, or
+// (at your option) any later version.
+//
+// This program is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License
+// along with this program.  If not, see <http://www.gnu.org/licenses/>.
+//
+// SPDX-License-Identifier: GPL-3.0-or-later
+
+use gtk::prelude::*;
+use gtk::subclass::prelude::*;
+use gtk::{glib, CompositeTemplate};
+
+#[derive(Debug, Default, CompositeTemplate)]
+#[template(resource = "/org/gnome/Podcasts/gtk/empty_show.ui")]
+pub struct EmptyShowPriv {}
+
+#[glib::object_subclass]
+impl ObjectSubclass for EmptyShowPriv {
+    const NAME: &'static str = "PdEmptyShow";
+    type Type = EmptyShow;
+    type ParentType = gtk::Box;
+
+    fn class_init(klass: &mut Self::Class) {
+        klass.bind_template();
+    }
+
+    // You must call `Widget`'s `init_template()` within `instance_init()`.
+    fn instance_init(obj: &glib::subclass::InitializingObject<Self>) {
+        obj.init_template();
+    }
+}
+
+impl ObjectImpl for EmptyShowPriv {}
+
+impl WidgetImpl for EmptyShowPriv {}
+impl BoxImpl for EmptyShowPriv {}
+
+glib::wrapper! {
+    pub struct EmptyShow(ObjectSubclass<EmptyShowPriv>)
+        @extends gtk::Widget, gtk::Box;
+}
+
+impl Default for EmptyShow {
+    fn default() -> Self {
+        glib::Object::new(&[]).expect("Failed to create EmptyShow Box")
+    }
+}
diff --git a/podcasts-gtk/src/widgets/mod.rs b/podcasts-gtk/src/widgets/mod.rs
index 9e2ebab4..a45b334e 100644
--- a/podcasts-gtk/src/widgets/mod.rs
+++ b/podcasts-gtk/src/widgets/mod.rs
@@ -20,6 +20,7 @@
 mod aboutdialog;
 mod base_view;
 mod empty;
+mod empty_show;
 mod episode;
 mod episode_description;
 pub(crate) mod episode_menu;
@@ -33,7 +34,8 @@ mod shows_view;
 
 pub(crate) use self::aboutdialog::about_dialog;
 pub(crate) use self::base_view::BaseView;
-pub(crate) use self::empty::{EmptyShow, EmptyView};
+pub(crate) use self::empty::EmptyView;
+pub(crate) use self::empty_show::EmptyShow;
 pub(crate) use self::episode::EpisodeWidget;
 pub(crate) use self::episode_description::EpisodeDescription;
 pub(crate) use self::episode_menu::EpisodeMenu;
diff --git a/podcasts-gtk/src/widgets/show.rs b/podcasts-gtk/src/widgets/show.rs
index e94c5a51..a30fff3c 100644
--- a/podcasts-gtk/src/widgets/show.rs
+++ b/podcasts-gtk/src/widgets/show.rs
@@ -34,7 +34,6 @@ use crate::utils::{self, lazy_load};
 use crate::widgets::{BaseView, EmptyShow, EpisodeWidget, ShortDesc, ShowMenu};
 
 use std::cell::Cell;
-use std::ops::Deref;
 use std::sync::Arc;
 
 use gtk::glib;
@@ -210,7 +209,7 @@ fn populate_listbox(
 
     if count == 0 {
         let empty = EmptyShow::default();
-        show_.episodes.append(empty.deref());
+        show_.episodes.append(&empty);
         return Ok(());
     }
 
-- 
GitLab


From eaa6edb951258a9d500dbd5ec211b8ec2863ac9e Mon Sep 17 00:00:00 2001
From: Jordan Petridis <jpetridis@gnome.org>
Date: Fri, 25 Dec 2020 03:07:47 +0200
Subject: [PATCH 13/23] podcasts-gtk: move empty_view to a composite template
 as well

---
 podcasts-gtk/resources/gtk/empty_view.ui | 11 ++--
 podcasts-gtk/src/main.rs                 |  1 -
 podcasts-gtk/src/meson.build             |  2 +-
 podcasts-gtk/src/stacks/home.rs          |  3 +-
 podcasts-gtk/src/stacks/show.rs          |  3 +-
 podcasts-gtk/src/widgets/empty.rs        | 41 -------------
 podcasts-gtk/src/widgets/empty_view.rs   | 75 ++++++++++++++++++++++++
 podcasts-gtk/src/widgets/mod.rs          |  4 +-
 8 files changed, 87 insertions(+), 53 deletions(-)
 delete mode 100644 podcasts-gtk/src/widgets/empty.rs
 create mode 100644 podcasts-gtk/src/widgets/empty_view.rs

diff --git a/podcasts-gtk/resources/gtk/empty_view.ui b/podcasts-gtk/resources/gtk/empty_view.ui
index 9aefad68..ae5bc222 100644
--- a/podcasts-gtk/resources/gtk/empty_view.ui
+++ b/podcasts-gtk/resources/gtk/empty_view.ui
@@ -24,14 +24,17 @@ Tobias Bernard
 
 -->
 <interface>
-  <requires lib="gtk" version="4.0"/>
-  <object class="GtkBox" id="empty_view">
+  <template class="PdEmptyView" parent="GtkBox">
     <property name="halign">center</property>
     <property name="valign">center</property>
     <property name="hexpand">True</property>
     <property name="vexpand">True</property>
     <property name="orientation">vertical</property>
-    <property name="spacing">12</property>
+    <property name="spacing">6</property>
+    <property name="margin_start">6</property>
+    <property name="margin_end">6</property>
+    <property name="margin_top">6</property>
+    <property name="margin_bottom">6</property>
     <child>
       <object class="GtkImage" id="image">
         <property name="halign">center</property>
@@ -109,5 +112,5 @@ Tobias Bernard
         </child>
       </object>
     </child>
-  </object>
+  </template>
 </interface>
diff --git a/podcasts-gtk/src/main.rs b/podcasts-gtk/src/main.rs
index 4c8c9ed8..d1f07aa0 100644
--- a/podcasts-gtk/src/main.rs
+++ b/podcasts-gtk/src/main.rs
@@ -128,7 +128,6 @@ fn test_stuff() -> anyhow::Result<()> {
     HomeView::default();
     HomeEpisode::default();
     EpisodeWidget::default();
-    EmptyView::default();
 
     show_menu::ShowMenu::default();
     episode_menu::EpisodeMenu::default();
diff --git a/podcasts-gtk/src/meson.build b/podcasts-gtk/src/meson.build
index 3cf321c8..8d4554c5 100644
--- a/podcasts-gtk/src/meson.build
+++ b/podcasts-gtk/src/meson.build
@@ -24,7 +24,7 @@ podcasts_sources = files(
   'stacks/show.rs',
   'widgets/aboutdialog.rs',
   'widgets/base_view.rs',
-  'widgets/empty.rs',
+  'widgets/empty_view.rs',
   'widgets/empty_show.rs',
   'widgets/episode.rs',
   'widgets/episode_menu.rs',
diff --git a/podcasts-gtk/src/stacks/home.rs b/podcasts-gtk/src/stacks/home.rs
index 0eef163d..0948c7ff 100644
--- a/podcasts-gtk/src/stacks/home.rs
+++ b/podcasts-gtk/src/stacks/home.rs
@@ -26,7 +26,6 @@ use crate::app::Action;
 use crate::stacks::State;
 use crate::widgets::{EmptyView, HomeView};
 
-use std::ops::Deref;
 use std::rc::Rc;
 
 #[derive(Debug, Clone)]
@@ -46,7 +45,7 @@ impl HomeStack {
         let state = State::Empty;
 
         stack.add_named(&episodes.view, Some("home"));
-        stack.add_named(empty.deref(), Some("empty"));
+        stack.add_named(&empty, Some("empty"));
 
         let home = HomeStack {
             empty,
diff --git a/podcasts-gtk/src/stacks/show.rs b/podcasts-gtk/src/stacks/show.rs
index a5f3e275..265bf67f 100644
--- a/podcasts-gtk/src/stacks/show.rs
+++ b/podcasts-gtk/src/stacks/show.rs
@@ -28,7 +28,6 @@ use crate::utils::get_ignored_shows;
 use crate::widgets::EmptyView;
 
 use std::cell::RefCell;
-use std::ops::Deref;
 use std::rc::Rc;
 
 #[derive(Debug, Clone)]
@@ -48,7 +47,7 @@ impl ShowStack {
         let state = State::Empty;
 
         stack.add_named(&populated.borrow().container(), Some("populated"));
-        stack.add_named(empty.deref(), Some("empty"));
+        stack.add_named(&empty, Some("empty"));
 
         let mut show = ShowStack {
             empty,
diff --git a/podcasts-gtk/src/widgets/empty.rs b/podcasts-gtk/src/widgets/empty.rs
deleted file mode 100644
index 168b2da8..00000000
--- a/podcasts-gtk/src/widgets/empty.rs
+++ /dev/null
@@ -1,41 +0,0 @@
-// empty.rs
-//
-// Copyright 2017 Jordan Petridis <jpetridis@gnome.org>
-//
-// This program is free software: you can redistribute it and/or modify
-// it under the terms of the GNU General Public License as published by
-// the Free Software Foundation, either version 3 of the License, or
-// (at your option) any later version.
-//
-// This program is distributed in the hope that it will be useful,
-// but WITHOUT ANY WARRANTY; without even the implied warranty of
-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-// GNU General Public License for more details.
-//
-// You should have received a copy of the GNU General Public License
-// along with this program.  If not, see <http://www.gnu.org/licenses/>.
-//
-// SPDX-License-Identifier: GPL-3.0-or-later
-
-use crate::config::APP_ID;
-use std::ops::Deref;
-
-#[derive(Clone, Debug)]
-pub(crate) struct EmptyView(gtk::Box);
-
-impl Deref for EmptyView {
-    type Target = gtk::Box;
-    fn deref(&self) -> &Self::Target {
-        &self.0
-    }
-}
-
-impl Default for EmptyView {
-    fn default() -> Self {
-        let builder = gtk::Builder::from_resource("/org/gnome/Podcasts/gtk/empty_view.ui");
-        let view: gtk::Box = builder.object("empty_view").unwrap();
-        let image: gtk::Image = builder.object("image").unwrap();
-        image.set_from_icon_name(Some(format!("{}-symbolic", APP_ID).as_str()));
-        EmptyView(view)
-    }
-}
diff --git a/podcasts-gtk/src/widgets/empty_view.rs b/podcasts-gtk/src/widgets/empty_view.rs
new file mode 100644
index 00000000..7f18748e
--- /dev/null
+++ b/podcasts-gtk/src/widgets/empty_view.rs
@@ -0,0 +1,75 @@
+// empty_view.rs
+//
+// Copyright 2017 Jordan Petridis <jpetridis@gnome.org>
+//
+// This program is free software: you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation, either version 3 of the License, or
+// (at your option) any later version.
+//
+// This program is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License
+// along with this program.  If not, see <http://www.gnu.org/licenses/>.
+//
+// SPDX-License-Identifier: GPL-3.0-or-later
+
+use crate::config::APP_ID;
+
+use gtk::prelude::*;
+use gtk::subclass::prelude::*;
+use gtk::{glib, CompositeTemplate};
+
+#[derive(Debug, CompositeTemplate)]
+#[template(resource = "/org/gnome/Podcasts/gtk/empty_view.ui")]
+pub struct EmptyViewPriv {
+    #[template_child]
+    pub image: TemplateChild<gtk::Image>,
+}
+
+#[glib::object_subclass]
+impl ObjectSubclass for EmptyViewPriv {
+    const NAME: &'static str = "PdEmptyView";
+    type Type = EmptyView;
+    type ParentType = gtk::Box;
+
+    fn new() -> Self {
+        Self {
+            image: TemplateChild::default(),
+        }
+    }
+
+    fn class_init(klass: &mut Self::Class) {
+        klass.bind_template();
+    }
+
+    // You must call `Widget`'s `init_template()` within `instance_init()`.
+    fn instance_init(obj: &glib::subclass::InitializingObject<Self>) {
+        obj.init_template();
+    }
+}
+
+impl ObjectImpl for EmptyViewPriv {
+    fn constructed(&self, obj: &Self::Type) {
+        self.parent_constructed(obj);
+        self.image
+            .set_icon_name(Some(&format!("{}-symbolic", APP_ID)));
+    }
+}
+
+impl WidgetImpl for EmptyViewPriv {}
+impl BoxImpl for EmptyViewPriv {}
+
+glib::wrapper! {
+    pub struct EmptyView(ObjectSubclass<EmptyViewPriv>)
+        @extends gtk::Widget, gtk::Box;
+}
+
+impl Default for EmptyView {
+    fn default() -> Self {
+        glib::Object::new(&[]).expect("Failed to create EmptyView Box")
+    }
+}
diff --git a/podcasts-gtk/src/widgets/mod.rs b/podcasts-gtk/src/widgets/mod.rs
index a45b334e..efee5423 100644
--- a/podcasts-gtk/src/widgets/mod.rs
+++ b/podcasts-gtk/src/widgets/mod.rs
@@ -19,8 +19,8 @@
 
 mod aboutdialog;
 mod base_view;
-mod empty;
 mod empty_show;
+mod empty_view;
 mod episode;
 mod episode_description;
 pub(crate) mod episode_menu;
@@ -34,8 +34,8 @@ mod shows_view;
 
 pub(crate) use self::aboutdialog::about_dialog;
 pub(crate) use self::base_view::BaseView;
-pub(crate) use self::empty::EmptyView;
 pub(crate) use self::empty_show::EmptyShow;
+pub(crate) use self::empty_view::EmptyView;
 pub(crate) use self::episode::EpisodeWidget;
 pub(crate) use self::episode_description::EpisodeDescription;
 pub(crate) use self::episode_menu::EpisodeMenu;
-- 
GitLab


From eb4e87183aa5217f67cdaf580876a3f7fb59eced Mon Sep 17 00:00:00 2001
From: Jordan Petridis <jpetridis@gnome.org>
Date: Fri, 25 Dec 2020 07:03:55 +0200
Subject: [PATCH 14/23] show_view: simplify implementation of ShowsChild

It doesn't need public functions and the default impl
was only used in new.
---
 podcasts-gtk/src/widgets/shows_view.rs | 33 +++++++++-----------------
 1 file changed, 11 insertions(+), 22 deletions(-)

diff --git a/podcasts-gtk/src/widgets/shows_view.rs b/podcasts-gtk/src/widgets/shows_view.rs
index f9ae5315..0be2ef55 100644
--- a/podcasts-gtk/src/widgets/shows_view.rs
+++ b/podcasts-gtk/src/widgets/shows_view.rs
@@ -88,7 +88,7 @@ fn populate_flowbox(shows: &Rc<ShowsView>, vadj: Option<Adjustment>) -> Result<(
     let podcasts = dbqueries::get_podcasts_filter(&ignore)?;
     let flowbox_weak = shows.flowbox.downgrade();
 
-    let constructor = move |parent| ShowsChild::new(&parent).child;
+    let constructor = move |parent| ShowsChild::new(&parent).row;
     let callback = clone!(@weak shows => move || {
         if vadj.is_some() {
             shows.view.set_adjustments(None, vadj.as_ref())
@@ -177,37 +177,26 @@ impl ShowCover {
     }
 }
 
-#[derive(Debug, Clone)]
+#[derive(Debug)]
 struct ShowsChild {
     cover: ShowCover,
-    child: gtk::FlowBoxChild,
-}
-
-impl Default for ShowsChild {
-    fn default() -> Self {
-        let cover = ShowCover::new();
-        let child = gtk::FlowBoxChild::new();
-
-        child.set_child(Some(&cover));
-
-        ShowsChild { cover, child }
-    }
+    row: gtk::FlowBoxChild,
 }
 
 impl ShowsChild {
-    pub(crate) fn new(pd: &Show) -> ShowsChild {
+    fn new(pd: &Show) -> ShowsChild {
         let cover = ShowCover::new();
-        let child = gtk::FlowBoxChild::new();
+        let row = gtk::FlowBoxChild::new();
+        row.set_child(Some(&cover));
 
-        child.set_child(Some(&cover));
-
-        let shows_child = ShowsChild { cover, child };
-        shows_child.init(pd);
-        shows_child
+        let child = ShowsChild { cover, row };
+        child.init(pd);
+        child
     }
 
     fn init(&self, pd: &Show) {
-        self.child.set_tooltip_text(Some(pd.title()));
+        self.row.set_tooltip_text(Some(pd.title()));
+        self.cover.set_id(pd.id());
 
         self.cover.set_id(pd.id());
         self.set_cover();
-- 
GitLab


From 49aac0a9bad7b09bab2282f137ec74887a0e73bd Mon Sep 17 00:00:00 2001
From: Jordan Petridis <jpetridis@gnome.org>
Date: Fri, 25 Dec 2020 07:50:01 +0200
Subject: [PATCH 15/23] podcasts-gtk: remove the pixbuf cover cache

As we are going to move to GtkPicture we won't really need
this hack anymore.
---
 podcasts-gtk/src/utils.rs              | 43 +++-----------------------
 podcasts-gtk/src/widgets/shows_view.rs |  1 +
 2 files changed, 6 insertions(+), 38 deletions(-)

diff --git a/podcasts-gtk/src/utils.rs b/podcasts-gtk/src/utils.rs
index 9b0cc873..3a757586 100644
--- a/podcasts-gtk/src/utils.rs
+++ b/podcasts-gtk/src/utils.rs
@@ -30,7 +30,7 @@ use gtk::Widget;
 use anyhow::{anyhow, Result};
 use chrono::prelude::*;
 use crossbeam_channel::unbounded;
-use fragile::Fragile;
+use rayon;
 use regex::Regex;
 use serde_json::Value;
 use url::Url;
@@ -43,7 +43,7 @@ use podcasts_data::pipeline::pipeline;
 use podcasts_data::utils::checkup;
 use podcasts_data::Source;
 
-use std::collections::{HashMap, HashSet};
+use std::collections::HashSet;
 use std::sync::{Arc, Mutex, RwLock};
 use std::time::Duration;
 
@@ -314,48 +314,19 @@ pub(crate) fn refresh_feed(source: Option<Vec<Source>>, sender: Sender<Action>)
 }
 
 lazy_static! {
-    static ref CACHED_PIXBUFS: RwLock<HashMap<(i32, u32), Mutex<Fragile<Pixbuf>>>> =
-        RwLock::new(HashMap::new());
     static ref COVER_DL_REGISTRY: RwLock<HashSet<i32>> = RwLock::new(HashSet::new());
     static ref THREADPOOL: rayon::ThreadPool = rayon::ThreadPoolBuilder::new().build().unwrap();
     static ref CACHE_VALID_DURATION: chrono::Duration = chrono::Duration::weeks(4);
 }
 
-// Since gdk_pixbuf::Pixbuf is reference counted and every episode,
-// use the cover of the Podcast Feed/Show, We can only create a Pixbuf
-// cover per show and pass around the Rc pointer.
-//
-// GObjects do not implement Send trait, so SendCell is a way around that.
+// GObjects do not implement Send trait, so Fragile is a way around that.
 // Also lazy_static requires Sync trait, so that's what the mutexes are.
 // TODO: maybe use something that would just scale to requested size?
 // todo Unit test.
 pub(crate) fn set_image_from_path(image: &gtk::Image, show_id: i32, size: u32) -> Result<()> {
-    if let Ok(hashmap) = CACHED_PIXBUFS.read() {
-        if let Ok(pd) = dbqueries::get_podcast_cover_from_id(show_id) {
-            // If the image is still valid, check if the requested (cover + size) is already in the
-            // cache and if so do an early return after that.
-            if pd.is_cached_image_valid(&CACHE_VALID_DURATION) {
-                if let Some(guard) = hashmap.get(&(show_id, size)) {
-                    guard
-                        .lock()
-                        .map_err(|err| anyhow!("Fragile Mutex: {}", err))
-                        .and_then(|fragile| {
-                            fragile
-                                .try_get()
-                                .map(|px| image.set_from_pixbuf(Some(px)))
-                                .map_err(From::from)
-                        })?;
-
-                    return Ok(());
-                }
-            }
-        }
-    }
-
     // Check if there's an active download about this show cover.
     // If there is, a callback will be set so this function will be called again.
-    // If the download succeeds, there should be a quick return from the pixbuf cache_image
-    // If it fails another download will be scheduled.
+    // If it fails another download will be scheduled. WTF??? how is this not downlaoding infinitly
     if let Ok(guard) = COVER_DL_REGISTRY.read() {
         if guard.contains(&show_id) {
             let callback = clone!(@weak image => @default-return glib::Continue(false), move || {
@@ -399,11 +370,7 @@ pub(crate) fn set_image_from_path(image: &gtk::Image, show_id: i32, size: u32) -
                 match path {
                     Ok(path) => {
                         if let Ok(px) = Pixbuf::from_file_at_scale(&path, s, s, true) {
-                            if let Ok(mut hashmap) = CACHED_PIXBUFS.write() {
-                                hashmap
-                                    .insert((show_id, size), Mutex::new(Fragile::new(px.clone())));
-                                image.set_from_pixbuf(Some(&px));
-                            }
+                            image.set_from_pixbuf(Some(&px));
                         }
                     }
                     Err(DownloadError::NoImageLocation) => {
diff --git a/podcasts-gtk/src/widgets/shows_view.rs b/podcasts-gtk/src/widgets/shows_view.rs
index 0be2ef55..b51b531f 100644
--- a/podcasts-gtk/src/widgets/shows_view.rs
+++ b/podcasts-gtk/src/widgets/shows_view.rs
@@ -131,6 +131,7 @@ impl ObjectSubclass for ShowCoverPrivate {
         Self {
             // FIXME: bundle the symbolic in resources
             cover: gtk::Image::from_icon_name("image-x-generic-symbolic"),
+            // cover: gtk::Picture::new(),
             show_id: Cell::default(),
         }
     }
-- 
GitLab


From 7f4ebcda3cee20bc627463e1164d235407485870 Mon Sep 17 00:00:00 2001
From: Jordan Petridis <jpetridis@gnome.org>
Date: Fri, 25 Dec 2020 10:17:33 +0200
Subject: [PATCH 16/23] podcasts-gtk: rework the cover image cache loading

This adds a check if the image is already downloaded and loads
it on the spot, which avoids needing to aqquire a lock for
the download.
---
 Cargo.lock                      |  1 +
 podcasts-data/src/downloader.rs | 55 +++++++++++++++++++++------------
 podcasts-gtk/Cargo.toml         |  1 +
 podcasts-gtk/src/utils.rs       | 22 ++++++++++---
 4 files changed, 55 insertions(+), 24 deletions(-)

diff --git a/Cargo.lock b/Cargo.lock
index aae2d86f..985bb4b0 100644
--- a/Cargo.lock
+++ b/Cargo.lock
@@ -1927,6 +1927,7 @@ dependencies = [
  "gettext-rs",
  "gio",
  "glib 0.15.10",
+ "glob",
  "gstreamer",
  "gstreamer-player",
  "gtk4",
diff --git a/podcasts-data/src/downloader.rs b/podcasts-data/src/downloader.rs
index e1a2050e..9949e24c 100644
--- a/podcasts-data/src/downloader.rs
+++ b/podcasts-data/src/downloader.rs
@@ -25,7 +25,7 @@ use tempdir::TempDir;
 use std::fs;
 use std::fs::{copy, remove_file, DirBuilder, File};
 use std::io::{BufWriter, Read, Write};
-use std::path::Path;
+use std::path::{Path, PathBuf};
 use std::sync::{Arc, Mutex};
 
 use crate::errors::DownloadError;
@@ -237,7 +237,37 @@ pub fn get_episode(
     Ok(())
 }
 
+fn determine_cover_dir(pd: &ShowCoverModel) -> PathBuf {
+    let mut cache_path = PODCASTS_CACHE.clone();
+    cache_path.push(pd.title());
+    cache_path
+}
+
+pub fn check_for_cached_cover(pd: &ShowCoverModel) -> Option<PathBuf> {
+    let cache_path = determine_cover_dir(pd);
+
+    // try to match the cover file
+    // FIXME: in case the cover changes filetype we will be matching the
+    // existing one instead of downloading the new one.
+    // Should probably make sure that 'cover.*' is removed when we
+    // download new files.
+    if let Ok(mut foo) = glob(&format!("{}/cover.*", cache_path.to_str().unwrap())) {
+        // For some reason there is no .first() method so nth(0) is used
+        let path = foo.nth(0).and_then(|x| x.ok());
+        return path;
+    }
+
+    return None;
+}
+
 pub fn cache_image(pd: &ShowCoverModel, download: bool) -> Result<String, DownloadError> {
+    if let Some(path) = check_for_cached_cover(pd) {
+        return Ok(path
+            .to_str()
+            .ok_or_else(|| DownloadError::InvalidCachedImageLocation)?
+            .to_owned());
+    }
+
     let url = pd
         .image_uri()
         .ok_or(DownloadError::NoImageLocation)?
@@ -247,29 +277,16 @@ pub fn cache_image(pd: &ShowCoverModel, download: bool) -> Result<String, Downlo
         return Err(DownloadError::NoImageLocation);
     }
 
-    let cache_path = PODCASTS_CACHE
+    let cache_path = determine_cover_dir(pd)
         .to_str()
-        .ok_or(DownloadError::InvalidCacheLocation)?;
-    let cache_download_fold = format!("{}{}", cache_path, pd.title().to_owned());
-
-    // Retrive existing cover paths with any file extension
-    if let Ok(mut paths) = glob(&format!("{}/cover.*", cache_download_fold)) {
-        let path = paths.next().and_then(|x| x.ok());
-        if let Some(p) = path {
-            return Ok(p
-                .to_str()
-                .ok_or(DownloadError::InvalidCachedImageLocation)?
-                .into());
-        }
-    };
+        .ok_or_else(|| DownloadError::InvalidCachedImageLocation)?
+        .to_owned();
 
     // Create the folders if they don't exist.
-    DirBuilder::new()
-        .recursive(true)
-        .create(&cache_download_fold)?;
+    DirBuilder::new().recursive(true).create(&cache_path)?;
 
     if download {
-        let path = download_into(&cache_download_fold, "cover", &url, None)?;
+        let path = download_into(&cache_path, "cover", &url, None)?;
         info!("Cached img into: {}", &path);
         Ok(path)
     } else {
diff --git a/podcasts-gtk/Cargo.toml b/podcasts-gtk/Cargo.toml
index 8639163e..fac3f7ff 100644
--- a/podcasts-gtk/Cargo.toml
+++ b/podcasts-gtk/Cargo.toml
@@ -9,6 +9,7 @@ chrono = "0.4"
 crossbeam-channel = "0.5.1"
 gst = { version = "0.18.0", package = "gstreamer" }
 gst-player = { version = "0.18.0", package = "gstreamer-player" }
+glob = "0.3"
 humansize = "1.1"
 lazy_static = "1.4"
 log = "0.4"
diff --git a/podcasts-gtk/src/utils.rs b/podcasts-gtk/src/utils.rs
index 3a757586..00e64fdc 100644
--- a/podcasts-gtk/src/utils.rs
+++ b/podcasts-gtk/src/utils.rs
@@ -324,6 +324,20 @@ lazy_static! {
 // TODO: maybe use something that would just scale to requested size?
 // todo Unit test.
 pub(crate) fn set_image_from_path(image: &gtk::Image, show_id: i32, size: u32) -> Result<()> {
+    // get the PodcastCover struct
+    let pd = dbqueries::get_podcast_cover_from_id(show_id)?;
+
+    // Check if the cover is already downloaded and set it
+    if pd.is_cached_image_valid(&CACHE_VALID_DURATION) {
+        if let Some(cached_path) = downloader::check_for_cached_cover(&pd) {
+            if let Ok(px) = Pixbuf::from_file_at_scale(&cached_path, size as i32, size as i32, true)
+            {
+                image.set_from_pixbuf(Some(&px));
+            }
+            return Ok(());
+        }
+    }
+
     // Check if there's an active download about this show cover.
     // If there is, a callback will be set so this function will be called again.
     // If it fails another download will be scheduled. WTF??? how is this not downlaoding infinitly
@@ -346,11 +360,9 @@ pub(crate) fn set_image_from_path(image: &gtk::Image, show_id: i32, size: u32) -
 
         THREADPOOL.spawn(move || {
             // This operation is polling and will block the thread till the download is finished
-            if let Ok(pd) = dbqueries::get_podcast_cover_from_id(show_id) {
-                sender
-                    .send(downloader::cache_image(&pd, true))
-                    .expect("channel was dropped unexpectedly");
-            }
+            sender
+                .send(downloader::cache_image(&pd, true))
+                .expect("channel was dropped unexpectedly");
 
             if let Ok(mut guard) = COVER_DL_REGISTRY.write() {
                 guard.remove(&show_id);
-- 
GitLab


From 69d8dbd5fb38ae3d9bee9bbcbe6660a2231808d7 Mon Sep 17 00:00:00 2001
From: Maximiliano Sandoval R <msandova@gnome.org>
Date: Thu, 7 Apr 2022 15:37:09 +0200
Subject: [PATCH 17/23] Port empty_view to AdwStatusPage

---
 podcasts-gtk/resources/gtk/empty_view.ui | 132 +++++++++--------------
 podcasts-gtk/src/widgets/empty_view.rs   |  15 +--
 2 files changed, 58 insertions(+), 89 deletions(-)

diff --git a/podcasts-gtk/resources/gtk/empty_view.ui b/podcasts-gtk/resources/gtk/empty_view.ui
index ae5bc222..e30d7970 100644
--- a/podcasts-gtk/resources/gtk/empty_view.ui
+++ b/podcasts-gtk/resources/gtk/empty_view.ui
@@ -24,90 +24,58 @@ Tobias Bernard
 
 -->
 <interface>
-  <template class="PdEmptyView" parent="GtkBox">
-    <property name="halign">center</property>
-    <property name="valign">center</property>
-    <property name="hexpand">True</property>
-    <property name="vexpand">True</property>
-    <property name="orientation">vertical</property>
-    <property name="spacing">6</property>
-    <property name="margin_start">6</property>
-    <property name="margin_end">6</property>
-    <property name="margin_top">6</property>
-    <property name="margin_bottom">6</property>
+  <template class="PdEmptyView" parent="AdwBin">
     <child>
-      <object class="GtkImage" id="image">
-        <property name="halign">center</property>
-        <property name="valign">center</property>
-        <property name="pixel_size">256</property>
-        <style>
-          <class name="dim-label"/>
-        </style>
-      </object>
-    </child>
-    <child>
-      <object class="GtkLabel">
-        <property name="halign">center</property>
-        <property name="valign">center</property>
-        <property name="label" translatable="yes">Get some shows</property>
-        <attributes>
-          <attribute name="weight" value="bold"/>
-          <attribute name="scale" value="1.4399999999999999"/>
-        </attributes>
-      </object>
-    </child>
-    <child>
-      <object class="GtkGrid">
-        <property name="row_spacing">6</property>
-        <property name="column_spacing">12</property>
-        <child>
-          <object class="GtkImage">
-            <property name="icon_name">list-add-symbolic</property>
-            <style>
-              <class name="dim-label"/>
-            </style>
-            <layout>
-              <property name="column">0</property>
-              <property name="row">0</property>
-            </layout>
-          </object>
-        </child>
-        <child>
-          <object class="GtkLabel">
-            <property name="halign">start</property>
-            <property name="label" translatable="yes">Add new shows via feed URL</property>
-            <style>
-              <class name="dim-label"/>
-            </style>
-            <layout>
-              <property name="column">1</property>
-              <property name="row">0</property>
-            </layout>
-          </object>
-        </child>
-        <child>
-          <object class="GtkImage">
-            <property name="icon_name">open-menu-symbolic</property>
-            <style>
-              <class name="dim-label"/>
-            </style>
-            <layout>
-              <property name="column">0</property>
-              <property name="row">1</property>
-            </layout>
-          </object>
-        </child>
+      <object class="AdwStatusPage" id="status_page">
+        <property name="title" translatable="yes">Get some shows</property>
         <child>
-          <object class="GtkLabel">
-            <property name="halign">start</property>
-            <property name="label" translatable="yes">Import shows from another device</property>
-            <style>
-              <class name="dim-label"/>
-            </style>
-            <layout>
-              <property name="column">1</property>
-              <property name="row">1</property>
-            </layout>
+          <object class="GtkBox">
+            <property name="orientation">vertical</property>
+            <property name="halign">center</property>
+            <property name="spacing">6</property>
+            <child>
+              <object class="GtkBox">
+                <property name="spacing">12</property>
+                <child>
+                  <object class="GtkImage">
+                    <property name="icon_name">list-add-symbolic</property>
+                    <style>
+                      <class name="dim-label"/>
+                    </style>
+                  </object>
+                </child>
+                <child>
+                  <object class="GtkLabel">
+                    <property name="label" translatable="yes">Add new shows via feed URL</property>
+                    <style>
+                      <class name="dim-label"/>
+                    </style>
+                  </object>
+                </child>
+              </object>
+            </child>
+            <child>
+              <object class="GtkBox">
+                <property name="spacing">12</property>
+                <child>
+                  <object class="GtkImage">
+                    <property name="icon_name">open-menu-symbolic</property>
+                    <style>
+                      <class name="dim-label"/>
+                    </style>
+                  </object>
+                </child>
+                <child>
+                  <object class="GtkLabel">
+                    <!-- <property name="halign">start</property> -->
+                    <property name="label" translatable="yes">Import shows from another device</property>
+                    <style>
+                      <class name="dim-label"/>
+                    </style>
+                  </object>
+                </child>
+              </object>
+            </child>
           </object>
         </child>
       </object>
diff --git a/podcasts-gtk/src/widgets/empty_view.rs b/podcasts-gtk/src/widgets/empty_view.rs
index 7f18748e..d2c7b7ca 100644
--- a/podcasts-gtk/src/widgets/empty_view.rs
+++ b/podcasts-gtk/src/widgets/empty_view.rs
@@ -19,7 +19,8 @@
 
 use crate::config::APP_ID;
 
-use gtk::prelude::*;
+use adw::prelude::*;
+use adw::subclass::prelude::*;
 use gtk::subclass::prelude::*;
 use gtk::{glib, CompositeTemplate};
 
@@ -27,18 +28,18 @@ use gtk::{glib, CompositeTemplate};
 #[template(resource = "/org/gnome/Podcasts/gtk/empty_view.ui")]
 pub struct EmptyViewPriv {
     #[template_child]
-    pub image: TemplateChild<gtk::Image>,
+    pub status_page: TemplateChild<adw::StatusPage>,
 }
 
 #[glib::object_subclass]
 impl ObjectSubclass for EmptyViewPriv {
     const NAME: &'static str = "PdEmptyView";
     type Type = EmptyView;
-    type ParentType = gtk::Box;
+    type ParentType = adw::Bin;
 
     fn new() -> Self {
         Self {
-            image: TemplateChild::default(),
+            status_page: TemplateChild::default(),
         }
     }
 
@@ -55,17 +56,17 @@ impl ObjectSubclass for EmptyViewPriv {
 impl ObjectImpl for EmptyViewPriv {
     fn constructed(&self, obj: &Self::Type) {
         self.parent_constructed(obj);
-        self.image
+        self.status_page
             .set_icon_name(Some(&format!("{}-symbolic", APP_ID)));
     }
 }
 
 impl WidgetImpl for EmptyViewPriv {}
-impl BoxImpl for EmptyViewPriv {}
+impl BinImpl for EmptyViewPriv {}
 
 glib::wrapper! {
     pub struct EmptyView(ObjectSubclass<EmptyViewPriv>)
-        @extends gtk::Widget, gtk::Box;
+        @extends gtk::Widget, adw::Bin;
 }
 
 impl Default for EmptyView {
-- 
GitLab


From 5ed93d602bed6fada67e5412fd364d9110b980f7 Mon Sep 17 00:00:00 2001
From: Maximiliano Sandoval R <msandova@gnome.org>
Date: Fri, 8 Apr 2022 10:52:43 +0200
Subject: [PATCH 18/23] show: Escape markup

If the show has ampers or similar it won't display anything.
---
 podcasts-gtk/src/widgets/show.rs | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/podcasts-gtk/src/widgets/show.rs b/podcasts-gtk/src/widgets/show.rs
index a30fff3c..3a962c0e 100644
--- a/podcasts-gtk/src/widgets/show.rs
+++ b/podcasts-gtk/src/widgets/show.rs
@@ -162,6 +162,7 @@ impl ShowWidget {
 
         let markup = html2text::from_read(text.as_bytes(), text.as_bytes().len());
         let markup = markup.trim();
+        let markup = glib::markup_escape_text(markup);
         let lines: Vec<&str> = markup.lines().collect();
 
         if markup.is_empty() {
@@ -169,7 +170,7 @@ impl ShowWidget {
         } else {
             self_.description_stack.set_visible(true);
 
-            self_.description.set_markup(markup);
+            self_.description.set_markup(&markup);
             debug_assert!(!lines.is_empty());
             if !lines.is_empty() {
                 self_.description_short.set_label(lines[0]);
-- 
GitLab


From 27371283233cad4e97a22a7208d829e63704c90e Mon Sep 17 00:00:00 2001
From: Maximiliano Sandoval R <msandova@gnome.org>
Date: Fri, 8 Apr 2022 13:33:48 +0200
Subject: [PATCH 19/23] flatpak: Remove x11 permission

---
 org.gnome.Podcasts.Devel.json | 1 -
 1 file changed, 1 deletion(-)

diff --git a/org.gnome.Podcasts.Devel.json b/org.gnome.Podcasts.Devel.json
index c4d7b500..37fde40a 100644
--- a/org.gnome.Podcasts.Devel.json
+++ b/org.gnome.Podcasts.Devel.json
@@ -14,7 +14,6 @@
         "--device=dri",
         "--share=network",
         "--share=ipc",
-        "--socket=x11",
         "--socket=fallback-x11",
         "--socket=wayland",
         "--socket=pulseaudio"
-- 
GitLab


From 0607604afbabc4364504aab1a9051069d60698ec Mon Sep 17 00:00:00 2001
From: Jordan Petridis <jordan@centricular.com>
Date: Tue, 3 May 2022 01:14:58 +0300
Subject: [PATCH 20/23] p-gtk: remove halign=start from labels with
 elipsize=end

When you combine those two properties it can result in a label
that's elipsized immediately.
---
 podcasts-gtk/resources/gtk/empty_view.ui     | 1 -
 podcasts-gtk/resources/gtk/episode_widget.ui | 2 --
 podcasts-gtk/resources/gtk/player_toolbar.ui | 4 ----
 3 files changed, 7 deletions(-)

diff --git a/podcasts-gtk/resources/gtk/empty_view.ui b/podcasts-gtk/resources/gtk/empty_view.ui
index e30d7970..cc9c04dc 100644
--- a/podcasts-gtk/resources/gtk/empty_view.ui
+++ b/podcasts-gtk/resources/gtk/empty_view.ui
@@ -67,7 +67,6 @@ Tobias Bernard
                 </child>
                 <child>
                   <object class="GtkLabel">
-                    <!-- <property name="halign">start</property> -->
                     <property name="label" translatable="yes">Import shows from another device</property>
                     <style>
                       <class name="dim-label"/>
diff --git a/podcasts-gtk/resources/gtk/episode_widget.ui b/podcasts-gtk/resources/gtk/episode_widget.ui
index ed3332e5..9350a9d0 100644
--- a/podcasts-gtk/resources/gtk/episode_widget.ui
+++ b/podcasts-gtk/resources/gtk/episode_widget.ui
@@ -128,7 +128,6 @@ Tobias Bernard
                 </child>
                 <child>
                   <object class="GtkLabel" id="local_size">
-                    <property name="halign">start</property>
                     <property name="visible">False</property>
                     <property name="label">0 MB</property>
                     <property name="ellipsize">end</property>
@@ -154,7 +153,6 @@ Tobias Bernard
                 </child>
                 <child>
                   <object class="GtkLabel" id="total_size">
-                    <property name="halign">start</property>
                     <property name="visible">False</property>
                     <property name="label" translatable="yes">Calculating episode size…</property>
                     <property name="ellipsize">end</property>
diff --git a/podcasts-gtk/resources/gtk/player_toolbar.ui b/podcasts-gtk/resources/gtk/player_toolbar.ui
index b9b161f1..d9b15a1a 100644
--- a/podcasts-gtk/resources/gtk/player_toolbar.ui
+++ b/podcasts-gtk/resources/gtk/player_toolbar.ui
@@ -114,7 +114,6 @@ Tobias Bernard
                             <property name="orientation">vertical</property>
                             <child>
                               <object class="GtkLabel" id="show_label">
-                                <property name="halign">start</property>
                                 <property name="label">Show Title</property>
                                 <property name="wrap">True</property>
                                 <property name="ellipsize">end</property>
@@ -127,7 +126,6 @@ Tobias Bernard
                             </child>
                             <child>
                               <object class="GtkLabel" id="episode_label">
-                                <property name="halign">start</property>
                                 <property name="label">Episode Title</property>
                                 <property name="wrap">True</property>
                                 <property name="ellipsize">end</property>
@@ -224,7 +222,6 @@ Tobias Bernard
                         <property name="hexpand">True</property>
                         <child>
                           <object class="GtkLabel" id="show_label_small">
-                            <property name="halign">start</property>
                             <property name="label">Show Title</property>
                             <property name="ellipsize">end</property>
                             <property name="xalign">0</property>
@@ -235,7 +232,6 @@ Tobias Bernard
                         </child>
                         <child>
                           <object class="GtkLabel" id="episode_label_small">
-                            <property name="halign">start</property>
                             <property name="label">Episode Title</property>
                             <property name="ellipsize">end</property>
                             <property name="xalign">0</property>
-- 
GitLab


From 531b67cbb7994dfbbd2ae05b0aafa71e1861505a Mon Sep 17 00:00:00 2001
From: Jordan Petridis <jordan@centricular.com>
Date: Tue, 3 May 2022 02:08:07 +0300
Subject: [PATCH 21/23] Replace lazy_static! with OnceCell Lazy

---
 Cargo.lock                              |   3 +-
 podcasts-data/Cargo.toml                |   2 +-
 podcasts-data/src/database.rs           |  24 +--
 podcasts-data/src/lib.rs                |  47 ++--
 podcasts-data/src/models/new_episode.rs | 275 ++++++++++++------------
 podcasts-data/src/models/new_show.rs    | 179 ++++++++-------
 podcasts-data/src/models/show.rs        |  61 +++---
 podcasts-data/src/pipeline.rs           |  12 +-
 podcasts-gtk/Cargo.toml                 |   1 -
 podcasts-gtk/src/main.rs                |   2 -
 podcasts-gtk/src/manager.rs             |  12 +-
 podcasts-gtk/src/utils.rs               |  30 ++-
 podcasts-gtk/src/widgets/episode.rs     |  37 ++--
 podcasts-gtk/src/widgets/player.rs      |   5 +-
 14 files changed, 338 insertions(+), 352 deletions(-)

diff --git a/Cargo.lock b/Cargo.lock
index 985bb4b0..d199a8c2 100644
--- a/Cargo.lock
+++ b/Cargo.lock
@@ -1896,12 +1896,12 @@ dependencies = [
  "http",
  "hyper",
  "hyper-tls",
- "lazy_static",
  "log",
  "maplit",
  "mime_guess",
  "native-tls",
  "num_cpus",
+ "once_cell",
  "pretty_assertions",
  "rand 0.8.5",
  "rayon",
@@ -1934,7 +1934,6 @@ dependencies = [
  "html2text",
  "html5ever",
  "humansize",
- "lazy_static",
  "libadwaita",
  "log",
  "markup5ever_rcdom",
diff --git a/podcasts-data/Cargo.toml b/podcasts-data/Cargo.toml
index 52ed8bce..e0132781 100644
--- a/podcasts-data/Cargo.toml
+++ b/podcasts-data/Cargo.toml
@@ -8,7 +8,6 @@ edition = "2018"
 ammonia = "3.1"
 chrono = "0.4"
 derive_builder = "0.9"
-lazy_static = "1.4"
 log = "0.4"
 rayon = "1.3"
 rfc822_sanitizer = "0.3"
@@ -30,6 +29,7 @@ mime_guess = "2.0"
 tempdir = "0.3"
 glob = "0.3"
 crossbeam-channel = "0.5.1"
+once_cell = "1.9"
 
 [dependencies.diesel]
 features = ["chrono", "sqlite", "r2d2"]
diff --git a/podcasts-data/src/database.rs b/podcasts-data/src/database.rs
index 4a2d12b9..ca07908e 100644
--- a/podcasts-data/src/database.rs
+++ b/podcasts-data/src/database.rs
@@ -24,6 +24,8 @@ use diesel::prelude::*;
 use diesel::r2d2;
 use diesel::r2d2::ConnectionManager;
 
+use once_cell::sync::Lazy;
+
 use std::io;
 use std::path::PathBuf;
 
@@ -36,23 +38,21 @@ type Pool = r2d2::Pool<ConnectionManager<SqliteConnection>>;
 
 embed_migrations!("migrations/");
 
-lazy_static! {
-    static ref POOL: Pool = init_pool(DB_PATH.to_str().unwrap());
-}
+static POOL: Lazy<Pool> = Lazy::new(|| init_pool(DB_PATH.to_str().unwrap()));
 
 #[cfg(not(test))]
-lazy_static! {
-    static ref DB_PATH: PathBuf = xdg_dirs::PODCASTS_XDG
+static DB_PATH: Lazy<PathBuf> = Lazy::new(|| {
+    xdg_dirs::PODCASTS_XDG
         .place_data_file("podcasts.db")
-        .unwrap();
-}
+        .unwrap()
+});
 
 #[cfg(test)]
-lazy_static! {
-    pub(crate) static ref TEMPDIR: tempdir::TempDir =
-        tempdir::TempDir::new("podcasts_unit_test").unwrap();
-    static ref DB_PATH: PathBuf = TEMPDIR.path().join("podcasts.db");
-}
+pub(crate) static TEMPDIR: Lazy<tempdir::TempDir> =
+    Lazy::new(|| tempdir::TempDir::new("podcasts_unit_test").unwrap());
+
+#[cfg(test)]
+static DB_PATH: Lazy<PathBuf> = Lazy::new(|| TEMPDIR.path().join("podcasts.db"));
 
 /// Get an r2d2 `SqliteConnection`.
 pub(crate) fn connection() -> Pool {
diff --git a/podcasts-data/src/lib.rs b/podcasts-data/src/lib.rs
index a9949eb7..c1194aa8 100644
--- a/podcasts-data/src/lib.rs
+++ b/podcasts-data/src/lib.rs
@@ -75,8 +75,6 @@ extern crate diesel;
 #[macro_use]
 extern crate diesel_migrations;
 #[macro_use]
-extern crate lazy_static;
-#[macro_use]
 extern crate log;
 
 pub mod database;
@@ -107,31 +105,34 @@ pub const USER_AGENT: &str = "Mozilla/5.0 (Windows NT 10.0; rv:78.0) Gecko/20100
 /// [XDG Base Directory](https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html) Paths.
 #[allow(missing_debug_implementations)]
 pub mod xdg_dirs {
+    use once_cell::sync::Lazy;
     use std::path::PathBuf;
 
-    lazy_static! {
-        pub(crate) static ref PODCASTS_XDG: xdg::BaseDirectories = {
-            xdg::BaseDirectories::with_prefix("gnome-podcasts").unwrap()
-        };
+    pub(crate) static PODCASTS_XDG: Lazy<xdg::BaseDirectories> =
+        Lazy::new(|| xdg::BaseDirectories::with_prefix("gnome-podcasts").unwrap());
 
-        /// XDG_DATA Directory `Pathbuf`.
-        pub static ref PODCASTS_DATA: PathBuf = {
-            PODCASTS_XDG.create_data_directory(PODCASTS_XDG.get_data_home()).unwrap()
-        };
+    /// XDG_DATA Directory `Pathbuf`.
+    pub static PODCASTS_DATA: Lazy<PathBuf> = Lazy::new(|| {
+        PODCASTS_XDG
+            .create_data_directory(PODCASTS_XDG.get_data_home())
+            .unwrap()
+    });
 
-        /// XDG_CONFIG Directory `Pathbuf`.
-        pub static ref PODCASTS_CONFIG: PathBuf = {
-            PODCASTS_XDG.create_config_directory(PODCASTS_XDG.get_config_home()).unwrap()
-        };
+    /// XDG_CONFIG Directory `Pathbuf`.
+    pub static PODCASTS_CONFIG: Lazy<PathBuf> = Lazy::new(|| {
+        PODCASTS_XDG
+            .create_config_directory(PODCASTS_XDG.get_config_home())
+            .unwrap()
+    });
 
-        /// XDG_CACHE Directory `Pathbuf`.
-        pub static ref PODCASTS_CACHE: PathBuf = {
-            PODCASTS_XDG.create_cache_directory(PODCASTS_XDG.get_cache_home()).unwrap()
-        };
+    /// XDG_CACHE Directory `Pathbuf`.
+    pub static PODCASTS_CACHE: Lazy<PathBuf> = Lazy::new(|| {
+        PODCASTS_XDG
+            .create_cache_directory(PODCASTS_XDG.get_cache_home())
+            .unwrap()
+    });
 
-        /// GNOME Podcasts Download Directory `PathBuf`.
-        pub static ref DL_DIR: PathBuf = {
-            PODCASTS_XDG.create_data_directory("Downloads").unwrap()
-        };
-    }
+    /// GNOME Podcasts Download Directory `PathBuf`.
+    pub static DL_DIR: Lazy<PathBuf> =
+        Lazy::new(|| PODCASTS_XDG.create_data_directory("Downloads").unwrap());
 }
diff --git a/podcasts-data/src/models/new_episode.rs b/podcasts-data/src/models/new_episode.rs
index 7c3120ec..6d4ff527 100644
--- a/podcasts-data/src/models/new_episode.rs
+++ b/podcasts-data/src/models/new_episode.rs
@@ -340,6 +340,7 @@ mod tests {
     use crate::models::new_episode::{NewEpisodeMinimal, NewEpisodeMinimalBuilder};
     use crate::models::*;
     use anyhow::Result;
+    use once_cell::sync::Lazy;
 
     use rss::Channel;
 
@@ -350,58 +351,57 @@ mod tests {
     // Especially if you find an *interesting* generated feed.
 
     // Known prebuilt expected objects.
-    lazy_static! {
-        static ref EXPECTED_MINIMAL_INTERCEPTED_1: NewEpisodeMinimal = {
-            NewEpisodeMinimalBuilder::default()
-                .title("The Super Bowl of Racism")
-                .uri(Some(String::from(
-                    "http://traffic.megaphone.fm/PPY6458293736.mp3",
-                )))
-                .guid(Some(String::from("7df4070a-9832-11e7-adac-cb37b05d5e24")))
-                .epoch(1505296800)
-                .length(Some(66738886))
-                .duration(Some(4171))
-                .show_id(42)
-                .build()
-                .unwrap()
-        };
-        static ref EXPECTED_MINIMAL_INTERCEPTED_2: NewEpisodeMinimal = {
-            NewEpisodeMinimalBuilder::default()
-                .title("Atlas Golfed — U.S.-Backed Think Tanks Target Latin America")
-                .uri(Some(String::from(
-                    "http://traffic.megaphone.fm/FL5331443769.mp3",
-                )))
-                .guid(Some(String::from("7c207a24-e33f-11e6-9438-eb45dcf36a1d")))
-                .epoch(1502272800)
-                .length(Some(67527575))
-                .duration(Some(4415))
-                .show_id(42)
-                .build()
-                .unwrap()
-        };
-        static ref EXPECTED_INTERCEPTED_1: NewEpisode = {
-            let descr = "NSA whistleblower Edward Snowden discusses the massive Equifax data \
+    static EXPECTED_MINIMAL_INTERCEPTED_1: Lazy<NewEpisodeMinimal> = Lazy::new(|| {
+        NewEpisodeMinimalBuilder::default()
+            .title("The Super Bowl of Racism")
+            .uri(Some(String::from(
+                "http://traffic.megaphone.fm/PPY6458293736.mp3",
+            )))
+            .guid(Some(String::from("7df4070a-9832-11e7-adac-cb37b05d5e24")))
+            .epoch(1505296800)
+            .length(Some(66738886))
+            .duration(Some(4171))
+            .show_id(42)
+            .build()
+            .unwrap()
+    });
+    static EXPECTED_MINIMAL_INTERCEPTED_2: Lazy<NewEpisodeMinimal> = Lazy::new(|| {
+        NewEpisodeMinimalBuilder::default()
+            .title("Atlas Golfed — U.S.-Backed Think Tanks Target Latin America")
+            .uri(Some(String::from(
+                "http://traffic.megaphone.fm/FL5331443769.mp3",
+            )))
+            .guid(Some(String::from("7c207a24-e33f-11e6-9438-eb45dcf36a1d")))
+            .epoch(1502272800)
+            .length(Some(67527575))
+            .duration(Some(4415))
+            .show_id(42)
+            .build()
+            .unwrap()
+    });
+    static EXPECTED_INTERCEPTED_1: Lazy<NewEpisode> = Lazy::new(|| {
+        let descr = "NSA whistleblower Edward Snowden discusses the massive Equifax data \
                          breach and allegations of Russian interference in the US election. \
                          Commentator Shaun King explains his call for a boycott of the NFL and \
                          talks about his campaign to bring violent neo-Nazis to justice. Rapper \
                          Open Mike Eagle performs.";
 
-            NewEpisodeBuilder::default()
-                .title("The Super Bowl of Racism")
-                .uri(Some(String::from(
-                    "http://traffic.megaphone.fm/PPY6458293736.mp3",
-                )))
-                .description(Some(String::from(descr)))
-                .guid(Some(String::from("7df4070a-9832-11e7-adac-cb37b05d5e24")))
-                .length(Some(66738886))
-                .epoch(1505296800)
-                .duration(Some(4171))
-                .show_id(42)
-                .build()
-                .unwrap()
-        };
-        static ref EXPECTED_INTERCEPTED_2: NewEpisode = {
-            let descr = "This week on Intercepted: Jeremy gives an update on the aftermath of \
+        NewEpisodeBuilder::default()
+            .title("The Super Bowl of Racism")
+            .uri(Some(String::from(
+                "http://traffic.megaphone.fm/PPY6458293736.mp3",
+            )))
+            .description(Some(String::from(descr)))
+            .guid(Some(String::from("7df4070a-9832-11e7-adac-cb37b05d5e24")))
+            .length(Some(66738886))
+            .epoch(1505296800)
+            .duration(Some(4171))
+            .show_id(42)
+            .build()
+            .unwrap()
+    });
+    static EXPECTED_INTERCEPTED_2: Lazy<NewEpisode> = Lazy::new(|| {
+        let descr = "This week on Intercepted: Jeremy gives an update on the aftermath of \
                          Blackwater’s 2007 massacre of Iraqi civilians. Intercept reporter Lee \
                          Fang lays out how a network of libertarian think tanks called the Atlas \
                          Network is insidiously shaping political infrastructure in Latin \
@@ -410,106 +410,105 @@ mod tests {
                          Lizardo of the Caracas-based band, La Pequeña Revancha, talk about her \
                          music and hopes for Venezuela.";
 
-            NewEpisodeBuilder::default()
-                .title("Atlas Golfed — U.S.-Backed Think Tanks Target Latin America")
-                .uri(Some(String::from(
-                    "http://traffic.megaphone.fm/FL5331443769.mp3",
-                )))
-                .description(Some(String::from(descr)))
-                .guid(Some(String::from("7c207a24-e33f-11e6-9438-eb45dcf36a1d")))
-                .length(Some(67527575))
-                .epoch(1502272800)
-                .duration(Some(4415))
-                .show_id(42)
-                .build()
-                .unwrap()
-        };
-        static ref UPDATED_DURATION_INTERCEPTED_1: NewEpisode = {
-            NewEpisodeBuilder::default()
-                .title("The Super Bowl of Racism")
-                .uri(Some(String::from(
-                    "http://traffic.megaphone.fm/PPY6458293736.mp3",
-                )))
-                .description(Some(String::from("New description")))
-                .guid(Some(String::from("7df4070a-9832-11e7-adac-cb37b05d5e24")))
-                .length(Some(66738886))
-                .epoch(1505296800)
-                .duration(Some(424242))
-                .show_id(42)
-                .build()
-                .unwrap()
-        };
-        static ref EXPECTED_MINIMAL_LUP_1: NewEpisodeMinimal = {
-            NewEpisodeMinimalBuilder::default()
-                .title("Hacking Devices with Kali Linux | LUP 214")
-                .uri(Some(String::from(
-                    "http://www.podtrac.com/pts/redirect.mp3/traffic.libsyn.com/jnite/lup-0214.mp3",
-                )))
-                .guid(Some(String::from("78A682B4-73E8-47B8-88C0-1BE62DD4EF9D")))
-                .length(Some(46479789))
-                .epoch(1505280282)
-                .duration(Some(5733))
-                .show_id(42)
-                .build()
-                .unwrap()
-        };
-        static ref EXPECTED_MINIMAL_LUP_2: NewEpisodeMinimal = {
-            NewEpisodeMinimalBuilder::default()
-                .title("Gnome Does it Again | LUP 213")
-                .uri(Some(String::from(
-                    "http://www.podtrac.com/pts/redirect.mp3/traffic.libsyn.com/jnite/lup-0213.mp3",
-                )))
-                .guid(Some(String::from("1CE57548-B36C-4F14-832A-5D5E0A24E35B")))
-                .epoch(1504670247)
-                .length(Some(36544272))
-                .duration(Some(4491))
-                .show_id(42)
-                .build()
-                .unwrap()
-        };
-        static ref EXPECTED_LUP_1: NewEpisode = {
-            let descr = "Audit your network with a couple of easy commands on Kali Linux. Chris \
+        NewEpisodeBuilder::default()
+            .title("Atlas Golfed — U.S.-Backed Think Tanks Target Latin America")
+            .uri(Some(String::from(
+                "http://traffic.megaphone.fm/FL5331443769.mp3",
+            )))
+            .description(Some(String::from(descr)))
+            .guid(Some(String::from("7c207a24-e33f-11e6-9438-eb45dcf36a1d")))
+            .length(Some(67527575))
+            .epoch(1502272800)
+            .duration(Some(4415))
+            .show_id(42)
+            .build()
+            .unwrap()
+    });
+    static UPDATED_DURATION_INTERCEPTED_1: Lazy<NewEpisode> = Lazy::new(|| {
+        NewEpisodeBuilder::default()
+            .title("The Super Bowl of Racism")
+            .uri(Some(String::from(
+                "http://traffic.megaphone.fm/PPY6458293736.mp3",
+            )))
+            .description(Some(String::from("New description")))
+            .guid(Some(String::from("7df4070a-9832-11e7-adac-cb37b05d5e24")))
+            .length(Some(66738886))
+            .epoch(1505296800)
+            .duration(Some(424242))
+            .show_id(42)
+            .build()
+            .unwrap()
+    });
+    static EXPECTED_MINIMAL_LUP_1: Lazy<NewEpisodeMinimal> = Lazy::new(|| {
+        NewEpisodeMinimalBuilder::default()
+            .title("Hacking Devices with Kali Linux | LUP 214")
+            .uri(Some(String::from(
+                "http://www.podtrac.com/pts/redirect.mp3/traffic.libsyn.com/jnite/lup-0214.mp3",
+            )))
+            .guid(Some(String::from("78A682B4-73E8-47B8-88C0-1BE62DD4EF9D")))
+            .length(Some(46479789))
+            .epoch(1505280282)
+            .duration(Some(5733))
+            .show_id(42)
+            .build()
+            .unwrap()
+    });
+    static EXPECTED_MINIMAL_LUP_2: Lazy<NewEpisodeMinimal> = Lazy::new(|| {
+        NewEpisodeMinimalBuilder::default()
+            .title("Gnome Does it Again | LUP 213")
+            .uri(Some(String::from(
+                "http://www.podtrac.com/pts/redirect.mp3/traffic.libsyn.com/jnite/lup-0213.mp3",
+            )))
+            .guid(Some(String::from("1CE57548-B36C-4F14-832A-5D5E0A24E35B")))
+            .epoch(1504670247)
+            .length(Some(36544272))
+            .duration(Some(4491))
+            .show_id(42)
+            .build()
+            .unwrap()
+    });
+    static EXPECTED_LUP_1: Lazy<NewEpisode> = Lazy::new(|| {
+        let descr = "Audit your network with a couple of easy commands on Kali Linux. Chris \
                          decides to blow off a little steam by attacking his IoT devices, Wes has \
                          the scope on Equifax blaming open source &amp; the Beard just saved the \
                          show. It’s a really packed episode!";
 
-            NewEpisodeBuilder::default()
-                .title("Hacking Devices with Kali Linux | LUP 214")
-                .uri(Some(String::from(
-                    "http://www.podtrac.com/pts/redirect.mp3/traffic.libsyn.com/jnite/lup-0214.mp3",
-                )))
-                .description(Some(String::from(descr)))
-                .guid(Some(String::from("78A682B4-73E8-47B8-88C0-1BE62DD4EF9D")))
-                .length(Some(46479789))
-                .epoch(1505280282)
-                .duration(Some(5733))
-                .show_id(42)
-                .build()
-                .unwrap()
-        };
-        static ref EXPECTED_LUP_2: NewEpisode = {
-            let descr =
-                "<p>The Gnome project is about to solve one of our audience's biggest Wayland’s \
+        NewEpisodeBuilder::default()
+            .title("Hacking Devices with Kali Linux | LUP 214")
+            .uri(Some(String::from(
+                "http://www.podtrac.com/pts/redirect.mp3/traffic.libsyn.com/jnite/lup-0214.mp3",
+            )))
+            .description(Some(String::from(descr)))
+            .guid(Some(String::from("78A682B4-73E8-47B8-88C0-1BE62DD4EF9D")))
+            .length(Some(46479789))
+            .epoch(1505280282)
+            .duration(Some(5733))
+            .show_id(42)
+            .build()
+            .unwrap()
+    });
+    static EXPECTED_LUP_2: Lazy<NewEpisode> = Lazy::new(|| {
+        let descr =
+            "<p>The Gnome project is about to solve one of our audience's biggest Wayland’s \
                  concerns. But as the project takes on a new level of relevance, decisions for \
                  the next version of Gnome have us worried about the future.</p>\n\n<p>Plus we \
                  chat with Wimpy about the Ubuntu Rally in NYC, Microsoft’s sneaky move to turn \
                  Windows 10 into the “ULTIMATE LINUX RUNTIME”, community news &amp; more!</p>";
 
-            NewEpisodeBuilder::default()
-                .title("Gnome Does it Again | LUP 213")
-                .uri(Some(String::from(
-                    "http://www.podtrac.com/pts/redirect.mp3/traffic.libsyn.com/jnite/lup-0213.mp3",
-                )))
-                .description(Some(String::from(descr)))
-                .guid(Some(String::from("1CE57548-B36C-4F14-832A-5D5E0A24E35B")))
-                .length(Some(36544272))
-                .epoch(1504670247)
-                .duration(Some(4491))
-                .show_id(42)
-                .build()
-                .unwrap()
-        };
-    }
+        NewEpisodeBuilder::default()
+            .title("Gnome Does it Again | LUP 213")
+            .uri(Some(String::from(
+                "http://www.podtrac.com/pts/redirect.mp3/traffic.libsyn.com/jnite/lup-0213.mp3",
+            )))
+            .description(Some(String::from(descr)))
+            .guid(Some(String::from("1CE57548-B36C-4F14-832A-5D5E0A24E35B")))
+            .length(Some(36544272))
+            .epoch(1504670247)
+            .duration(Some(4491))
+            .show_id(42)
+            .build()
+            .unwrap()
+    });
 
     #[test]
     fn test_new_episode_minimal_intercepted() -> Result<()> {
diff --git a/podcasts-data/src/models/new_show.rs b/podcasts-data/src/models/new_show.rs
index 8c8bdd79..ebb05f88 100644
--- a/podcasts-data/src/models/new_show.rs
+++ b/podcasts-data/src/models/new_show.rs
@@ -209,6 +209,7 @@ mod tests {
     use super::*;
 
     use anyhow::Result;
+    use once_cell::sync::Lazy;
     use rss::Channel;
 
     use crate::database::truncate_db;
@@ -218,46 +219,45 @@ mod tests {
     use std::io::BufReader;
 
     // Pre-built expected NewShow structs.
-    lazy_static! {
-        static ref EXPECTED_INTERCEPTED: NewShow = {
-            let descr = "The people behind The Intercept’s fearless reporting and incisive \
+    static EXPECTED_INTERCEPTED: Lazy<NewShow> = Lazy::new(|| {
+        let descr = "The people behind The Intercept’s fearless reporting and incisive \
                          commentary—Jeremy Scahill, Glenn Greenwald, Betsy Reed and \
                          others—discuss the crucial issues of our time: national security, civil \
                          liberties, foreign policy, and criminal justice.  Plus interviews with \
                          artists, thinkers, and newsmakers who challenge our preconceptions about \
                          the world we live in.";
 
-            NewShowBuilder::default()
-                .title("Intercepted with Jeremy Scahill")
-                .link("https://theintercept.com/podcasts")
-                .description(descr)
-                .image_uri(Some(String::from(
-                    "http://static.megaphone.fm/podcasts/d5735a50-d904-11e6-8532-73c7de466ea6/image/\
+        NewShowBuilder::default()
+            .title("Intercepted with Jeremy Scahill")
+            .link("https://theintercept.com/podcasts")
+            .description(descr)
+            .image_uri(Some(String::from(
+                "http://static.megaphone.fm/podcasts/d5735a50-d904-11e6-8532-73c7de466ea6/image/\
                      uploads_2F1484252190700-qhn5krasklbce3dh-a797539282700ea0298a3a26f7e49b0b_\
-                     2FIntercepted_COVER%2B_281_29.png")
-                ))
-                .source_id(42)
-                .build()
-                .unwrap()
-        };
-        static ref EXPECTED_LUP: NewShow = {
-            let descr = "An open show powered by community LINUX Unplugged takes the best \
+                     2FIntercepted_COVER%2B_281_29.png",
+            )))
+            .source_id(42)
+            .build()
+            .unwrap()
+    });
+    static EXPECTED_LUP: Lazy<NewShow> = Lazy::new(|| {
+        let descr = "An open show powered by community LINUX Unplugged takes the best \
                          attributes of open collaboration and focuses them into a weekly \
                          lifestyle show about Linux.";
 
-            NewShowBuilder::default()
-                .title("LINUX Unplugged Podcast")
-                .link("http://www.jupiterbroadcasting.com/")
-                .description(descr)
-                .image_uri(Some(String::from(
-                    "http://www.jupiterbroadcasting.com/images/LASUN-Badge1400.jpg",
-                )))
-                .source_id(42)
-                .build()
-                .unwrap()
-        };
-        static ref EXPECTED_TIPOFF: NewShow = {
-            let desc = "<p>Welcome to The Tip Off- the podcast where we take you behind the \
+        NewShowBuilder::default()
+            .title("LINUX Unplugged Podcast")
+            .link("http://www.jupiterbroadcasting.com/")
+            .description(descr)
+            .image_uri(Some(String::from(
+                "http://www.jupiterbroadcasting.com/images/LASUN-Badge1400.jpg",
+            )))
+            .source_id(42)
+            .build()
+            .unwrap()
+    });
+    static EXPECTED_TIPOFF: Lazy<NewShow> = Lazy::new(|| {
+        let desc = "<p>Welcome to The Tip Off- the podcast where we take you behind the \
                         scenes of some of the best investigative journalism from recent years. \
                         Each episode we’ll be digging into an investigative scoop- hearing from \
                         the journalists behind the work as they tell us about the leads, the \
@@ -267,78 +267,77 @@ mod tests {
                         complicated detective work that goes into doing great investigative \
                         journalism- then this is the podcast for you.</p>";
 
-            NewShowBuilder::default()
-                .title("The Tip Off")
-                .link("http://www.acast.com/thetipoff")
-                .description(desc)
-                .image_uri(Some(String::from(
-                    "https://imagecdn.acast.com/image?h=1500&w=1500&source=http%3A%2F%2Fi1.sndcdn.\
+        NewShowBuilder::default()
+            .title("The Tip Off")
+            .link("http://www.acast.com/thetipoff")
+            .description(desc)
+            .image_uri(Some(String::from(
+                "https://imagecdn.acast.com/image?h=1500&w=1500&source=http%3A%2F%2Fi1.sndcdn.\
                      com%2Favatars-000317856075-a2coqz-original.jpg",
-                )))
-                .source_id(42)
-                .build()
-                .unwrap()
-        };
-        static ref EXPECTED_STARS: NewShow = {
-            let descr = "<p>The first audio drama from Tor Labs and Gideon Media, Steal the Stars \
+            )))
+            .source_id(42)
+            .build()
+            .unwrap()
+    });
+    static EXPECTED_STARS: Lazy<NewShow> = Lazy::new(|| {
+        let descr = "<p>The first audio drama from Tor Labs and Gideon Media, Steal the Stars \
                          is a gripping noir science fiction thriller in 14 episodes: Forbidden \
                          love, a crashed UFO, an alien body, and an impossible heist unlike any \
                          ever attempted - scripted by Mac Rogers, the award-winning playwright \
                          and writer of the multi-million download The Message and LifeAfter.</p>";
-            let img = "https://dfkfj8j276wwv.cloudfront.net/images/2c/5f/a0/1a/2c5fa01a-ae78-4a8c-\
+        let img = "https://dfkfj8j276wwv.cloudfront.net/images/2c/5f/a0/1a/2c5fa01a-ae78-4a8c-\
                        b183-7311d2e436c3/b3a4aa57a576bb662191f2a6bc2a436c8c4ae256ecffaff5c4c54fd42e\
                        923914941c264d01efb1833234b52c9530e67d28a8cebbe3d11a4bc0fbbdf13ecdf1c3.jpeg";
 
-            NewShowBuilder::default()
-                .title("Steal the Stars")
-                .link("http://tor-labs.com/")
-                .description(descr)
-                .image_uri(Some(String::from(img)))
-                .source_id(42)
-                .build()
-                .unwrap()
-        };
-        static ref EXPECTED_CODE: NewShow = {
-            let descr = "A podcast about humans and technology. Panelists: Coraline Ada Ehmke, \
+        NewShowBuilder::default()
+            .title("Steal the Stars")
+            .link("http://tor-labs.com/")
+            .description(descr)
+            .image_uri(Some(String::from(img)))
+            .source_id(42)
+            .build()
+            .unwrap()
+    });
+    static EXPECTED_CODE: Lazy<NewShow> = Lazy::new(|| {
+        let descr = "A podcast about humans and technology. Panelists: Coraline Ada Ehmke, \
                          David Brady, Jessica Kerr, Jay Bobo, Astrid Countee and Sam \
                          Livingston-Gray. Brought to you by @therubyrep.";
 
-            NewShowBuilder::default()
-                .title("Greater Than Code")
-                .link("https://www.greaterthancode.com/")
-                .description(descr)
-                .image_uri(Some(String::from(
-                    "http://www.greaterthancode.com/wp-content/uploads/2016/10/code1400-4.jpg",
-                )))
-                .source_id(42)
-                .build()
-                .unwrap()
-        };
-        static ref EXPECTED_ELLINOFRENEIA: NewShow = {
-            NewShowBuilder::default()
-                .title("Ελληνοφρένεια")
-                .link("https://ellinofreneia.sealabs.net/feed.rss")
-                .description("Ανεπίσημο feed της Ελληνοφρένειας")
-                .image_uri(Some("https://ellinofreneia.sealabs.net/logo.png".into()))
-                .source_id(42)
-                .build()
-                .unwrap()
-        };
-        static ref UPDATED_DESC_INTERCEPTED: NewShow = {
-            NewShowBuilder::default()
-                .title("Intercepted with Jeremy Scahill")
-                .link("https://theintercept.com/podcasts")
-                .description("New Description")
-                .image_uri(Some(String::from(
-                    "http://static.megaphone.fm/podcasts/d5735a50-d904-11e6-8532-73c7de466ea6/image/\
+        NewShowBuilder::default()
+            .title("Greater Than Code")
+            .link("https://www.greaterthancode.com/")
+            .description(descr)
+            .image_uri(Some(String::from(
+                "http://www.greaterthancode.com/wp-content/uploads/2016/10/code1400-4.jpg",
+            )))
+            .source_id(42)
+            .build()
+            .unwrap()
+    });
+    static EXPECTED_ELLINOFRENEIA: Lazy<NewShow> = Lazy::new(|| {
+        NewShowBuilder::default()
+            .title("Ελληνοφρένεια")
+            .link("https://ellinofreneia.sealabs.net/feed.rss")
+            .description("Ανεπίσημο feed της Ελληνοφρένειας")
+            .image_uri(Some("https://ellinofreneia.sealabs.net/logo.png".into()))
+            .source_id(42)
+            .build()
+            .unwrap()
+    });
+    static UPDATED_DESC_INTERCEPTED: Lazy<NewShow> = Lazy::new(|| {
+        NewShowBuilder::default()
+            .title("Intercepted with Jeremy Scahill")
+            .link("https://theintercept.com/podcasts")
+            .description("New Description")
+            .image_uri(Some(String::from(
+                "http://static.megaphone.fm/podcasts/d5735a50-d904-11e6-8532-73c7de466ea6/image/\
                      uploads_2F1484252190700-qhn5krasklbce3dh-a797539282700ea0298a3a26f7e49b0b_\
-                     2FIntercepted_COVER%2B_281_29.png")
-                ))
-                .source_id(42)
-                .build()
-                .unwrap()
-        };
-    }
+                     2FIntercepted_COVER%2B_281_29.png",
+            )))
+            .source_id(42)
+            .build()
+            .unwrap()
+    });
 
     #[test]
     fn test_new_podcast_intercepted() -> Result<()> {
diff --git a/podcasts-data/src/models/show.rs b/podcasts-data/src/models/show.rs
index 5ac8c642..603118f3 100644
--- a/podcasts-data/src/models/show.rs
+++ b/podcasts-data/src/models/show.rs
@@ -221,47 +221,46 @@ mod tests {
     use crate::dbqueries;
     use crate::models::{Insert, NewShow, NewShowBuilder, Update};
     use anyhow::Result;
+    use once_cell::sync::Lazy;
     use std::{thread, time};
 
-    lazy_static! {
-        static ref EXPECTED_INTERCEPTED: NewShow = {
-            let descr = "The people behind The Intercept’s fearless reporting and incisive \
+    static EXPECTED_INTERCEPTED: Lazy<NewShow> = Lazy::new(|| {
+        let descr = "The people behind The Intercept’s fearless reporting and incisive \
                          commentary—Jeremy Scahill, Glenn Greenwald, Betsy Reed and \
                          others—discuss the crucial issues of our time: national security, civil \
                          liberties, foreign policy, and criminal justice.  Plus interviews with \
                          artists, thinkers, and newsmakers who challenge our preconceptions about \
                          the world we live in.";
-            let image_uri =
-                "http://static.megaphone.fm/podcasts/d5735a50-d904-11e6-8532-73c7de466ea6/image/\
+        let image_uri =
+            "http://static.megaphone.fm/podcasts/d5735a50-d904-11e6-8532-73c7de466ea6/image/\
                  uploads_2F1484252190700-qhn5krasklbce3dh-a797539282700ea0298a3a26f7e49b0b_\
                  2FIntercepted_COVER%2B_281_29.png";
 
-            NewShowBuilder::default()
-                .title("Intercepted with Jeremy Scahill")
-                .link("https://theintercept.com/podcasts")
-                .description(descr)
-                .image_uri(String::from(image_uri))
-                .image_uri_hash(Some(vec![164, 62, 7, 221, 215, 202, 38, 41]))
-                .image_cached(Utc::now().naive_utc())
-                .source_id(42)
-                .build()
-                .unwrap()
-        };
-        static ref UPDATED_IMAGE_URI_INTERCEPTED: NewShow = {
-            let image_uri = "https://assets.fireside.fm/file/fireside-images/podcasts/images/f/f31a453c-fa15-491f-8618-3f71f1d565e5/cover.jpg?v=3";
-
-            NewShowBuilder::default()
-                .title("Intercepted with Jeremy Scahill")
-                .link("https://theintercept.com/podcasts")
-                .description(EXPECTED_INTERCEPTED.description())
-                .image_uri(String::from(image_uri))
-                .image_uri_hash(Some(vec![164, 62, 7, 221, 215, 202, 38, 41]))
-                .image_cached(EXPECTED_INTERCEPTED.image_cached().unwrap())
-                .source_id(42)
-                .build()
-                .unwrap()
-        };
-    }
+        NewShowBuilder::default()
+            .title("Intercepted with Jeremy Scahill")
+            .link("https://theintercept.com/podcasts")
+            .description(descr)
+            .image_uri(String::from(image_uri))
+            .image_uri_hash(Some(vec![164, 62, 7, 221, 215, 202, 38, 41]))
+            .image_cached(Utc::now().naive_utc())
+            .source_id(42)
+            .build()
+            .unwrap()
+    });
+    static UPDATED_IMAGE_URI_INTERCEPTED: Lazy<NewShow> = Lazy::new(|| {
+        let image_uri = "https://assets.fireside.fm/file/fireside-images/podcasts/images/f/f31a453c-fa15-491f-8618-3f71f1d565e5/cover.jpg?v=3";
+
+        NewShowBuilder::default()
+            .title("Intercepted with Jeremy Scahill")
+            .link("https://theintercept.com/podcasts")
+            .description(EXPECTED_INTERCEPTED.description())
+            .image_uri(String::from(image_uri))
+            .image_uri_hash(Some(vec![164, 62, 7, 221, 215, 202, 38, 41]))
+            .image_cached(EXPECTED_INTERCEPTED.image_cached().unwrap())
+            .source_id(42)
+            .build()
+            .unwrap()
+    });
 
     #[test]
     fn should_update_timestamp_when_update_image_cached_is_called_after_the_timestamp_has_expired(
diff --git a/podcasts-data/src/pipeline.rs b/podcasts-data/src/pipeline.rs
index 39a65171..b3a375cd 100644
--- a/podcasts-data/src/pipeline.rs
+++ b/podcasts-data/src/pipeline.rs
@@ -24,6 +24,8 @@ use hyper::client::connect::HttpConnector;
 use hyper::{Body, Client};
 use hyper_tls::HttpsConnector;
 
+use once_cell::sync::Lazy;
+
 use crate::errors::DataError;
 use crate::Source;
 
@@ -37,12 +39,10 @@ pub async fn pipeline<S>(sources: S)
 where
     S: IntoIterator<Item = Source>,
 {
-    lazy_static! {
-        static ref CLIENT: Client<HttpsConnector<HttpConnector>> = {
-            let https = HttpsConnector::new();
-            Client::builder().build::<_, Body>(https)
-        };
-    }
+    static CLIENT: Lazy<Client<HttpsConnector<HttpConnector>>> = Lazy::new(|| {
+        let https = HttpsConnector::new();
+        Client::builder().build::<_, Body>(https)
+    });
 
     let handles: Vec<_> = sources
         .into_iter()
diff --git a/podcasts-gtk/Cargo.toml b/podcasts-gtk/Cargo.toml
index fac3f7ff..f86166ce 100644
--- a/podcasts-gtk/Cargo.toml
+++ b/podcasts-gtk/Cargo.toml
@@ -11,7 +11,6 @@ gst = { version = "0.18.0", package = "gstreamer" }
 gst-player = { version = "0.18.0", package = "gstreamer-player" }
 glob = "0.3"
 humansize = "1.1"
-lazy_static = "1.4"
 log = "0.4"
 pretty_env_logger = "0.4"
 open = "2.0.1"
diff --git a/podcasts-gtk/src/main.rs b/podcasts-gtk/src/main.rs
index d1f07aa0..2394b14d 100644
--- a/podcasts-gtk/src/main.rs
+++ b/podcasts-gtk/src/main.rs
@@ -36,8 +36,6 @@
 )]
 #![allow(clippy::type_complexity)]
 
-#[macro_use]
-extern crate lazy_static;
 #[macro_use]
 extern crate log;
 
diff --git a/podcasts-gtk/src/manager.rs b/podcasts-gtk/src/manager.rs
index 5a191247..2165039d 100644
--- a/podcasts-gtk/src/manager.rs
+++ b/podcasts-gtk/src/manager.rs
@@ -18,6 +18,7 @@
 // SPDX-License-Identifier: GPL-3.0-or-later
 
 use anyhow::{anyhow, Result};
+use once_cell::sync::Lazy;
 
 use podcasts_data::dbqueries;
 use podcasts_data::downloader::{get_episode, DownloadProgress};
@@ -28,6 +29,11 @@ use std::sync::{Arc, Mutex, RwLock};
 // This is messy, undocumented and hacky af.
 // I am terrible at writing downloaders and download managers.
 
+pub(crate) static ACTIVE_DOWNLOADS: Lazy<Arc<RwLock<HashMap<i32, Arc<Mutex<Progress>>>>>> =
+    Lazy::new(|| Arc::new(RwLock::new(HashMap::new())));
+static DLPOOL: Lazy<rayon::ThreadPool> =
+    Lazy::new(|| rayon::ThreadPoolBuilder::new().build().unwrap());
+
 #[derive(Debug)]
 pub(crate) struct Progress {
     total_bytes: u64,
@@ -84,12 +90,6 @@ impl DownloadProgress for Progress {
     }
 }
 
-lazy_static! {
-    pub(crate) static ref ACTIVE_DOWNLOADS: Arc<RwLock<HashMap<i32, Arc<Mutex<Progress>>>>> =
-        Arc::new(RwLock::new(HashMap::new()));
-    static ref DLPOOL: rayon::ThreadPool = rayon::ThreadPoolBuilder::new().build().unwrap();
-}
-
 pub(crate) fn add(id: i32, directory: String) -> Result<()> {
     // Create a new `Progress` struct to keep track of dl progress.
     let prog = Arc::new(Mutex::new(Progress::default()));
diff --git a/podcasts-gtk/src/utils.rs b/podcasts-gtk/src/utils.rs
index 00e64fdc..4fd49b65 100644
--- a/podcasts-gtk/src/utils.rs
+++ b/podcasts-gtk/src/utils.rs
@@ -30,6 +30,7 @@ use gtk::Widget;
 use anyhow::{anyhow, Result};
 use chrono::prelude::*;
 use crossbeam_channel::unbounded;
+use once_cell::sync::Lazy;
 use rayon;
 use regex::Regex;
 use serde_json::Value;
@@ -241,9 +242,8 @@ fn ease_out_cubic(t: f64) -> f64 {
     p * p * p + 1f64
 }
 
-lazy_static! {
-    static ref IGNORESHOWS: Arc<Mutex<HashSet<i32>>> = Arc::new(Mutex::new(HashSet::new()));
-}
+static IGNORESHOWS: Lazy<Arc<Mutex<HashSet<i32>>>> =
+    Lazy::new(|| Arc::new(Mutex::new(HashSet::new())));
 
 pub(crate) fn ignore_show(id: i32) -> Result<bool> {
     IGNORESHOWS
@@ -313,14 +313,14 @@ pub(crate) fn refresh_feed(source: Option<Vec<Source>>, sender: Sender<Action>)
     }));
 }
 
-lazy_static! {
-    static ref COVER_DL_REGISTRY: RwLock<HashSet<i32>> = RwLock::new(HashSet::new());
-    static ref THREADPOOL: rayon::ThreadPool = rayon::ThreadPoolBuilder::new().build().unwrap();
-    static ref CACHE_VALID_DURATION: chrono::Duration = chrono::Duration::weeks(4);
-}
+static COVER_DL_REGISTRY: Lazy<RwLock<HashSet<i32>>> = Lazy::new(|| RwLock::new(HashSet::new()));
+static THREADPOOL: Lazy<rayon::ThreadPool> =
+    Lazy::new(|| rayon::ThreadPoolBuilder::new().build().unwrap());
+static CACHE_VALID_DURATION: Lazy<chrono::Duration> = Lazy::new(|| chrono::Duration::weeks(4));
 
 // GObjects do not implement Send trait, so Fragile is a way around that.
 // Also lazy_static requires Sync trait, so that's what the mutexes are.
+// FIXME: we can probably use unsync::Lazy now
 // TODO: maybe use something that would just scale to requested size?
 // todo Unit test.
 pub(crate) fn set_image_from_path(image: &gtk::Image, show_id: i32, size: u32) -> Result<()> {
@@ -413,9 +413,7 @@ pub(crate) async fn itunes_to_rss(url: &str) -> Result<String> {
 }
 
 fn itunes_id_from_url(url: &str) -> Option<u32> {
-    lazy_static! {
-        static ref RE: Regex = Regex::new(r"/id([0-9]+)").unwrap();
-    }
+    static RE: Lazy<Regex> = Lazy::new(|| Regex::new(r"/id([0-9]+)").unwrap());
 
     // Get the itunes id from the url
     let itunes_id = RE.captures_iter(url).next()?.get(1)?.as_str();
@@ -461,12 +459,10 @@ pub(crate) async fn soundcloud_to_rss(url: &Url) -> Result<Url> {
 /// The id's are 0 if none was found.
 /// If fetching the html page fails an Error is returned.
 async fn soundcloud_lookup_id(url: &Url) -> Option<(u64, u64)> {
-    lazy_static! {
-        static ref RE_U: Regex = Regex::new(r"soundcloud://users:([0-9]+)").unwrap();
-    }
-    lazy_static! {
-        static ref RE_P: Regex = Regex::new(r"soundcloud://playlists:([0-9]+)").unwrap();
-    }
+    static RE_U: Lazy<Regex> = Lazy::new(|| Regex::new(r"soundcloud://users:([0-9]+)").unwrap());
+    static RE_P: Lazy<Regex> =
+        Lazy::new(|| Regex::new(r"soundcloud://playlists:([0-9]+)").unwrap());
+
     let url_str = url.to_string();
     let response_text = reqwest::get(&url_str).await.ok()?.text().await.ok()?;
     let user_id = RE_U
diff --git a/podcasts-gtk/src/widgets/episode.rs b/podcasts-gtk/src/widgets/episode.rs
index 0948de06..bf46863f 100644
--- a/podcasts-gtk/src/widgets/episode.rs
+++ b/podcasts-gtk/src/widgets/episode.rs
@@ -24,6 +24,7 @@ use anyhow::{anyhow, Result};
 use chrono::prelude::*;
 use glib::Sender;
 use humansize::{file_size_opts as size_opts, FileSize};
+use once_cell::sync::Lazy;
 
 use podcasts_data::dbqueries;
 use podcasts_data::downloader::DownloadProgress;
@@ -40,23 +41,21 @@ use std::time::Duration;
 
 use crate::i18n::i18n_f;
 
-lazy_static! {
-    static ref SIZE_OPTS: Arc<size_opts::FileSizeOpts> =  {
-        // Declare a custom humansize option struct
-        // See: https://docs.rs/humansize/1.0.2/humansize/file_size_opts/struct.FileSizeOpts.html
-        Arc::new(size_opts::FileSizeOpts {
-            divider: size_opts::Kilo::Binary,
-            units: size_opts::Kilo::Decimal,
-            decimal_places: 0,
-            decimal_zeroes: 0,
-            fixed_at: size_opts::FixedAt::No,
-            long_units: false,
-            space: true,
-            suffix: "",
-            allow_negative: false,
-        })
-    };
-}
+static SIZE_OPTS: Lazy<Arc<size_opts::FileSizeOpts>> = Lazy::new(|| {
+    // Declare a custom humansize option struct
+    // See: https://docs.rs/humansize/1.0.2/humansize/file_size_opts/struct.FileSizeOpts.html
+    Arc::new(size_opts::FileSizeOpts {
+        divider: size_opts::Kilo::Binary,
+        units: size_opts::Kilo::Decimal,
+        decimal_places: 0,
+        decimal_zeroes: 0,
+        fixed_at: size_opts::FixedAt::No,
+        long_units: false,
+        space: true,
+        suffix: "",
+        allow_negative: false,
+    })
+});
 
 #[derive(Clone, Debug)]
 pub(crate) struct EpisodeWidget {
@@ -117,9 +116,7 @@ impl InfoLabels {
 
     // Set the date label of the episode widget.
     fn set_date(&self, epoch: i32) {
-        lazy_static! {
-            static ref NOW: DateTime<Utc> = Utc::now();
-        };
+        static NOW: Lazy<DateTime<Utc>> = Lazy::new(|| Utc::now());
 
         let ts = Utc.timestamp(i64::from(epoch), 0);
 
diff --git a/podcasts-gtk/src/widgets/player.rs b/podcasts-gtk/src/widgets/player.rs
index a9ded5d3..c030b530 100644
--- a/podcasts-gtk/src/widgets/player.rs
+++ b/podcasts-gtk/src/widgets/player.rs
@@ -29,6 +29,7 @@ use anyhow::Result;
 use chrono::{prelude::*, NaiveTime};
 use fragile::Fragile;
 use glib::Sender;
+use once_cell::sync::Lazy;
 use url::Url;
 
 use podcasts_data::{dbqueries, downloader, EpisodeWidgetModel, ShowCoverModel, USER_AGENT};
@@ -544,9 +545,7 @@ impl PlayerWidget {
     }
 
     fn smart_rewind(&self) -> Option<()> {
-        lazy_static! {
-            static ref LAST_KNOWN_EPISODE: Mutex<Option<i32>> = Mutex::new(None);
-        };
+        static LAST_KNOWN_EPISODE: Lazy<Mutex<Option<i32>>> = Lazy::new(|| Mutex::new(None));
 
         // Figure out the time delta, in seconds, between the last pause and now
         let now = Local::now();
-- 
GitLab


From deb3cc68bbcc6aa324d11e65ed5c55d36a35969d Mon Sep 17 00:00:00 2001
From: Jordan Petridis <jordan@centricular.com>
Date: Tue, 3 May 2022 02:12:26 +0300
Subject: [PATCH 22/23] utils: make FileChooser dialogs modal

---
 podcasts-gtk/src/utils.rs | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/podcasts-gtk/src/utils.rs b/podcasts-gtk/src/utils.rs
index 4fd49b65..f149a1c2 100644
--- a/podcasts-gtk/src/utils.rs
+++ b/podcasts-gtk/src/utils.rs
@@ -494,6 +494,8 @@ pub(crate) fn on_import_clicked(window: &gtk::ApplicationWindow, sender: &Sender
         None,
     );
 
+    dialog.set_modal(true);
+
     // Set a filter to show only xml files
     let filter = FileFilter::new();
     FileFilter::set_name(&filter, Some(i18n("OPML file").as_str()));
@@ -541,6 +543,8 @@ pub(crate) fn on_export_clicked(window: &gtk::ApplicationWindow, sender: &Sender
         Some(i18n("_Cancel").as_str()),
     );
 
+    dialog.set_modal(true);
+
     // Translators: This is the string of the suggested name for the exported opml file
     dialog.set_current_name(&format!("{}.opml", i18n("gnome-podcasts-exported-shows")));
 
-- 
GitLab


From ea9bf1357c2d46ae9972ad7d1ba17d8cba5481b6 Mon Sep 17 00:00:00 2001
From: Maximiliano Sandoval R <msandova@protonmail.com>
Date: Wed, 15 Jun 2022 10:49:43 +0200
Subject: [PATCH 23/23] episode_widget: Add flat style to row buttons

---
 podcasts-gtk/resources/gtk/episode_widget.ui | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/podcasts-gtk/resources/gtk/episode_widget.ui b/podcasts-gtk/resources/gtk/episode_widget.ui
index 9350a9d0..a88aab5e 100644
--- a/podcasts-gtk/resources/gtk/episode_widget.ui
+++ b/podcasts-gtk/resources/gtk/episode_widget.ui
@@ -181,6 +181,9 @@ Tobias Bernard
                 <property name="halign">center</property>
                 <property name="valign">center</property>
                 <property name="icon_name">media-playback-start-symbolic</property>
+                <style>
+                  <class name="flat"/>
+                </style>
               </object>
             </child>
             <child>
@@ -190,6 +193,9 @@ Tobias Bernard
                 <property name="halign">center</property>
                 <property name="valign">center</property>
                 <property name="icon_name">media-playback-stop-symbolic</property>
+                <style>
+                  <class name="flat"/>
+                </style>
               </object>
             </child>
             <child>
@@ -199,6 +205,9 @@ Tobias Bernard
                 <property name="halign">center</property>
                 <property name="valign">center</property>
                 <property name="icon_name">document-save-symbolic</property>
+                <style>
+                  <class name="flat"/>
+                </style>
               </object>
             </child>
           </object>
-- 
GitLab

